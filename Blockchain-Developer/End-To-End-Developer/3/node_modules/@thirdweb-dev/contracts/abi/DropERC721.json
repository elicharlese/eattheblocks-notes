{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "claimConditions",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "MaxTotalSupplyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "restriction",
          "type": "bool"
        }
      ],
      "name": "OperatorRestriction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "name": "TokenURIRevealed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimConditionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedBaseURI",
          "type": "bytes"
        }
      ],
      "name": "TokensLazyMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentStartId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "encryptDecrypt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "encryptedData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveClaimConditionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        }
      ],
      "name": "getClaimConditionById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFlatPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeType",
      "outputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_key",
          "type": "bytes"
        }
      ],
      "name": "getRevealURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supplyClaimedByWallet",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_platformFeeBps",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchId",
          "type": "uint256"
        }
      ],
      "name": "isEncryptedBatch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURIForTokens",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "lazyMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "batchId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorRestriction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_key",
          "type": "bytes"
        }
      ],
      "name": "reveal",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "_conditions",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_flatFee",
          "type": "uint256"
        }
      ],
      "name": "setFlatPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "setMaxTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_restriction",
          "type": "bool"
        }
      ],
      "name": "setOperatorRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "_feeType",
          "type": "uint8"
        }
      ],
      "name": "setPlatformFeeType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_subscription",
          "type": "address"
        }
      ],
      "name": "subscribeToRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1751:13344:327:-:0;;;3054:28;;;;;;;;;-1:-1:-1;3111:19:433;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:433;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;;;;;:44;;:::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:433;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:433;;216:2:640;3157:201:433;;;198:21:640;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:640;;;338:44;399:19;;3157:201:433;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:433;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:433;;;;;3394:65;3483:14;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:433;;;3553:14;;-1:-1:-1;581:36:640;;3553:14:433;;569:2:640;554:18;3553:14:433;;;;;;;3479:99;3101:483;1751:13344:327;;1186:320:459;-1:-1:-1;;;;;1476:19:459;;:23;;;1186:320::o;429:194:640:-;1751:13344:327;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061033a5760003560e01c806384bb1e42116101b3578063b24f2d39116100f3578063b24f2d39146109bd578063b6f10c79146109ec578063b88d4fde14610a0c578063c68907de14610a2c578063c87b56dd14610a41578063ca15c87314610a61578063cb2ef6f714610a81578063ce80564214610aa1578063d37c353b14610ac1578063d45573f614610ae1578063d547741f14610af6578063d637ed5914610b16578063e159163414610b46578063e57553da14610b66578063e715032214610b8a578063e8a3d48514610baa578063e985e9c514610bbf578063f28083c314610c0857600080fd5b806384bb1e42146107c25780638da5cb5b146107d55780639010d07c146107f357806391d1485414610813578063938e3d7b1461083357806395d89b41146108535780639bcf7a15146108685780639fc4d68f14610888578063a05112fc146108a8578063a0a8e460146108c8578063a217fddf146108e4578063a22cb465146108f9578063a2309ff814610919578063a32fa5b31461092e578063ac9650d81461094e578063acd083f814610919578063ad1eefc51461097b57600080fd5b80633b1475a71161027e5780633b1475a71461058f5780633f3e4c11146105a457806342842e0e146105c457806342966c68146105e4578063492e224b146106045780634cc157df14610624578063504c6e0114610666578063572b6c051461068057806357fd8455146106a0578063600dd5ea146106c05780636352211e146106e057806363b45e2d146107005780636f4f2837146107155780636f8934f41461073557806370a082311461076257806374bc7db7146107825780637e54523c146107a257600080fd5b806301ffc9a71461033f57806306fdde0314610374578063079fe40e14610396578063081812fc146103b8578063095ea7b3146103d857806313af4035146103fa57806318160ddd1461041a5780631e7ac4881461043d57806323a2902b1461045d57806323b872dd1461047d5780632419f51b1461049d578063248a9ca3146104bd5780632a55205a146104ea5780632ab4d052146105185780632f2ff15d1461052f57806332f0cd641461054f57806336568abe1461056f575b600080fd5b34801561034b57600080fd5b5061035f61035a366004614d59565b610c28565b60405190151581526020015b60405180910390f35b34801561038057600080fd5b50610389610c54565b60405161036b9190614dce565b3480156103a257600080fd5b506103ab610ce6565b60405161036b9190614de1565b3480156103c457600080fd5b506103ab6103d3366004614df5565b610cf5565b3480156103e457600080fd5b506103f86103f3366004614e33565b610d39565b005b34801561040657600080fd5b506103f8610415366004614e5f565b610e06565b34801561042657600080fd5b5060dd5460dc54035b60405190815260200161036b565b34801561044957600080fd5b506103f8610458366004614e33565b610e36565b34801561046957600080fd5b5061035f610478366004614e8e565b610e68565b34801561048957600080fd5b506103f8610498366004614f0b565b611229565b3480156104a957600080fd5b5061042f6104b8366004614df5565b611310565b3480156104c957600080fd5b5061042f6104d8366004614df5565b6000908152600d602052604090205490565b3480156104f657600080fd5b5061050a610505366004614f4c565b61137e565b60405161036b929190614f6e565b34801561052457600080fd5b5061042f6101105481565b34801561053b57600080fd5b506103f861054a366004614f87565b6113bb565b34801561055b57600080fd5b506103f861056a366004614fc5565b611451565b34801561057b57600080fd5b506103f861058a366004614f87565b6114c2565b34801561059b57600080fd5b50600b5461042f565b3480156105b057600080fd5b506103f86105bf366004614df5565b611521565b3480156105d057600080fd5b506103f86105df366004614f0b565b61156b565b3480156105f057600080fd5b506103f86105ff366004614df5565b611647565b34801561061057600080fd5b5061035f61061f366004614df5565b611652565b34801561063057600080fd5b5061064461063f366004614df5565b611678565b604080516001600160a01b03909316835261ffff90911660208301520161036b565b34801561067257600080fd5b5060a95461035f9060ff1681565b34801561068c57600080fd5b5061035f61069b366004614e5f565b6116e7565b3480156106ac57600080fd5b506103f86106bb366004614e5f565b611705565b3480156106cc57600080fd5b506103f86106db366004614e33565b611775565b3480156106ec57600080fd5b506103ab6106fb366004614df5565b6117a3565b34801561070c57600080fd5b5060095461042f565b34801561072157600080fd5b506103f8610730366004614e5f565b6117b5565b34801561074157600080fd5b50610755610750366004614df5565b6117e2565b60405161036b9190614fe2565b34801561076e57600080fd5b5061042f61077d366004614e5f565b61193f565b34801561078e57600080fd5b506103f861079d36600461509a565b61198d565b3480156107ae57600080fd5b506103f86107bd366004614e33565b611cd1565b6103f86107d03660046151b3565b611cff565b3480156107e157600080fd5b506007546001600160a01b03166103ab565b3480156107ff57600080fd5b506103ab61080e366004614f4c565b611e25565b34801561081f57600080fd5b5061035f61082e366004614f87565b611f14565b34801561083f57600080fd5b506103f861084e366004615240565b611f3f565b34801561085f57600080fd5b50610389611f6c565b34801561087457600080fd5b506103f8610883366004615274565b611f7b565b34801561089457600080fd5b506103896108a33660046152dc565b611faa565b3480156108b457600080fd5b506103896108c3366004614df5565b61212b565b3480156108d457600080fd5b506040516004815260200161036b565b3480156108f057600080fd5b5061042f600081565b34801561090557600080fd5b506103f8610914366004615327565b6121c5565b34801561092557600080fd5b5060dc5461042f565b34801561093a57600080fd5b5061035f610949366004614f87565b612284565b34801561095a57600080fd5b5061096e610969366004615355565b6122da565b60405161036b9190615396565b34801561098757600080fd5b5061042f610996366004614f87565b60009182526012602090815260408084206001600160a01b03909316845291905290205490565b3480156109c957600080fd5b5060045461010081046001600160a01b031690600160a81b900461ffff16610644565b3480156109f857600080fd5b506103f8610a073660046153f8565b6123ce565b348015610a1857600080fd5b506103f8610a27366004615419565b61244f565b348015610a3857600080fd5b5061042f612539565b348015610a4d57600080fd5b50610389610a5c366004614df5565b6125dc565b348015610a6d57600080fd5b5061042f610a7c366004614df5565b61264b565b348015610a8d57600080fd5b506944726f7045524337323160b01b61042f565b348015610aad57600080fd5b50610389610abc3660046152dc565b6126d4565b348015610acd57600080fd5b5061042f610adc366004615484565b612762565b348015610aed57600080fd5b506106446127fa565b348015610b0257600080fd5b506103f8610b11366004614f87565b612817565b348015610b2257600080fd5b50600f54601054610b31919082565b6040805192835260208301919091520161036b565b348015610b5257600080fd5b506103f8610b61366004615591565b612830565b348015610b7257600080fd5b5061050a6002546003546001600160a01b0390911691565b348015610b9657600080fd5b50610389610ba53660046156a3565b612a27565b348015610bb657600080fd5b50610389612a9c565b348015610bcb57600080fd5b5061035f610bda3660046156fe565b6001600160a01b03918216600090815260e36020908152604080832093909416825291909152205460ff1690565b348015610c1457600080fd5b5060045460ff1660405161036b9190615742565b6000610c3382612ab8565b80610c4e575063152a902d60e11b6001600160e01b03198316145b92915050565b606060de8054610c639061576a565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8f9061576a565b8015610cdc5780601f10610cb157610100808354040283529160200191610cdc565b820191906000526020600020905b815481529060010190602001808311610cbf57829003601f168201915b5050505050905090565b6006546001600160a01b031690565b6000610d0082612b08565b610d1d576040516333d1c03960e21b815260040160405180910390fd5b50600090815260e260205260409020546001600160a01b031690565b60a954829060ff1615610df7576daaeb6d7670e522a718067333cd4e3b15610df757604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c617113490610d8e903090859060040161579f565b602060405180830381865afa158015610dab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcf91906157b9565b610df75780604051633b79c77360e21b8152600401610dee9190614de1565b60405180910390fd5b610e018383612b34565b505050565b610e0e612bc8565b610e2a5760405162461bcd60e51b8152600401610dee906157d6565b610e3381612bdb565b50565b610e3e612bc8565b610e5a5760405162461bcd60e51b8152600401610dee906157d6565b610e648282612c2d565b5050565b6000868152601160209081526040808320815161010081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a083015260068101546001600160a01b031660c08301526007810180548493929160e0840191610ee79061576a565b80601f0160208091040260200160405190810160405280929190818152602001828054610f139061576a565b8015610f605780601f10610f3557610100808354040283529160200191610f60565b820191906000526020600020905b815481529060010190602001808311610f4357829003601f168201915b50505091909252505050606081015160a082015160c083015160808401519394509192909190156110405761103c610f9887806157fe565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508d9060208b01359060408c013590610fed908d0160608e01614e5f565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b16607482015260880160405160208183030381529060405280519060200120612cbb565b5094505b84156110c5576020860135611055578261105b565b85602001355b9250600019866040013514156110715781611077565b85604001355b91506000198660400135141580156110a85750600061109c6080880160608901614e5f565b6001600160a01b031614155b6110b257806110c2565b6110c26080870160608801614e5f565b90505b60008b81526012602090815260408083206001600160a01b03808f168552925290912054908981169083161415806110fd5750828814155b1561113d5760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610dee565b891580611152575083611150828c61585d565b115b156111885760405162461bcd60e51b8152600401610dee906020808252600490820152632151747960e01b604082015260600190565b84602001518a866040015161119d919061585d565b11156111d85760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610dee565b845142101561121a5760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610dee565b50505050509695505050505050565b60a954839060ff16156112ff576daaeb6d7670e522a718067333cd4e3b156112ff576001600160a01b03811633141561126c57611267848484612d89565b61130a565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c61711349061129f903090339060040161579f565b602060405180830381865afa1580156112bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e091906157b9565b6112ff5733604051633b79c77360e21b8152600401610dee9190614de1565b61130a848484612d89565b50505050565b600061131b60095490565b82106113595760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610dee565b6009828154811061136c5761136c615875565b90600052602060002001549050919050565b60008060008061138d86611678565b90945084925061ffff1690506127106113a6828761588b565b6113b091906158c0565b925050509250929050565b6000828152600d60205260409020546113d49033612d94565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff16156114475760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610dee565b610e648282612e14565b611459612bc8565b6114b95760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420617574686f72697a656420746f20736574206f70657261746f72207260448201526a32b9ba3934b1ba34b7b71760a91b6064820152608401610dee565b610e3381612e28565b336001600160a01b038216146115175760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610dee565b610e648282612e69565b600061152d8133612d94565b6101108290556040518281527ff2672935fc79f5237559e2e2999dbe743bf65430894ac2b37666890e7c69e1af906020015b60405180910390a15050565b60a954839060ff161561163c576daaeb6d7670e522a718067333cd4e3b1561163c576001600160a01b0381163314156115a957611267848484612ec0565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c6171134906115dc903090339060040161579f565b602060405180830381865afa1580156115f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161d91906157b9565b61163c5733604051633b79c77360e21b8152600401610dee9190614de1565b61130a848484612ec0565b610e33816001612edb565b6000818152600860205260408120805482919061166e9061576a565b9050119050919050565b6000818152600560209081526040808320815180830190925280546001600160a01b0316808352600190910154928201929092528291156116bf57805160208201516116dd565b60045461010081046001600160a01b031690600160a81b900461ffff165b9250925050915091565b6001600160a01b031660009081526045602052604090205460ff1690565b61170d612bc8565b61176a5760405162461bcd60e51b815260206004820152602860248201527f4e6f7420617574686f72697a656420746f2073756273637269626520746f207260448201526732b3b4b9ba393c9760c11b6064820152608401610dee565b610e338160016130bb565b61177d612bc8565b6117995760405162461bcd60e51b8152600401610dee906157d6565b610e6482826131b3565b60006117ae8261323f565b5192915050565b6117bd612bc8565b6117d95760405162461bcd60e51b8152600401610dee906157d6565b610e3381613359565b61183660405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b600082815260116020908152604091829020825161010081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e0840191906118b69061576a565b80601f01602080910402602001604051908101604052809291908181526020018280546118e29061576a565b801561192f5780601f106119045761010080835404028352916020019161192f565b820191906000526020600020905b81548152906001019060200180831161191257829003601f168201915b5050505050815250509050919050565b60006001600160a01b038216611968576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b0316600090815260e160205260409020546001600160401b031690565b611995612bc8565b6119b15760405162461bcd60e51b8152600401610dee906157d6565b600f546010548183156119cb576119c8828461585d565b90505b6010859055600f8190556000805b86811015611b7e57801580611a1157508787828181106119fb576119fb615875565b9050602002810190611a0d91906158d4565b3582105b611a425760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610dee565b6000601181611a51848761585d565b8152602001908152602001600020600201549050888883818110611a7757611a77615875565b9050602002810190611a8991906158d4565b60200135811115611ad15760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610dee565b888883818110611ae357611ae3615875565b9050602002810190611af591906158d4565b60116000611b03858861585d565b81526020019081526020016000208181611b1d9190615a3f565b5081905060116000611b2f858861585d565b8152602081019190915260400160002060020155888883818110611b5557611b55615875565b9050602002810190611b6791906158d4565b359250819050611b7681615abd565b9150506119d9565b508415611bfe57835b82811015611bf857600081815260116020526040812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b031916905590611be36007830182614c70565b50508080611bf090615abd565b915050611b87565b50611c8d565b85831115611c8d57855b83811015611c8b5760116000611c1e838661585d565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b031916905590611c766007830182614c70565b50508080611c8390615abd565b915050611c08565b505b7fbf4016fceeaaa4ac5cf4be865b559ff85825ab4ca7aa7b661d16e2f544c03098878787604051611cc093929190615b46565b60405180910390a150505050505050565b611cd9612bc8565b611cf55760405162461bcd60e51b8152600401610dee906157d6565b610e6482826133a3565b611d0d8686868686866133f5565b6000611d17612539565b9050611d2e81611d25613494565b88888888610e68565b5060008181526011602052604081206002018054889290611d5090849061585d565b909155505060008181526012602052604081208791611d6d613494565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254611d9c919061585d565b90915550611daf9050600087878761349e565b6000611dbb88886135ab565b9050876001600160a01b0316611dcf613494565b6001600160a01b0316837ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e848b604051611e13929190918252602082015260400190565b60405180910390a45050505050505050565b6000828152600e602052604081205481805b82811015611f0b576000868152600e602090815260408083208484526001019091529020546001600160a01b031615611eb45784821415611ea2576000868152600e602090815260408083209383526001909301905220546001600160a01b03169250610c4e915050565b611ead60018361585d565b9150611ef9565b611ebf866000611f14565b8015611ee657506000868152600e6020908152604080832083805260020190915290205481145b15611ef957611ef660018361585d565b91505b611f0460018261585d565b9050611e37565b50505092915050565b6000918252600c602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611f47612bc8565b611f635760405162461bcd60e51b8152600401610dee906157d6565b610e33816135b8565b606060df8054610c639061576a565b611f83612bc8565b611f9f5760405162461bcd60e51b8152600401610dee906157d6565b610e0183838361368e565b600083815260086020526040812080546060929190611fc89061576a565b80601f0160208091040260200160405190810160405280929190818152602001828054611ff49061576a565b80156120415780601f1061201657610100808354040283529160200191612041565b820191906000526020600020905b81548152906001019060200180831161202457829003601f168201915b5050505050905080516000141561208e5760405162461bcd60e51b8152602060048201526011602482015270139bdd1a1a5b99c81d1bc81c995d99585b607a1b6044820152606401610dee565b600080828060200190518101906120a59190615c2e565b915091506120b4828787612a27565b935080848787466040516020016120ce9493929190615cae565b60405160208183030381529060405280519060200120146121215760405162461bcd60e51b815260206004820152600d60248201526c496e636f7272656374206b657960981b6044820152606401610dee565b5050509392505050565b600860205260009081526040902080546121449061576a565b80601f01602080910402602001604051908101604052809291908181526020018280546121709061576a565b80156121bd5780601f10612192576101008083540402835291602001916121bd565b820191906000526020600020905b8154815290600101906020018083116121a057829003601f168201915b505050505081565b60a954829060ff161561227a576daaeb6d7670e522a718067333cd4e3b1561227a57604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c61711349061221a903090859060040161579f565b602060405180830381865afa158015612237573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061225b91906157b9565b61227a5780604051633b79c77360e21b8152600401610dee9190614de1565b610e018383613735565b6000828152600c6020908152604080832083805290915281205460ff166122d157506000828152600c602090815260408083206001600160a01b038516845290915290205460ff16610c4e565b50600192915050565b6060816001600160401b038111156122f4576122f46150f0565b60405190808252806020026020018201604052801561232757816020015b60608152602001906001900390816123125790505b50905060005b828110156123c7576123973085858481811061234b5761234b615875565b905060200281019061235d91906158f4565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061380892505050565b8282815181106123a9576123a9615875565b602002602001018190525080806123bf90615abd565b91505061232d565b5092915050565b6123d6612bc8565b6123f25760405162461bcd60e51b8152600401610dee906157d6565b6004805482919060ff1916600183818111156124105761241061572c565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c1816040516124449190615742565b60405180910390a150565b60a954849060ff1615612526576daaeb6d7670e522a718067333cd4e3b15612526576001600160a01b0381163314156124935761248e858585856138fa565b612532565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c6171134906124c6903090339060040161579f565b602060405180830381865afa1580156124e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061250791906157b9565b6125265733604051633b79c77360e21b8152600401610dee9190614de1565b612532858585856138fa565b5050505050565b601054600f54600091829161254e919061585d565b90505b600f548111156125a5576011600061256a600184615cd7565b81526020019081526020016000206000015442106125935761258d600182615cd7565b91505090565b8061259d81615cee565b915050612551565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b6044820152606401610dee565b606060006125e983613945565b50905060006125f784613a4a565b905061260282611652565b1561263057806040516020016126189190615d05565b60405160208183030381529060405292505050919050565b8061263a85613bab565b604051602001612618929190615d2a565b6000818152600e6020526040812054815b818110156126af576000848152600e602090815260408083208484526001019091529020546001600160a01b03161561269d5761269a60018461585d565b92505b6126a860018261585d565b905061265c565b506126bb836000611f14565b156126ce576126cb60018361585d565b91505b50919050565b606061010f546126e48133612d94565b60006126ef86611310565b90506126fc818686611faa565b92506127178160405180602001604052806000815250613cb0565b6127218184613ccf565b857f6df1d8db2a036436ffe0b2d1833f2c5f1e624818dfce2578c0faa4b83ef9998d846040516127519190614dce565b60405180910390a250509392505050565b600081156127e35760008061277984860186615d59565b91509150815160001415801561278e57508015155b156127e0576127e088600b546127a4919061585d565b86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250613cb092505050565b50505b6127f08686868686613cee565b9695505050505050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b6000828152600d60205260409020546115179033612d94565b600054610100900460ff16158080156128505750600054600160ff909116105b80612871575061285f30612aa9565b158015612871575060005460ff166001145b6128d45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610dee565b6000805460ff1916600117905580156128f7576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661294289613df8565b61294c8c8c613e30565b612954613e61565b61295d8a6135b8565b6129668d612bdb565b6129706001612e28565b61297b60008e612e14565b612985818e612e14565b61298f828e612e14565b61299a826000612e14565b6129ad84866001600160801b0316612c2d565b6129c087876001600160801b03166131b3565b6129c988613359565b61010e9190915561010f558015612a1a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b8251604080518083016020019091528181529060005b81811015612a93576000858583604051602001612a5c93929190615d9d565b60408051601f19818403018152919052805160209182012088840182015118858401820152612a8c91508261585d565b9050612a3d565b50509392505050565b600180546121449061576a565b6001600160a01b03163b151590565b60006001600160e01b031982166380ac58cd60e01b1480612ae957506001600160e01b03198216635b5e139f60e01b145b80610c4e57506301ffc9a760e01b6001600160e01b0319831614610c4e565b600060dc5482108015610c4e575050600090815260e06020526040902054600160e01b900460ff161590565b6000612b3f826117a3565b9050806001600160a01b0316836001600160a01b03161415612b745760405163250fdee360e21b815260040160405180910390fd5b806001600160a01b0316612b86613e82565b6001600160a01b031614612bbd57612ba081610bda613e82565b612bbd576040516367d9dca160e11b815260040160405180910390fd5b610e01838383613e8c565b6000612bd68161082e613e82565b905090565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b612710811115612c4f5760405162461bcd60e51b8152600401610dee90615daf565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b6000808281805b8751811015612d7d57612cd660028361588b565b91506000888281518110612cec57612cec615875565b60200260200101519050808411612d2e576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350612d6a565b6040805160208101839052908101859052606001604051602081830303815290604052805190602001209350600183612d67919061585d565b92505b5080612d7581615abd565b915050612cc2565b50941495939450505050565b610e01838383613ee8565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff16610e6457612dd2816001600160a01b031660146140ef565b612ddd8360206140ef565b604051602001612dee929190615dd8565b60408051601f198184030181529082905262461bcd60e51b8252610dee91600401614dce565b612e1e8282614291565b610e6482826142ec565b60a9805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba7809690602001612444565b612e738282614359565b6000828152600e602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b610e018383836040518060200160405280600081525061244f565b6000612ee68361323f565b80519091508215612f6e576000816001600160a01b0316612f05613e82565b6001600160a01b03161480612f215750612f2182610bda613e82565b80612f4c5750612f2f613e82565b6001600160a01b0316612f4186610cf5565b6001600160a01b0316145b905080612f6c57604051632ce44b5f60e11b815260040160405180910390fd5b505b612f7c8160008660016143bb565b612f8860008583613e8c565b6001600160a01b03808216600081815260e1602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b865260e0909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b1785559189018084529220805491949091166130825760dc54821461308257805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020615fa8833981519152908390a4505060dd805460010190555050565b6daaeb6d7670e522a718067333cd4e3b15610e64576001600160a01b0382163b1561318257801561314f57604051633e9f1edf60e11b81526daaeb6d7670e522a718067333cd4e90637d3e3dbe90613119903090869060040161579f565b600060405180830381600087803b15801561313357600080fd5b505af1158015613147573d6000803e3d6000fd5b505050505050565b60405163a0af290360e01b81526daaeb6d7670e522a718067333cd4e9063a0af290390613119903090869060040161579f565b604051632210724360e11b81526daaeb6d7670e522a718067333cd4e90634420e48690613119903090600401614de1565b6127108111156131d55760405162461bcd60e51b8152600401610dee90615daf565b60048054610100600160b81b0319166101006001600160a01b03851690810261ffff60a81b191691909117600160a81b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb90602001612caf565b60408051606081018252600080825260208201819052918101919091528160dc5481101561334057600081815260e06020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff1615159181018290529061333e5780516001600160a01b0316156132d5579392505050565b5060001901600081815260e06020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215613339579392505050565b6132d5565b505b604051636f96cda160e11b815260040160405180910390fd5b600680546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb639061155f9084908490614f6e565b600b548560dc54613406919061585d565b111561343e5760405162461bcd60e51b815260206004820152600760248201526621546f6b656e7360c81b6044820152606401610dee565b61011054158061345e5750610110548560dc5461345b919061585d565b11155b6131475760405162461bcd60e51b815260206004820152600760248201526621537570706c7960c81b6044820152606401610dee565b6000612bd6613e82565b806134c15734156112675760405162461bcd60e51b8152600401610dee90615e45565b6000806134cc6127fa565b909250905060006001600160a01b038716156134e857866134f0565b6134f0610ce6565b905060006134fe858861588b565b9050600061271061351361ffff86168461588b565b61351d91906158c0565b905060006001600160a01b03881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561354f5750348214613553565b5034155b806135705760405162461bcd60e51b8152600401610dee90615e45565b6135838861357c613e82565b8885614459565b61359f8861358f613e82565b8661359a8688615cd7565b614459565b50505050505050505050565b60dc54610c4e838361449e565b6000600180546135c79061576a565b80601f01602080910402602001604051908101604052809291908181526020018280546135f39061576a565b80156136405780601f1061361557610100808354040283529160200191613640565b820191906000526020600020905b81548152906001019060200180831161362357829003601f168201915b5050855193945061365c93600193506020870192509050614caa565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161155f929190615e61565b6127108111156136b05760405162461bcd60e51b8152600401610dee90615daf565b6040805180820182526001600160a01b038481168083526020808401868152600089815260058352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b61373d613e82565b6001600160a01b0316826001600160a01b0316141561376f5760405163b06307db60e01b815260040160405180910390fd5b8060e3600061377c613e82565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556137c0613e82565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516137fc911515815260200190565b60405180910390a35050565b606061381383612aa9565b61386e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610dee565b600080846001600160a01b0316846040516138899190615e86565b600060405180830381855af49150503d80600081146138c4576040519150601f19603f3d011682016040523d82523d6000602084013e6138c9565b606091505b50915091506138f18282604051806060016040528060278152602001615f81602791396144b8565b95945050505050565b613905848484613ee8565b613917836001600160a01b0316612aa9565b1561130a57613928848484846144f1565b61130a576040516368d2bf6b60e11b815260040160405180910390fd5b600080600061395360095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156139a357602002820191906000526020600020905b81548152602001906001019080831161398f575b5050505050905060005b82811015613a0f578181815181106139c7576139c7615875565b60200260200101518610156139fd578093508181815181106139eb576139eb615875565b60200260200101519450505050915091565b613a0860018261585d565b90506139ad565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610dee565b60606000613a5760095490565b905060006009805480602002602001604051908101604052809291908181526020018280548015613aa757602002820191906000526020600020905b815481526020019060010190808311613a93575b5050505050905060005b82811015613a0f57818181518110613acb57613acb615875565b6020026020010151851015613b9957600a6000838381518110613af057613af0615875565b602002602001015181526020019081526020016000208054613b119061576a565b80601f0160208091040260200160405190810160405280929190818152602001828054613b3d9061576a565b8015613b8a5780601f10613b5f57610100808354040283529160200191613b8a565b820191906000526020600020905b815481529060010190602001808311613b6d57829003601f168201915b50505050509350505050919050565b613ba460018261585d565b9050613ab1565b606081613bcf5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115613bf95780613be381615abd565b9150613bf29050600a836158c0565b9150613bd3565b6000816001600160401b03811115613c1357613c136150f0565b6040519080825280601f01601f191660200182016040528015613c3d576020820181803683370190505b5090505b8415613ca857613c52600183615cd7565b9150613c5f600a86615e98565b613c6a90603061585d565b60f81b818381518110613c7f57613c7f615875565b60200101906001600160f81b031916908160001a905350613ca1600a866158c0565b9450613c41565b949350505050565b60008281526008602090815260409091208251610e0192840190614caa565b6000828152600a602090815260409091208251610e0192840190614caa565b6000613cf86145df565b613d145760405162461bcd60e51b8152600401610dee906157d6565b85613d495760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b6044820152606401610dee565b6000600b549050613d91818888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506145f092505050565b600b919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001613dc78a8461585d565b613dd19190615cd7565b88888888604051613de6959493929190615eac565b60405180910390a25095945050505050565b600054610100900460ff16613e1f5760405162461bcd60e51b8152600401610dee90615ee5565b613e2761465d565b610e3381614684565b600054610100900460ff16613e575760405162461bcd60e51b8152600401610dee90615ee5565b610e648282614713565b613e80733cc6cdda760b79bafa08df41ecfa224f810dceb6600161476b565b565b6000612bd6614775565b600082815260e2602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000613ef38261323f565b9050836001600160a01b031681600001516001600160a01b031614613f2a5760405162a1148160e81b815260040160405180910390fd5b6000846001600160a01b0316613f3e613e82565b6001600160a01b03161480613f5a5750613f5a85610bda613e82565b80613f855750613f68613e82565b6001600160a01b0316613f7a84610cf5565b6001600160a01b0316145b905080613fa557604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038416613fcc57604051633a954ecd60e21b815260040160405180910390fd5b613fd985858560016143bb565b613fe560008487613e8c565b6001600160a01b03858116600090815260e16020908152604080832080546001600160401b03198082166001600160401b039283166000190183161790925589861680865283862080549384169383166001908101841694909417905589865260e090945282852080546001600160e01b031916909417600160a01b429092169190910217835587018084529220805491939091166140b85760dc5482146140b857805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b0316600080516020615fa883398151915260405160405180910390a4612532565b606060006140fe83600261588b565b61410990600261585d565b6001600160401b03811115614120576141206150f0565b6040519080825280601f01601f19166020018201604052801561414a576020820181803683370190505b509050600360fc1b8160008151811061416557614165615875565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061419457614194615875565b60200101906001600160f81b031916908160001a90535060006141b884600261588b565b6141c390600161585d565b90505b600181111561423b576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106141f7576141f7615875565b1a60f81b82828151811061420d5761420d615875565b60200101906001600160f81b031916908160001a90535060049490941c9361423481615cee565b90506141c6565b50831561428a5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610dee565b9392505050565b6000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600e602052604081208054916001919061430b838561585d565b90915550506000928352600e6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6143638282612d94565b6000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6143c961010e546000611f14565b1580156143de57506001600160a01b03841615155b80156143f257506001600160a01b03831615155b1561130a5761440461010e5485611f14565b15801561441b575061441961010e5484611f14565b155b1561130a5760405162461bcd60e51b815260206004820152600e60248201526d215472616e736665722d526f6c6560901b6044820152606401610dee565b806144635761130a565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415614492576112678282614797565b61130a84848484614839565b610e64828260405180602001604052806000815250614892565b606083156144c757508161428a565b8251156144d75782518084602001fd5b8160405162461bcd60e51b8152600401610dee9190614dce565b6000836001600160a01b031663150b7a0261450a613e82565b8786866040518563ffffffff1660e01b815260040161452c9493929190615f30565b6020604051808303816000875af1925050508015614567575060408051601f3d908101601f1916820190925261456491810190615f63565b60015b6145c2573d808015614595576040519150601f19603f3d011682016040523d82523d6000602084013e61459a565b606091505b5080516145ba576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b6000612bd661010f5461082e613e82565b6000806145fd848661585d565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a602090815260409091208551929450849350614654929091860190614caa565b50935093915050565b600054610100900460ff16613e805760405162461bcd60e51b8152600401610dee90615ee5565b600054610100900460ff166146ab5760405162461bcd60e51b8152600401610dee90615ee5565b60005b8151811015610e64576001604560008484815181106146cf576146cf615875565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061470b81615abd565b9150506146ae565b600054610100900460ff1661473a5760405162461bcd60e51b8152600401610dee90615ee5565b815161474d9060de906020850190614caa565b5080516147619060df906020840190614caa565b50600060dc555050565b610e6482826130bb565b6000614780336116e7565b15614792575060131936013560601c90565b503390565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146147e4576040519150601f19603f3d011682016040523d82523d6000602084013e6147e9565b606091505b5050905080610e015760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610dee565b816001600160a01b0316836001600160a01b031614156148585761130a565b6001600160a01b03831630141561487d576112676001600160a01b0385168383614a37565b61130a6001600160a01b038516848484614a8d565b60dc546001600160a01b0384166148bb57604051622e076360e81b815260040160405180910390fd5b826148d95760405163b562e8dd60e01b815260040160405180910390fd5b6148e660008583866143bb565b6001600160a01b038416600081815260e16020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b0181169092021790915585845260e090925290912080546001600160e01b0319168317600160a01b429093169290920291909117905581908185019061497f90612aa9565b156149f5575b60405182906001600160a01b03881690600090600080516020615fa8833981519152908290a46149be60008784806001019550876144f1565b6149db576040516368d2bf6b60e11b815260040160405180910390fd5b808210614985578260dc54146149f057600080fd5b614a28565b5b6040516001830192906001600160a01b03881690600090600080516020615fa8833981519152908290a48082106149f6575b5060dc5561130a600085838684565b610e018363a9059cbb60e01b8484604051602401614a56929190614f6e565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614ac5565b6040516001600160a01b038085166024830152831660448201526064810182905261130a9085906323b872dd60e01b90608401614a56565b6000614b1a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614b979092919063ffffffff16565b805190915015610e015780806020019051810190614b3891906157b9565b610e015760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610dee565b6060613ca8848460008585614bab85612aa9565b614bf75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610dee565b600080866001600160a01b03168587604051614c139190615e86565b60006040518083038185875af1925050503d8060008114614c50576040519150601f19603f3d011682016040523d82523d6000602084013e614c55565b606091505b5091509150614c658282866144b8565b979650505050505050565b508054614c7c9061576a565b6000825580601f10614c8c575050565b601f016020900490600052602060002090810190610e339190614d2e565b828054614cb69061576a565b90600052602060002090601f016020900481019282614cd85760008555614d1e565b82601f10614cf157805160ff1916838001178555614d1e565b82800160010185558215614d1e579182015b82811115614d1e578251825591602001919060010190614d03565b50614d2a929150614d2e565b5090565b5b80821115614d2a5760008155600101614d2f565b6001600160e01b031981168114610e3357600080fd5b600060208284031215614d6b57600080fd5b813561428a81614d43565b60005b83811015614d91578181015183820152602001614d79565b8381111561130a5750506000910152565b60008151808452614dba816020860160208601614d76565b601f01601f19169290920160200192915050565b60208152600061428a6020830184614da2565b6001600160a01b0391909116815260200190565b600060208284031215614e0757600080fd5b5035919050565b6001600160a01b0381168114610e3357600080fd5b8035614e2e81614e0e565b919050565b60008060408385031215614e4657600080fd5b8235614e5181614e0e565b946020939093013593505050565b600060208284031215614e7157600080fd5b813561428a81614e0e565b6000608082840312156126ce57600080fd5b60008060008060008060c08789031215614ea757600080fd5b863595506020870135614eb981614e0e565b9450604087013593506060870135614ed081614e0e565b92506080870135915060a08701356001600160401b03811115614ef257600080fd5b614efe89828a01614e7c565b9150509295509295509295565b600080600060608486031215614f2057600080fd5b8335614f2b81614e0e565b92506020840135614f3b81614e0e565b929592945050506040919091013590565b60008060408385031215614f5f57600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b60008060408385031215614f9a57600080fd5b823591506020830135614fac81614e0e565b809150509250929050565b8015158114610e3357600080fd5b600060208284031215614fd757600080fd5b813561428a81614fb7565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e0830151610100808185015250613ca8610120840182614da2565b60008083601f84011261506157600080fd5b5081356001600160401b0381111561507857600080fd5b6020830191508360208260051b850101111561509357600080fd5b9250929050565b6000806000604084860312156150af57600080fd5b83356001600160401b038111156150c557600080fd5b6150d18682870161504f565b90945092505060208401356150e581614fb7565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561512e5761512e6150f0565b604052919050565b60006001600160401b0382111561514f5761514f6150f0565b50601f01601f191660200190565b600082601f83011261516e57600080fd5b813561518161517c82615136565b615106565b81815284602083860101111561519657600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c087890312156151cc57600080fd5b86356151d781614e0e565b95506020870135945060408701356151ee81614e0e565b93506060870135925060808701356001600160401b038082111561521157600080fd5b61521d8a838b01614e7c565b935060a089013591508082111561523357600080fd5b50614efe89828a0161515d565b60006020828403121561525257600080fd5b81356001600160401b0381111561526857600080fd5b613ca88482850161515d565b60008060006060848603121561528957600080fd5b833592506020840135614f3b81614e0e565b60008083601f8401126152ad57600080fd5b5081356001600160401b038111156152c457600080fd5b60208301915083602082850101111561509357600080fd5b6000806000604084860312156152f157600080fd5b8335925060208401356001600160401b0381111561530e57600080fd5b61531a8682870161529b565b9497909650939450505050565b6000806040838503121561533a57600080fd5b823561534581614e0e565b91506020830135614fac81614fb7565b6000806020838503121561536857600080fd5b82356001600160401b0381111561537e57600080fd5b61538a8582860161504f565b90969095509350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156153eb57603f198886030184526153d9858351614da2565b945092850192908501906001016153bd565b5092979650505050505050565b60006020828403121561540a57600080fd5b81356002811061428a57600080fd5b6000806000806080858703121561542f57600080fd5b843561543a81614e0e565b9350602085013561544a81614e0e565b92506040850135915060608501356001600160401b0381111561546c57600080fd5b6154788782880161515d565b91505092959194509250565b60008060008060006060868803121561549c57600080fd5b8535945060208601356001600160401b03808211156154ba57600080fd5b6154c689838a0161529b565b909650945060408801359150808211156154df57600080fd5b506154ec8882890161529b565b969995985093965092949392505050565b600082601f83011261550e57600080fd5b813560206001600160401b03821115615529576155296150f0565b8160051b615538828201615106565b928352848101820192828101908785111561555257600080fd5b83870192505b84831015614c6557823561556b81614e0e565b82529183019190830190615558565b80356001600160801b0381168114614e2e57600080fd5b6000806000806000806000806000806101408b8d0312156155b157600080fd5b6155ba8b614e23565b995060208b01356001600160401b03808211156155d657600080fd5b6155e28e838f0161515d565b9a5060408d01359150808211156155f857600080fd5b6156048e838f0161515d565b995060608d013591508082111561561a57600080fd5b6156268e838f0161515d565b985060808d013591508082111561563c57600080fd5b506156498d828e016154fd565b96505061565860a08c01614e23565b945061566660c08c01614e23565b935061567460e08c0161557a565b92506156836101008c0161557a565b91506156926101208c01614e23565b90509295989b9194979a5092959850565b6000806000604084860312156156b857600080fd5b83356001600160401b03808211156156cf57600080fd5b6156db8783880161515d565b945060208601359150808211156156f157600080fd5b5061531a8682870161529b565b6000806040838503121561571157600080fd5b823561571c81614e0e565b91506020830135614fac81614e0e565b634e487b7160e01b600052602160045260246000fd5b602081016002831061576457634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c9082168061577e57607f821691505b602082108114156126ce57634e487b7160e01b600052602260045260246000fd5b6001600160a01b0392831681529116602082015260400190565b6000602082840312156157cb57600080fd5b815161428a81614fb7565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6000808335601e1984360301811261581557600080fd5b8301803591506001600160401b0382111561582f57600080fd5b6020019150600581901b360382131561509357600080fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561587057615870615847565b500190565b634e487b7160e01b600052603260045260246000fd5b60008160001904831182151516156158a5576158a5615847565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826158cf576158cf6158aa565b500490565b6000823560fe198336030181126158ea57600080fd5b9190910192915050565b6000808335601e1984360301811261590b57600080fd5b8301803591506001600160401b0382111561592557600080fd5b60200191503681900382131561509357600080fd5b601f821115610e0157600081815260208120601f850160051c810160208610156159615750805b601f850160051c820191505b818110156131475782815560010161596d565b6001600160401b03831115615997576159976150f0565b6159ab836159a5835461576a565b8361593a565b6000601f8411600181146159df57600085156159c75750838201355b600019600387901b1c1916600186901b178355612532565b600083815260209020601f19861690835b82811015615a1057868501358255602094850194600190920191016159f0565b5086821015615a2d5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a082013560058201556006810160c0830135615a8781614e0e565b81546001600160a01b0319166001600160a01b0391909116179055615aaf60e08301836158f4565b61130a818360078601615980565b6000600019821415615ad157615ad1615847565b5060010190565b6000808335601e19843603018112615aef57600080fd5b83016020810192503590506001600160401b03811115615b0e57600080fd5b80360383131561509357600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a811015615c1857888403605f190185528235368d900360fe19018112615b8b578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c080840135615bd281614e0e565b6001600160a01b03169088015260e0615bed84820185615ad8565b945083828a0152615c01848a018683615b1d565b998301999850505094909401935050600101615b66565b50505086151560208701529350613ca892505050565b60008060408385031215615c4157600080fd5b82516001600160401b03811115615c5757600080fd5b8301601f81018513615c6857600080fd5b8051615c7661517c82615136565b818152866020838501011115615c8b57600080fd5b615c9c826020830160208601614d76565b60209590950151949694955050505050565b60008551615cc0818460208a01614d76565b820184868237909301918252506020019392505050565b600082821015615ce957615ce9615847565b500390565b600081615cfd57615cfd615847565b506000190190565b60008251615d17818460208701614d76565b600360fc1b920191825250600101919050565b60008351615d3c818460208801614d76565b835190830190615d50818360208801614d76565b01949350505050565b60008060408385031215615d6c57600080fd5b82356001600160401b03811115615d8257600080fd5b615d8e8582860161515d565b95602094909401359450505050565b82848237909101908152602001919050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351615e08816015850160208801614d76565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351615e39816026840160208801614d76565b01602601949350505050565b60208082526002908201526110ab60f11b604082015260600190565b604081526000615e746040830185614da2565b82810360208401526138f18185614da2565b600082516158ea818460208701614d76565b600082615ea757615ea76158aa565b500690565b858152606060208201526000615ec6606083018688615b1d565b8281036040840152615ed9818587615b1d565b98975050505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906127f090830184614da2565b600060208284031215615f7557600080fd5b815161428a81614d4356fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122019ce06765159c5f184fb030fd9f837385685a8ee699f47201583fec9cc2df00a64736f6c634300080c0033",
    "sourceMap": "1751:13344:327:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5127:280;;;;;;;;;;-1:-1:-1;5127:280:327;;;;;:::i;:::-;;:::i;:::-;;;661:14:640;;654:22;636:41;;624:2;609:18;5127:280:327;;;;;;;;6839:98:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;676:104:74:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;8336:200:26:-;;;;;;;;;;-1:-1:-1;8336:200:26;;;;;:::i;:::-;;:::i;13520:155:327:-;;;;;;;;;;-1:-1:-1;13520:155:327;;;;;:::i;:::-;;:::i;:::-;;1133:173:70;;;;;;;;;;-1:-1:-1;1133:173:70;;;;;:::i;:::-;;:::i;2895:306:26:-;;;;;;;;;;-1:-1:-1;3154:12:26;;3138:13;;:28;2895:306;;;2825:25:640;;;2813:2;2798:18;2895:306:26;2679:177:640;2043:269:73;;;;;;;;;;-1:-1:-1;2043:269:73;;;;;:::i;:::-;;:::i;4806:2222:58:-;;;;;;;;;;-1:-1:-1;4806:2222:58;;;;;:::i;:::-;;:::i;13722:211:327:-;;;;;;;;;;-1:-1:-1;13722:211:327;;;;;:::i;:::-;;:::i;1277:203:52:-;;;;;;;;;;-1:-1:-1;1277:203:52;;;;;:::i;:::-;;:::i;2740:120:71:-;;;;;;;;;;-1:-1:-1;2740:120:71;;;;;:::i;:::-;2808:7;2834:19;;;:13;:19;;;;;;;2740:120;1421:347:77;;;;;;;;;;-1:-1:-1;1421:347:77;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2698:29:327:-;;;;;;;;;;;;;;;;3255:271:71;;;;;;;;;;-1:-1:-1;3255:271:71;;;;;:::i;:::-;;:::i;243:208:67:-;;;;;;;;;;-1:-1:-1;243:208:67;;;;;:::i;:::-;;:::i;4466:217:71:-;;;;;;;;;;-1:-1:-1;4466:217:71;;;;;:::i;:::-;;:::i;12113:106:327:-;;;;;;;;;;-1:-1:-1;12191:21:327;;12113:106;;7485:192;;;;;;;;;;-1:-1:-1;7485:192:327;;;;;:::i;:::-;;:::i;13984:219::-;;;;;;;;;;-1:-1:-1;13984:219:327;;;;;:::i;:::-;;:::i;12443:184::-;;;;;;;;;;-1:-1:-1;12443:184:327;;;;;:::i;:::-;;:::i;3937:129:57:-;;;;;;;;;;-1:-1:-1;3937:129:57;;;;;:::i;:::-;;:::i;2008:381:77:-;;;;;;;;;;-1:-1:-1;2008:381:77;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;6127:32:640;;;6109:51;;6208:6;6196:19;;;6191:2;6176:18;;6169:47;6082:18;2008:381:77;5937:285:640;205:31:67;;;;;;;;;;-1:-1:-1;205:31:67;;;;;;;;918:134:211;;;;;;;;;;-1:-1:-1;918:134:211;;;;;:::i;:::-;;:::i;509:199:56:-;;;;;;;;;;-1:-1:-1;509:199:56;;;;;:::i;:::-;;:::i;3087:256:77:-;;;;;;;;;;-1:-1:-1;3087:256:77;;;;;:::i;:::-;;:::i;6654:123:26:-;;;;;;;;;;-1:-1:-1;6654:123:26;;;;;:::i;:::-;;:::i;980:96:52:-;;;;;;;;;;-1:-1:-1;1054:8:52;:15;980:96;;1189:228:74;;;;;;;;;;-1:-1:-1;1189:228:74;;;;;:::i;:::-;;:::i;7548:177:58:-;;;;;;;;;;-1:-1:-1;7548:177:58;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4080:203:26:-;;;;;;;;;;-1:-1:-1;4080:203:26;;;;;:::i;:::-;;:::i;1949:2760:58:-;;;;;;;;;;-1:-1:-1;1949:2760:58;;;;;:::i;:::-;;:::i;2821:255:73:-;;;;;;;;;;-1:-1:-1;2821:255:73;;;;;:::i;:::-;;:::i;699:1187:58:-;;;;;;:::i;:::-;;:::i;871:86:70:-;;;;;;;;;;-1:-1:-1;944:6:70;;-1:-1:-1;;;;;944:6:70;871:86;;1643:633:72;;;;;;;;;;-1:-1:-1;1643:633:72;;;;;:::i;:::-;;:::i;1324:131:71:-;;;;;;;;;;-1:-1:-1;1324:131:71;;;;;:::i;:::-;;:::i;1003:188:54:-;;;;;;;;;;-1:-1:-1;1003:188:54;;;;;:::i;:::-;;:::i;7001:102:26:-;;;;;;;;;;;;;:::i;4281:288:77:-;;;;;;;;;;-1:-1:-1;4281:288:77;;;;;:::i;:::-;;:::i;1383:534:57:-;;;;;;;;;;-1:-1:-1;1383:534:57;;;;;:::i;:::-;;:::i;568:46::-;;;;;;;;;;-1:-1:-1;568:46:57;;;;;:::i;:::-;;:::i;5705:89:327:-;;;;;;;;;;-1:-1:-1;5705:89:327;;5785:1;12328:36:640;;12316:2;12301:18;5705:89:327;12186:184:640;742:49:71;;;;;;;;;;-1:-1:-1;742:49:71;787:4;742:49;;13305:174:327;;;;;;;;;;-1:-1:-1;13305:174:327;;;;;:::i;:::-;;:::i;11887:144::-;;;;;;;;;;-1:-1:-1;11983:13:327;;11887:144;;2206:211:71;;;;;;;;;;-1:-1:-1;2206:211:71;;;;;:::i;:::-;;:::i;632:301:463:-;;;;;;;;;;-1:-1:-1;632:301:463;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7807:255:58:-;;;;;;;;;;-1:-1:-1;7807:255:58;;;;;:::i;:::-;7926:29;7995:50;;;:36;:50;;;;;;;;-1:-1:-1;;;;;7995:60:58;;;;;;;;;;;;7807:255;2499:144:77;;;;;;;;;;-1:-1:-1;2599:16:77;;;;;-1:-1:-1;;;;;2599:16:77;;-1:-1:-1;;;2624:10:77;;;;2499:144;;3455:243:73;;;;;;;;;;-1:-1:-1;3455:243:73;;;;;:::i;:::-;;:::i;14254:252:327:-;;;;;;;;;;-1:-1:-1;14254:252:327;;;;;:::i;:::-;;:::i;7116:367:58:-;;;;;;;;;;;;;:::i;4694:402:327:-;;;;;;;;;;-1:-1:-1;4694:402:327;;;;;:::i;:::-;;:::i;2683:398:72:-;;;;;;;;;;-1:-1:-1;2683:398:72;;;;;:::i;:::-;;:::i;5598:101:327:-;;;;;;;;;;-1:-1:-1;;;;5598:101:327;;6815:395;;;;;;;;;;-1:-1:-1;6815:395:327;;;;;:::i;:::-;;:::i;6168:540::-;;;;;;;;;;-1:-1:-1;6168:540:327;;;;;:::i;:::-;;:::i;1058:147:73:-;;;;;;;;;;;;;:::i;3897:171:71:-;;;;;;;;;;-1:-1:-1;3897:171:71;;;;;:::i;:::-;;:::i;430:40:58:-;;;;;;;;;;-1:-1:-1;430:40:58;;;;;;;;;;;;;16281:25:640;;;16337:2;16322:18;;16315:34;;;;16254:18;430:40:58;16107:248:640;3147:1300:327;;;;;;;;;;-1:-1:-1;3147:1300:327;;;;;:::i;:::-;;:::i;1268:136:73:-;;;;;;;;;;;;1359:20;;1381:15;;-1:-1:-1;;;;;1359:20:73;;;;1268:136;2409:1283:57;;;;;;;;;;-1:-1:-1;2409:1283:57;;;;;:::i;:::-;;:::i;565:34:54:-;;;;;;;;;;;;;:::i;8951:162:26:-;;;;;;;;;;-1:-1:-1;8951:162:26;;;;;:::i;:::-;-1:-1:-1;;;;;9071:25:26;;;9048:4;9071:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8951:162;1467:107:73;;;;;;;;;;-1:-1:-1;1552:15:73;;;;1467:107;;;;;;:::i;5127:280:327:-;5281:4;5308:36;5332:11;5308:23;:36::i;:::-;:92;;;-1:-1:-1;;;;;;;;;;5348:52:327;;;5308:92;5301:99;5127:280;-1:-1:-1;;5127:280:327:o;6839:98:26:-;6893:13;6925:5;6918:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6839:98;:::o;676:104:74:-;764:9;;-1:-1:-1;;;;;764:9:74;;676:104::o;8336:200:26:-;8404:7;8428:16;8436:7;8428;:16::i;:::-;8423:64;;8453:34;;-1:-1:-1;;;8453:34:26;;;;;;;;;;;8423:64;-1:-1:-1;8505:24:26;;;;:15;:24;;;;;;-1:-1:-1;;;;;8505:24:26;;8336:200::o;13520:155:327:-;1886:19:69;;13616:8:327;;1886:19:69;;1882:286;;;391:42;1925:45;:49;1921:237;;1999:67;;-1:-1:-1;;;1999:67:69;;391:42;;1999;;:67;;2050:4;;2057:8;;1999:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1994:150;;2116:8;2097:28;;-1:-1:-1;;;2097:28:69;;;;;;;;:::i;:::-;;;;;;;;1994:150;13636:32:327::1;13650:8;13660:7;13636:13;:32::i;:::-;13520:155:::0;;;:::o;1133:173:70:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:70;;;;;;;:::i;1198:70::-;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;2043:269:73:-;2160:24;:22;:24::i;:::-;2155:80;;2200:24;;-1:-1:-1;;;2200:24:73;;;;;;;:::i;2155:80::-;2244:61;2266:21;2289:15;2244:21;:61::i;:::-;2043:269;;:::o;4806:2222:58:-;5045:15;5114:39;;;:25;:39;;;;;;;;5072:81;;;;;;;;;;;;;;;;;;;;;;5114:25;5072:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5072:81:58;;;;;;;;;;5045:15;;5072:81;5114:39;5072:81;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5072:81:58;;;;-1:-1:-1;;;5184:40:58;;;;5255:31;;;;5320:26;;;;5361:28;;;;5072:81;;-1:-1:-1;5184:40:58;;5255:31;;5320:26;5361:42;5357:515;;5436:425;5472:21;:15;;:21;:::i;:::-;5436:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5511:28:58;;;;;;-1:-1:-1;5630:8:58;;5664:38;;;;;5728:29;;;;;5783:24;;;;;;;;:::i;:::-;5588:241;;-1:-1:-1;;;;;;22336:2:640;22372:15;;;22368:24;;5588:241:58;;;22356:37:640;22409:12;;;22402:28;;;;22446:12;;;22439:28;;;;22501:15;;;22497:24;22483:12;;;22476:46;22538:13;;5588:241:58;;;;;;;;;;;;5557:290;;;;;;5436:18;:425::i;:::-;-1:-1:-1;5419:442:58;-1:-1:-1;5357:515:58;5886:10;5882:534;;;5925:38;;;;:129;;6044:10;5925:129;;;5987:15;:38;;;5925:129;5912:142;;-1:-1:-1;;6081:15:58;:29;;;:50;;:127;;6198:10;6081:127;;;6150:15;:29;;;6081:127;6068:140;;-1:-1:-1;;6238:15:58;:29;;;:50;;:92;;;;-1:-1:-1;6328:1:58;6292:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6292:38:58;;;6238:92;:167;;6392:13;6238:167;;;6349:24;;;;;;;;:::i;:::-;6222:183;;5882:534;6426:29;6458:50;;;:36;:50;;;;;;;;-1:-1:-1;;;;;6458:60:58;;;;;;;;;;;;6533:26;;;;;;;;;:58;;;6581:10;6563:14;:28;;6533:58;6529:115;;;6607:26;;-1:-1:-1;;;6607:26:58;;22764:2:640;6607:26:58;;;22746:21:640;22803:2;22783:18;;;22776:30;-1:-1:-1;;;22822:18:640;;;22815:46;22878:18;;6607:26:58;22562:340:640;6529:115:58;6658:14;;;:66;;-1:-1:-1;6713:10:58;6677:33;6689:21;6677:9;:33;:::i;:::-;:46;6658:66;6654:111;;;6740:14;;-1:-1:-1;;;6740:14:58;;;;;;23374:2:640;23356:21;;;23413:1;23393:18;;;23386:29;-1:-1:-1;;;23446:2:640;23431:18;;23424:34;23490:2;23475:18;;23172:327;6654:111:58;6824:17;:36;;;6812:9;6778:17;:31;;;:43;;;;:::i;:::-;:82;6774:133;;;6876:20;;-1:-1:-1;;;6876:20:58;;23706:2:640;6876:20:58;;;23688:21:640;23745:2;23725:18;;;23718:30;-1:-1:-1;;;23764:18:640;;;23757:40;23814:18;;6876:20:58;23504:334:640;6774:133:58;6921:32;;6956:15;-1:-1:-1;6917:105:58;;;6987:24;;-1:-1:-1;;;6987:24:58;;24045:2:640;6987:24:58;;;24027:21:640;24084:2;24064:18;;;24057:30;-1:-1:-1;;;24103:18:640;;;24096:44;24157:18;;6987:24:58;23843:338:640;6917:105:58;5062:1966;;;;;4806:2222;;;;;;;;:::o;13722:211:327:-;1064:19:69;;13873:4:327;;1064:19:69;;1060:621;;;391:42;1103:45;:49;1099:572;;-1:-1:-1;;;;;1396:18:69;;1404:10;1396:18;1392:94;;;13889:37:327::1;13908:4;13914:2;13918:7;13889:18;:37::i;:::-;1461:7:69::0;;1392:94;1508:69;;-1:-1:-1;;;1508:69:69;;391:42;;1508;;:69;;1559:4;;1566:10;;1508:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:154;;1627:10;1608:30;;-1:-1:-1;;;1608:30:69;;;;;;;;:::i;1503:154::-;13889:37:327::1;13908:4;13914:2;13918:7;13889:18;:37::i;:::-;13722:211:::0;;;;:::o;1277:203:52:-;1341:7;1374:17;1054:8;:15;;980:96;1374:17;1364:6;:27;1360:81;;1407:23;;-1:-1:-1;;;1407:23:52;;24388:2:640;1407:23:52;;;24370:21:640;24427:2;24407:18;;;24400:30;-1:-1:-1;;;24446:18:640;;;24439:43;24499:18;;1407:23:52;24186:337:640;1360:81:52;1457:8;1466:6;1457:16;;;;;;;;:::i;:::-;;;;;;;;;1450:23;;1277:203;;;:::o;1421:347:77:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:77;;-1:-1:-1;1613:66:77;;;-1:-1:-1;1755:6:77;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;3255:271:71:-;3350:19;;;;:13;:19;;;;;;3339:43;;3371:10;3339;:43::i;:::-;3396:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3396:23:71;;;;;;;;;;;;3392:93;;;3435:39;;-1:-1:-1;;;3435:39:71;;25292:2:640;3435:39:71;;;25274:21:640;25331:2;25311:18;;;25304:30;25370:31;25350:18;;;25343:59;25419:18;;3435:39:71;25090:353:640;3392:93:71;3494:25;3505:4;3511:7;3494:10;:25::i;243:208:67:-;321:28;:26;:28::i;:::-;313:84;;;;-1:-1:-1;;;313:84:67;;25650:2:640;313:84:67;;;25632:21:640;25689:2;25669:18;;;25662:30;25728:34;25708:18;;;25701:62;-1:-1:-1;;;25779:18:640;;;25772:41;25830:19;;313:84:67;25448:407:640;313:84:67;407:37;431:12;407:23;:37::i;4466:217:71:-;4557:10;-1:-1:-1;;;;;4557:21:71;;;4553:88;;4594:36;;-1:-1:-1;;;4594:36:71;;26062:2:640;4594:36:71;;;26044:21:640;26101:2;26081:18;;;26074:30;-1:-1:-1;;;26120:18:640;;;26113:56;26186:18;;4594:36:71;25860:350:640;4553:88:71;4650:26;4662:4;4668:7;4650:11;:26::i;7485:192:327:-;787:4:71;931:28;787:4;948:10;931;:28::i;:::-;7585:14:327::1;:32:::0;;;7632:38:::1;::::0;2825:25:640;;;7632:38:327::1;::::0;2813:2:640;2798:18;7632:38:327::1;;;;;;;;7485:192:::0;;:::o;13984:219::-;1064:19:69;;14139:4:327;;1064:19:69;;1060:621;;;391:42;1103:45;:49;1099:572;;-1:-1:-1;;;;;1396:18:69;;1404:10;1396:18;1392:94;;;14155:41:327::1;14178:4;14184:2;14188:7;14155:22;:41::i;1392:94:69:-:0;1508:69;;-1:-1:-1;;;1508:69:69;;391:42;;1508;;:69;;1559:4;;1566:10;;1508:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:154;;1627:10;1608:30;;-1:-1:-1;;;1608:30:69;;;;;;;;:::i;1503:154::-;14155:41:327::1;14178:4;14184:2;14188:7;14155:22;:41::i;12443:184::-:0;12600:20;12606:7;12615:4;12600:5;:20::i;3937:129:57:-;4002:4;4025:23;;;:13;:23;;;;;:30;;4002:4;;4025:23;:30;;;:::i;:::-;;;:34;4018:41;;3937:129;;;:::o;2008:381:77:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:77;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;;;;-1:-1:-1;;;;;2270:16:77;;-1:-1:-1;;;2295:10:77;;;;2211:171;2192:190;;;;;2008:381;;;:::o;918:134:211:-;-1:-1:-1;;;;;1017:28:211;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;509:199:56:-;588:28;:26;:28::i;:::-;580:81;;;;-1:-1:-1;;;580:81:56;;26417:2:640;580:81:56;;;26399:21:640;26456:2;26436:18;;;26429:30;26495:34;26475:18;;;26468:62;-1:-1:-1;;;26546:18:640;;;26539:38;26594:19;;580:81:56;26215:404:640;580:81:56;671:30;681:13;696:4;671:9;:30::i;3087:256:77:-;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:77;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;6654:123:26:-;6718:7;6744:21;6757:7;6744:12;:21::i;:::-;:26;;6654:123;-1:-1:-1;;6654:123:26:o;1189:228:74:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:74;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;7548:177:58:-;7624:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7624:31:58;7679:39;;;;:25;:39;;;;;;;;;7667:51;;;;;;;;;;;;;;;;;;;;;;7679:25;7667:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7667:51:58;;;;;;;;;;;;7679:39;7667:51;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7548:177;;;:::o;4080:203:26:-;4144:7;-1:-1:-1;;;;;4167:19:26;;4163:60;;4195:28;;-1:-1:-1;;;4195:28:26;;;;;;;;;;;4163:60;-1:-1:-1;;;;;;4248:19:26;;;;;:12;:19;;;;;:27;-1:-1:-1;;;;;4248:27:26;;4080:203::o;1949:2760:58:-;2114:24;:22;:24::i;:::-;2109:80;;2154:24;;-1:-1:-1;;;2154:24:58;;;;;;;:::i;2109:80::-;2228:14;:29;2296:20;;2228:29;2733:108;;;;2791:39;2812:18;2791;:39;:::i;:::-;2775:55;;2733:108;2851:20;:41;;;:14;2902:45;;;:29;;3003:643;3023:22;;;3003:643;;;3074:6;;;:69;;;3114:11;;3126:1;3114:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;3084:59;;3074:69;3066:84;;;;-1:-1:-1;;;3066:84:58;;27164:2:640;3066:84:58;;;27146:21:640;27203:1;27183:18;;;27176:29;-1:-1:-1;;;27221:18:640;;;27214:32;27263:18;;3066:84:58;26962:325:640;3066:84:58;3165:28;3196:25;3165:28;3222:17;3238:1;3222:13;:17;:::i;:::-;3196:44;;;;;;;;;;;:58;;;3165:89;;3295:11;;3307:1;3295:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;3272:20;:56;3268:123;;;3348:28;;-1:-1:-1;;;3348:28:58;;27494:2:640;3348:28:58;;;27476:21:640;27533:2;27513:18;;;27506:30;-1:-1:-1;;;27552:18:640;;;27545:48;27610:18;;3348:28:58;27292:342:640;3268:123:58;3452:11;;3464:1;3452:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3405:25;:44;3431:17;3447:1;3431:13;:17;:::i;:::-;3405:44;;;;;;;;;;;:61;;;;;;:::i;:::-;-1:-1:-1;3541:20:58;;-1:-1:-1;3480:25:58;:44;3506:17;3522:1;3506:13;:17;:::i;:::-;3480:44;;;;;;;;;;;-1:-1:-1;3480:44:58;:58;;:81;3606:11;;3618:1;3606:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;-1:-1:-1;3047:3:58;;-1:-1:-1;3047:3:58;;;:::i;:::-;;;;3003:643;;;;4186:22;4182:446;;;4241:18;4224:129;4265:13;4261:1;:17;4224:129;;;4310:28;;;;:25;:28;;;;;4303:35;;;;;;;;;4310:25;4303:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4303:35:58;;;4310:28;4303:35;;;;4310:28;4303:35;:::i;:::-;;;4280:3;;;;;:::i;:::-;;;;4224:129;;;;4182:446;;;4387:39;;;4383:235;;;4463:11;4446:158;4487:18;4483:1;:22;4446:158;;;4541:25;:44;4567:17;4583:1;4567:13;:17;:::i;:::-;4541:44;;;;;;;;;;;-1:-1:-1;4541:44:58;;;4534:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4534:51:58;;;4541:44;4534:51;;;;-1:-1:-1;4534:51:58;:::i;:::-;;;4507:3;;;;;:::i;:::-;;;;4446:158;;;;4383:235;4643:59;4666:11;;4679:22;4643:59;;;;;;;;:::i;:::-;;;;;;;;2099:2610;;;;1949:2760;;;:::o;2821:255:73:-;2926:24;:22;:24::i;:::-;2921:80;;2966:24;;-1:-1:-1;;;2966:24:73;;;;;;;:::i;2921:80::-;3011:58;3037:21;3060:8;3011:25;:58::i;699:1187:58:-;952:85;965:9;976;987;998:14;1014:15;1031:5;952:12;:85::i;:::-;1048:25;1076:27;:25;:27::i;:::-;1048:55;;1114:103;1126:17;1145:16;:14;:16::i;:::-;1163:9;1174;1185:14;1201:15;1114:11;:103::i;:::-;-1:-1:-1;1262:44:58;;;;:25;:44;;;;;:25;:58;:71;;1324:9;;1262:44;:71;;1324:9;;1262:71;:::i;:::-;;;;-1:-1:-1;;1343:55:58;;;;:36;:55;;;;;1420:9;;1399:16;:14;:16::i;:::-;-1:-1:-1;;;;;1343:73:58;-1:-1:-1;;;;;1343:73:58;;;;;;;;;;;;;:86;;;;;;;:::i;:::-;;;;-1:-1:-1;1486:70:58;;-1:-1:-1;1515:1:58;1519:9;1530;1541:14;1486:20;:70::i;:::-;1615:20;1638:44;1661:9;1672;1638:22;:44::i;:::-;1615:67;;1749:9;-1:-1:-1;;;;;1698:86:58;1731:16;:14;:16::i;:::-;-1:-1:-1;;;;;1698:86:58;1712:17;1698:86;1760:12;1774:9;1698:86;;;;;;16281:25:640;;;16337:2;16322:18;;16315:34;16269:2;16254:18;;16107:248;1698:86:58;;;;;;;;942:944;;699:1187;;;;;;:::o;1643:633:72:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:72;:42;1893:367;;1972:5;1963;:14;1959:133;;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:72;;-1:-1:-1;2060:13:72;;-1:-1:-1;;2060:13:72;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:72;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1324:131:71:-;1402:4;1425:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1425:23:71;;;;;;;;;;;;;;;1324:131::o;1003:188:54:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:54;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;7001:102:26:-;7057:13;7089:7;7082:14;;;;;:::i;4281:288:77:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:77;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;1383:534:57:-;1502:17;1522:23;;;:13;:23;;;;;1502:43;;1465:25;;1502:17;1522:23;1502:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1559:4;:11;1574:1;1559:16;1555:74;;;1591:27;;-1:-1:-1;;;1591:27:57;;34336:2:640;1591:27:57;;;34318:21:640;34375:2;34355:18;;;34348:30;-1:-1:-1;;;34394:18:640;;;34387:47;34451:18;;1591:27:57;34134:341:640;1555:74:57;1640:25;1667:22;1704:4;1693:34;;;;;;;;;;;;:::i;:::-;1639:88;;;;1759:34;1774:12;1788:4;;1759:14;:34::i;:::-;1738:56;;1878:14;1840:11;1853:4;;1859:13;1823:50;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1813:61;;;;;;:79;1805:105;;;;-1:-1:-1;;;1805:105:57;;35920:2:640;1805:105:57;;;35902:21:640;35959:2;35939:18;;;35932:30;-1:-1:-1;;;35978:18:640;;;35971:43;36031:18;;1805:105:57;35718:337:640;1805:105:57;1492:425;;;1383:534;;;;;:::o;568:46::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;13305:174:327:-;1886:19:69;;13409:8:327;;1886:19:69;;1882:286;;;391:42;1925:45;:49;1921:237;;1999:67;;-1:-1:-1;;;1999:67:69;;391:42;;1999;;:67;;2050:4;;2057:8;;1999:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1994:150;;2116:8;2097:28;;-1:-1:-1;;;2097:28:69;;;;;;;;:::i;1994:150::-;13429:43:327::1;13453:8;13463;13429:23;:43::i;2206:211:71:-:0;2285:4;2306:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2301:88;;-1:-1:-1;2355:14:71;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2355:23:71;;;;;;;;;;;;2348:30;;2301:88;-1:-1:-1;2406:4:71;2206:211;;;;:::o;632:301:463:-;700:22;756:4;-1:-1:-1;;;;;744:24:463;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;734:34;;783:9;778:125;798:15;;;778:125;;;847:45;877:4;884;;889:1;884:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;847:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;847:21:463;;-1:-1:-1;;;847:45:463:i;:::-;834:7;842:1;834:10;;;;;;;;:::i;:::-;;;;;;:58;;;;815:3;;;;;:::i;:::-;;;;778:125;;;;632:301;;;;:::o;3455:243:73:-;3533:24;:22;:24::i;:::-;3528:80;;3573:24;;-1:-1:-1;;;3573:24:73;;;;;;;:::i;3528:80::-;3617:15;:26;;3635:8;;3617:15;-1:-1:-1;;3617:26:73;;3635:8;3617:26;;;;;;;;:::i;:::-;;;;;;3659:32;3682:8;3659:32;;;;;;:::i;:::-;;;;;;;;3455:243;:::o;14254:252:327:-;1064:19:69;;14436:4:327;;1064:19:69;;1060:621;;;391:42;1103:45;:49;1099:572;;-1:-1:-1;;;;;1396:18:69;;1404:10;1396:18;1392:94;;;14452:47:327::1;14475:4;14481:2;14485:7;14494:4;14452:22;:47::i;:::-;1461:7:69::0;;1392:94;1508:69;;-1:-1:-1;;;1508:69:69;;391:42;;1508;;:69;;1559:4;;1566:10;;1508:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:154;;1627:10;1608:30;;-1:-1:-1;;;1608:30:69;;;;;;;;:::i;1503:154::-;14452:47:327::1;14475:4;14481:2;14485:7;14494:4;14452:22;:47::i;:::-;14254:252:::0;;;;;:::o;7116:367:58:-;7242:20;;:14;7210:29;7174:7;;;;7210:52;;7242:20;7210:52;:::i;:::-;7198:64;;7193:252;7268:14;:29;7264:33;;7193:252;;;7341:25;:32;7367:5;7371:1;7367;:5;:::i;:::-;7341:32;;;;;;;;;;;:47;;;7322:15;:66;7318:117;;7415:5;7419:1;7415;:5;:::i;:::-;7408:12;;;7116:367;:::o;7318:117::-;7299:3;;;;:::i;:::-;;;;7193:252;;;-1:-1:-1;7455:21:58;;-1:-1:-1;;;7455:21:58;;37059:2:640;7455:21:58;;;37041::640;37098:2;37078:18;;;37071:30;-1:-1:-1;;;37117:18:640;;;37110:41;37168:18;;7455:21:58;36857:335:640;4694:402:327;4760:13;4786:15;4807:21;4819:8;4807:11;:21::i;:::-;4785:43;;;4838:22;4863:21;4875:8;4863:11;:21::i;:::-;4838:46;;4899:25;4916:7;4899:16;:25::i;:::-;4895:195;;;4971:8;4954:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;4940:46;;;;4694:402;;;:::o;4895:195::-;5048:8;5058:19;:8;:17;:19::i;:::-;5031:47;;;;;;;;;:::i;2683:398:72:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:72;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;6815:395:327:-;6931:25;6902:10;;931:28:71;942:4;948:10;931;:28::i;:::-;6972:15:327::1;6990:25;7008:6;6990:17;:25::i;:::-;6972:43;;7039:27;7052:7;7061:4;;7039:12;:27::i;:::-;7025:41;;7077:30;7095:7;7077:30;;;;;;;;;;;::::0;:17:::1;:30::i;:::-;7117:33;7129:7;7138:11;7117;:33::i;:::-;7183:6;7166:37;7191:11;7166:37;;;;;;:::i;:::-;;;;;;;;6962:248;6815:395:::0;;;;;;:::o;6168:540::-;6315:15;6346:16;;6342:293;;6379:25;;6432:35;;;;6443:5;6432:35;:::i;:::-;6378:89;;;;6485:12;:19;6508:1;6485:24;;:48;;;;-1:-1:-1;6513:20:327;;;6485:48;6481:144;;;6553:57;6595:7;6571:21;;:31;;;;:::i;:::-;6604:5;;6553:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6553:17:327;;-1:-1:-1;;;6553:57:327:i;:::-;6364:271;;6342:293;6652:49;6667:7;6676:17;;6695:5;;6652:14;:49::i;:::-;6645:56;6168:540;-1:-1:-1;;;;;;6168:540:327:o;1058:147:73:-;1153:20;;-1:-1:-1;;;;;1153:20:73;;;-1:-1:-1;;;1182:14:73;;;;;;1058:147::o;3897:171:71:-;3993:19;;;;:13;:19;;;;;;3982:43;;4014:10;3982;:43::i;3147:1300:327:-;3111:19:433;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:433;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:433;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:433;;38711:2:640;3157:201:433;;;38693:21:640;38750:2;38730:18;;;38723:30;38789:34;38769:18;;;38762:62;-1:-1:-1;;;38840:18:640;;;38833:44;38894:19;;3157:201:433;38509:410:640;3157:201:433;3368:12;:16;;-1:-1:-1;;3368:16:433;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:433;;;;;3394:65;3568:26:327::1;3626:24;3736:41;3758:18:::0;3736:21:::1;:41::i;:::-;3787:30;3802:5;3809:7;3787:14;:30::i;:::-;3827:32;:30;:32::i;:::-;3870:31;3888:12;3870:17;:31::i;:::-;3911:26;3923:13;3911:11;:26::i;:::-;3947:29;3971:4;3947:23;:29::i;:::-;3987:45;787:4:71;4018:13:327::0;3987:10:::1;:45::i;:::-;4042:38;4053:11;4066:13;4042:10;:38::i;:::-;4090:40;4101:13;4116;4090:10;:40::i;:::-;4140:37;4151:13;4174:1;4140:10;:37::i;:::-;4188:61;4210:21;4233:15;-1:-1:-1::0;;;;;4188:61:327::1;:21;:61::i;:::-;4259:56;4284:17;4303:11;-1:-1:-1::0;;;;;4259:56:327::1;:24;:56::i;:::-;4325:42;4352:14;4325:26;:42::i;:::-;4378:12;:28:::0;;;;4416:10:::1;:24:::0;3479:99:433;;;;3529:5;3513:21;;-1:-1:-1;;3513:21:433;;;3553:14;;-1:-1:-1;12328:36:640;;3553:14:433;;12316:2:640;12301:18;3553:14:433;;;;;;;3479:99;3101:483;3147:1300:327;;;;;;;;;;:::o;2409:1283:57:-;2602:11;;2768:4;2762:11;;2862:19;;;2883:2;2858:28;2845:42;;;2933:22;;;2762:11;2585:14;3029:657;3053:6;3049:1;:10;3029:657;;;3135:12;3177:3;;3182:1;3160:24;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3160:24:57;;;;;;;;;3150:35;;3160:24;3150:35;;;;3373:21;;;;;3367:28;3461:13;3631:23;;;;;3624:38;3061:7;;-1:-1:-1;3387:1:57;3061:7;:::i;:::-;;;3029:657;;;;2523:1169;2409:1283;;;;;:::o;565:34:54:-;;;;;;;:::i;1186:320:459:-;-1:-1:-1;;;;;1476:19:459;;:23;;;1186:320::o;3633:388:26:-;3797:4;-1:-1:-1;;;;;;3836:51:26;;-1:-1:-1;;;3836:51:26;;:126;;-1:-1:-1;;;;;;;3903:59:26;;-1:-1:-1;;;3903:59:26;3836:126;:178;;;-1:-1:-1;;;;;;;;;;1168:51:468;;;3978:36:26;1060:166:468;10277:172:26;10334:4;10397:13;;10387:7;:23;10357:85;;;;-1:-1:-1;;10415:20:26;;;;:11;:20;;;;;:27;-1:-1:-1;;;10415:27:26;;;;10414:28;;10277:172::o;7872:403::-;7952:13;7968:35;7995:7;7968:26;:35::i;:::-;7952:51;;8023:5;-1:-1:-1;;;;;8017:11:26;:2;-1:-1:-1;;;;;8017:11:26;;8013:48;;;8037:24;;-1:-1:-1;;;8037:24:26;;;;;;;;;;;8013:48;8092:5;-1:-1:-1;;;;;8076:21:26;:12;:10;:12::i;:::-;-1:-1:-1;;;;;8076:21:26;;8072:158;;8116:37;8133:5;8140:12;:10;:12::i;8116:37::-;8111:119;;8180:35;;-1:-1:-1;;;8180:35:26;;;;;;;;;;;8111:119;8240:28;8249:2;8253:7;8262:5;8240:8;:28::i;10349:127:327:-;10405:4;10428:41;10405:4;10456:12;:10;:12::i;10428:41::-;10421:48;;10349:127;:::o;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;2371:375:73:-;2499:6;2481:15;:24;2477:80;;;2521:25;;-1:-1:-1;;;2521:25:73;;;;;;;:::i;2477:80::-;2567:14;:40;;-1:-1:-1;;;;;;2617:44:73;-1:-1:-1;;;2567:40:73;;;;-1:-1:-1;;;;;;2617:44:73;;-1:-1:-1;;;;;2617:44:73;;;;;;;;2677:62;;2825:25:640;;;2677:62:73;;2813:2:640;2798:18;2677:62:73;;;;;;;;2371:375;;:::o;898:906:288:-;1019:4;;1067;1019;;1109:567;1133:5;:12;1129:1;:16;1109:567;;;1166:10;1175:1;1166:10;;:::i;:::-;;;1190:20;1213:5;1219:1;1213:8;;;;;;;;:::i;:::-;;;;;;;1190:31;;1256:12;1240;:28;1236:430;;1391:44;;;;;;39964:19:640;;;39999:12;;;39992:28;;;40036:12;;1391:44:288;;;;;;;;;;;;1381:55;;;;;;1366:70;;1236:430;;;1578:44;;;;;;39964:19:640;;;39999:12;;;39992:28;;;40036:12;;1578:44:288;;;;;;;;;;;;1568:55;;;;;;1553:70;;1650:1;1641:10;;;;;:::i;:::-;;;1236:430;-1:-1:-1;1147:3:288;;;;:::i;:::-;;;;1109:567;;;-1:-1:-1;1769:20:288;;;;;-1:-1:-1;;;;898:906:288:o;9175:164:26:-;9304:28;9314:4;9320:2;9324:7;9304:9;:28::i;5557:495:71:-;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:71;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:71;5867:2;5827:21;:43::i;:::-;5941:40;5971:4;5978:2;5941:21;:40::i;:::-;5736:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5736:267:71;;;;;;;;;;-1:-1:-1;;;5684:351:71;;;;;;;:::i;3475:152:72:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;457:160:67:-;528:19;:34;;-1:-1:-1;;528:34:67;;;;;;;;;;577:33;;636:41:640;;;577:33:67;;624:2:640;609:18;577:33:67;496:187:640;3205:157:72;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:72;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:72;;;4197:34;;;;4190:41;2043:269:73;;:::o;9405:179:26:-;9538:39;9555:4;9561:2;9565:7;9538:39;;;;;;;;;;;;:16;:39::i;16792:2355::-;16871:35;16909:21;16922:7;16909:12;:21::i;:::-;16956:18;;16871:59;;-1:-1:-1;16985:284:26;;;;17018:22;17060:4;-1:-1:-1;;;;;17044:20:26;:12;:10;:12::i;:::-;-1:-1:-1;;;;;17044:20:26;;:76;;;;17084:36;17101:4;17107:12;:10;:12::i;17084:36::-;17044:132;;;;17164:12;:10;:12::i;:::-;-1:-1:-1;;;;;17140:36:26;:20;17152:7;17140:11;:20::i;:::-;-1:-1:-1;;;;;17140:36:26;;17044:132;17018:159;;17197:17;17192:66;;17223:35;;-1:-1:-1;;;17223:35:26;;;;;;;;;;;17192:66;17004:265;16985:284;17279:51;17301:4;17315:1;17319:7;17328:1;17279:21;:51::i;:::-;17392:35;17409:1;17413:7;17422:4;17392:8;:35::i;:::-;-1:-1:-1;;;;;17751:18:26;;;17717:31;17751:18;;;:12;:18;;;;;;;;17783:24;;-1:-1:-1;;;;;;;;;;17783:24:26;;;;;;;;;-1:-1:-1;;;;;;17783:24:26;;;;17821:29;;;;;17806:1;17821:29;;;;;;;;-1:-1:-1;;;;;;17821:29:26;;;;;;;;;;17980:20;;;:11;:20;;;;;;18014;;-1:-1:-1;;;;18081:15:26;18048:49;;;-1:-1:-1;;;18048:49:26;-1:-1:-1;;;;;;18048:49:26;;;;;;;;;;18111:22;-1:-1:-1;;;18111:22:26;;;18399:11;;;18458:24;;;;;18500:13;;17751:18;;18458:24;;18500:13;18496:377;;18707:13;;18692:11;:28;18688:171;;18744:20;;18812:28;;;;-1:-1:-1;;;;;18786:54:26;-1:-1:-1;;;18786:54:26;-1:-1:-1;;;;;;18786:54:26;;;-1:-1:-1;;;;;18744:20:26;;18786:54;;;;18688:171;-1:-1:-1;;18898:35:26;;18925:7;;-1:-1:-1;18921:1:26;;-1:-1:-1;;;;;;18898:35:26;;;-1:-1:-1;;;;;;;;;;;18898:35:26;18921:1;;18898:35;-1:-1:-1;;19116:12:26;:14;;;;;;-1:-1:-1;;16792:2355:26:o;2191:783:69:-;391:42;2326:45;:49;2322:646;;-1:-1:-1;;;;;2449:51:69;;;:55;2445:513;;2572:9;2568:289;;;2605:92;;-1:-1:-1;;;2605:92:69;;391:42;;2605:45;;:92;;2659:4;;2666:30;;2605:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2043:269:73;;:::o;2568:289:69:-;2744:94;;-1:-1:-1;;;2744:94:69;;391:42;;2744:47;;:94;;2800:4;;2807:30;;2744:94;;;:::i;2445:513::-;2895:48;;-1:-1:-1;;;2895:48:69;;391:42;;2895:33;;:48;;2937:4;;2895:48;;;:::i;3430:334:77:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:77;;;;;;;:::i;3531:76::-;3617:16;:36;;-1:-1:-1;;;;;;3663:32:77;3617:36;-1:-1:-1;;;;;3617:36:77;;;;;-1:-1:-1;;;;3663:32:77;;;;;-1:-1:-1;;;3663:32:77;;;;;;;;3711:46;;2825:25:640;;;3711:46:77;;2813:2:640;2798:18;3711:46:77;2679:177:640;5423:1174:26;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;5533:7:26;5631:13;;5624:4;:20;5620:913;;;5668:31;5702:17;;;:11;:17;;;;;;;;;5668:51;;;;;;;;;-1:-1:-1;;;;;5668:51:26;;;;-1:-1:-1;;;5668:51:26;;-1:-1:-1;;;;;5668:51:26;;;;;;;;-1:-1:-1;;;5668:51:26;;;;;;;;;;;;;;5741:774;;5794:14;;-1:-1:-1;;;;;5794:28:26;;5790:107;;5861:9;5423:1174;-1:-1:-1;;;5423:1174:26:o;5790:107::-;-1:-1:-1;;;6257:6:26;6305:17;;;;:11;:17;;;;;;;;;6293:29;;;;;;;;;-1:-1:-1;;;;;6293:29:26;;;;;-1:-1:-1;;;6293:29:26;;-1:-1:-1;;;;;6293:29:26;;;;;;;;-1:-1:-1;;;6293:29:26;;;;;;;;;;;;;6356:28;6352:115;;6427:9;5423:1174;-1:-1:-1;;;5423:1174:26:o;6352:115::-;6214:279;;;5646:887;5620:913;6559:31;;-1:-1:-1;;;6559:31:26;;;;;;;;;;;1499:170:74;1578:9;:26;;-1:-1:-1;;;;;;1578:26:74;-1:-1:-1;;;;;1578:26:74;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:74;1499:170;:::o;3129:261:73:-;3232:15;:26;;;3268:20;:44;;-1:-1:-1;;;;;;3268:44:73;-1:-1:-1;;;;;3268:44:73;;;;;3328:55;;;;;;3268:44;;3232:26;;3328:55;:::i;7920:367:327:-;8151:21;;8138:9;8122:13;;:25;;;;:::i;:::-;:50;;8114:70;;;;-1:-1:-1;;;8114:70:327;;41050:2:640;8114:70:327;;;41032:21:640;41089:1;41069:18;;;41062:29;-1:-1:-1;;;41107:18:640;;;41100:37;41154:18;;8114:70:327;40848:330:640;8114:70:327;8202:14;;:19;;:66;;;8254:14;;8241:9;8225:13;;:25;;;;:::i;:::-;:43;;8202:66;8194:86;;;;-1:-1:-1;;;8194:86:327;;41385:2:640;8194:86:327;;;41367:21:640;41424:1;41404:18;;;41397:29;-1:-1:-1;;;41442:18:640;;;41435:37;41489:18;;8194:86:327;41183:330:640;14512:111:327;14578:7;14604:12;:10;:12::i;8377:1117::-;8577:19;8573:99;;8620:9;:14;8612:29;;;;-1:-1:-1;;;8612:29:327;;;;;;;:::i;8573:99::-;8683:28;8713:21;8738:20;:18;:20::i;:::-;8682:76;;-1:-1:-1;8682:76:327;-1:-1:-1;8769:21:327;-1:-1:-1;;;;;8793:35:327;;;:84;;8856:21;8793:84;;;8831:22;:20;:22::i;:::-;8769:108;-1:-1:-1;8888:18:327;8909:33;8928:14;8909:16;:33;:::i;:::-;8888:54;-1:-1:-1;8952:20:327;2639:6;8976:27;;;;8888:54;8976:27;:::i;:::-;8975:39;;;;:::i;:::-;8952:62;-1:-1:-1;9025:18:327;-1:-1:-1;;;;;9057:45:327;;408:42:286;9057:45:327;9053:176;;;-1:-1:-1;9134:9:327;:23;;9053:176;;;-1:-1:-1;9204:9:327;:14;9053:176;9246:13;9238:28;;;;-1:-1:-1;;;9238:28:327;;;;;;;:::i;:::-;9277:97;9314:9;9325:12;:10;:12::i;:::-;9339:20;9361:12;9277:36;:97::i;:::-;9384:103;9421:9;9432:12;:10;:12::i;:::-;9446:13;9461:25;9474:12;9461:10;:25;:::i;:::-;9384:36;:103::i;:::-;8563:931;;;;;;8377:1117;;;;:::o;9547:245::-;9725:13;;9748:37;9758:3;9763:21;9748:9;:37::i;1273:185:54:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:54;;1339:35;;-1:-1:-1;1384:18:54;;:11;;-1:-1:-1;1384:18:54;;;;-1:-1:-1;1384:18:54;-1:-1:-1;1384:18:54;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;4671:362:77:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:77;;;;;;;:::i;4807:69::-;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:77;;;;;;;;;;;;;-1:-1:-1;4886:29:77;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:77;;;;;;;;;;;-1:-1:-1;4886:81:77;;;;;;;4983:43;;2825:25:640;;;4918:49:77;;4886:29;;4983:43;;2798:18:640;4983:43:77;;;;;;;4671:362;;;:::o;8603:282:26:-;8713:12;:10;:12::i;:::-;-1:-1:-1;;;;;8701:24:26;:8;-1:-1:-1;;;;;8701:24:26;;8697:54;;;8734:17;;-1:-1:-1;;;8734:17:26;;;;;;;;;;;8697:54;8807:8;8762:18;:32;8781:12;:10;:12::i;:::-;-1:-1:-1;;;;;8762:32:26;;;;;;;;;;;;;;;;;-1:-1:-1;8762:32:26;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;8762:53:26;;;;;;;;;;;8845:12;:10;:12::i;:::-;-1:-1:-1;;;;;8830:48:26;;8869:8;8830:48;;;;661:14:640;654:22;636:41;;624:2;609:18;;496:187;8830:48:26;;;;;;;;8603:282;;:::o;1119:455:463:-;1202:12;1234:37;1264:6;1234:29;:37::i;:::-;1226:88;;;;-1:-1:-1;;;1226:88:463;;42438:2:640;1226:88:463;;;42420:21:640;42477:2;42457:18;;;42450:30;42516:34;42496:18;;;42489:62;-1:-1:-1;;;42567:18:640;;;42560:36;42613:19;;1226:88:463;42236:402:640;1226:88:463;1385:12;1399:23;1426:6;-1:-1:-1;;;;;1426:19:463;1446:4;1426:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:67;;;;1468:99;1504:7;1513:10;1468:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;1461:106;1119:455;-1:-1:-1;;;;;1119:455:463:o;9650:381:26:-;9811:28;9821:4;9827:2;9831:7;9811:9;:28::i;:::-;9853:15;:2;-1:-1:-1;;;;;9853:13:26;;:15::i;:::-;9849:176;;;9887:56;9918:4;9924:2;9928:7;9937:5;9887:30;:56::i;:::-;9882:143;;9970:40;;-1:-1:-1;;;9970:40:26;;;;;;;;;;;1568:471:52;1630:15;1647:13;1672:25;1700:17;1054:8;:15;;980:96;1700:17;1672:45;;1727:24;1754:8;1727:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1778:9;1773:224;1797:17;1793:1;:21;1773:224;;;1853:7;1861:1;1853:10;;;;;;;;:::i;:::-;;;;;;;1842:8;:21;1838:149;;;1891:1;1883:9;;1920:7;1928:1;1920:10;;;;;;;;:::i;:::-;;;;;;;1910:20;;1949:23;;;1568:471;;;:::o;1838:149::-;1816:6;1821:1;1816:6;;:::i;:::-;;;1773:224;;;-1:-1:-1;2007:25:52;;-1:-1:-1;;;2007:25:52;;43124:2:640;2007:25:52;;;43106:21:640;43163:2;43143:18;;;43136:30;-1:-1:-1;;;43182:18:640;;;43175:45;43237:18;;2007:25:52;42922:339:640;2153:390:52;2215:13;2240:25;2268:17;1054:8;:15;;980:96;2268:17;2240:45;;2295:24;2322:8;2295:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:9;2341:161;2365:17;2361:1;:21;2341:161;;;2421:7;2429:1;2421:10;;;;;;;;:::i;:::-;;;;;;;2410:8;:21;2406:86;;;2458:7;:19;2466:7;2474:1;2466:10;;;;;;;;:::i;:::-;;;;;;;2458:19;;;;;;;;;;;2451:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2153:390;;;:::o;2406:86::-;2384:6;2389:1;2384:6;;:::i;:::-;;;2341:161;;403:703:464;459:13;676:10;672:51;;-1:-1:-1;;702:10:464;;;;;;;;;;;;-1:-1:-1;;;702:10:464;;;;;403:703::o;672:51::-;747:5;732:12;786:75;793:9;;786:75;;818:8;;;;:::i;:::-;;-1:-1:-1;840:10:464;;-1:-1:-1;848:2:464;840:10;;:::i;:::-;;;786:75;;;870:19;902:6;-1:-1:-1;;;;;892:17:464;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;892:17:464;;870:39;;919:150;926:10;;919:150;;952:11;962:1;952:11;;:::i;:::-;;-1:-1:-1;1020:10:464;1028:2;1020:5;:10;:::i;:::-;1007:24;;:2;:24;:::i;:::-;994:39;;977:6;984;977:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;977:56:464;;;;;;;;-1:-1:-1;1047:11:464;1056:2;1047:11;;:::i;:::-;;;919:150;;;1092:6;403:703;-1:-1:-1;;;;403:703:464:o;678:140:57:-;771:23;;;;:13;:23;;;;;;;;:40;;;;;;;;:::i;2628:117:52:-;2710:17;;;;:7;:17;;;;;;;;:28;;;;;;;;:::i;1254:592:63:-;1409:15;1441:14;:12;:14::i;:::-;1436:70;;1471:24;;-1:-1:-1;;;1471:24:63;;;;;;;:::i;1436:70::-;1520:12;1516:58;;1548:15;;-1:-1:-1;;;1548:15:63;;43585:2:640;1548:15:63;;;43567:21:640;43624:1;43604:18;;;43597:29;-1:-1:-1;;;43642:18:640;;;43635:35;43687:18;;1548:15:63;43383:328:640;1516:58:63;1584:15;1602:21;;1584:39;;1669:55;1688:7;1697;1706:17;;1669:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1669:18:63;;-1:-1:-1;;;1669:55:63:i;:::-;1635:21;1634:90;;;;;-1:-1:-1;1757:7:63;1740:74;1786:1;1766:17;1776:7;1757;1766:17;:::i;:::-;:21;;;;:::i;:::-;1789:17;;1808:5;;1740:74;;;;;;;;;;:::i;:::-;;;;;;;;1825:14;1254:592;;;;;;;:::o;470:194:211:-;4910:13:433;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:433;;;;;;;:::i;:::-;572:26:211::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;2225:151:26:-:0;4910:13:433;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:433;;;;;;;:::i;:::-;2329:40:26::1;2354:5;2361:7;2329:24;:40::i;356:147:56:-:0;417:79;306:42;491:4;417:51;:79::i;:::-;356:147::o;14629:231:327:-;14778:14;14815:38;:36;:38::i;19258:189:26:-;19368:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;19368:29:26;-1:-1:-1;;;;;19368:29:26;;;;;;;;;19412:28;;19368:24;;19412:28;;;;;;;19258:189;;;:::o;14333:2082::-;14443:35;14481:21;14494:7;14481:12;:21::i;:::-;14443:59;;14539:4;-1:-1:-1;;;;;14517:26:26;:13;:18;;;-1:-1:-1;;;;;14517:26:26;;14513:67;;14552:28;;-1:-1:-1;;;14552:28:26;;;;;;;;;;;14513:67;14591:22;14633:4;-1:-1:-1;;;;;14617:20:26;:12;:10;:12::i;:::-;-1:-1:-1;;;;;14617:20:26;;:72;;;;14653:36;14670:4;14676:12;:10;:12::i;14653:36::-;14617:124;;;;14729:12;:10;:12::i;:::-;-1:-1:-1;;;;;14705:36:26;:20;14717:7;14705:11;:20::i;:::-;-1:-1:-1;;;;;14705:36:26;;14617:124;14591:151;;14758:17;14753:66;;14784:35;;-1:-1:-1;;;14784:35:26;;;;;;;;;;;14753:66;-1:-1:-1;;;;;14833:16:26;;14829:52;;14858:23;;-1:-1:-1;;;14858:23:26;;;;;;;;;;;14829:52;14892:43;14914:4;14920:2;14924:7;14933:1;14892:21;:43::i;:::-;14997:35;15014:1;15018:7;15027:4;14997:8;:35::i;:::-;-1:-1:-1;;;;;15322:18:26;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;;;;;15322:31:26;;;-1:-1:-1;;;;;15322:31:26;;;-1:-1:-1;;15322:31:26;;;;;;;15367:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;15367:29:26;;;;;;;;;;;15445:20;;;:11;:20;;;;;;15479:18;;-1:-1:-1;;;;;;15511:49:26;;;;-1:-1:-1;;;15544:15:26;15511:49;;;;;;;;;;15830:11;;15889:24;;;;;15931:13;;15445:20;;15889:24;;15931:13;15927:377;;16138:13;;16123:11;:28;16119:171;;16175:20;;16243:28;;;;-1:-1:-1;;;;;16217:54:26;-1:-1:-1;;;16217:54:26;-1:-1:-1;;;;;;16217:54:26;;;-1:-1:-1;;;;;16175:20:26;;16217:54;;;;16119:171;15298:1016;;;16348:7;16344:2;-1:-1:-1;;;;;16329:27:26;16338:4;-1:-1:-1;;;;;16329:27:26;-1:-1:-1;;;;;;;;;;;16329:27:26;;;;;;;;;16366:42;13722:211:327;1565:441:294;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:294;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:294;;1665:47;;-1:-1:-1;;;1722:6:294;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:294;;;;;;;;;-1:-1:-1;;;1747:6:294;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:294;;;;;;;;-1:-1:-1;1777:9:294;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:294;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:294;;;;;;;;-1:-1:-1;1892:1:294;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:294;;1913:55;;;;-1:-1:-1;;;1913:55:294;;44841:2:640;1913:55:294;;;44823:21:640;;;44860:18;;;44853:30;44919:34;44899:18;;;44892:62;44971:18;;1913:55:294;44639:356:640;1913:55:294;1992:6;1565:441;-1:-1:-1;;;1565:441:294:o;5036:168:71:-;5114:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5114:23:71;;;;;;;;;;:30;;-1:-1:-1;;5114:30:71;5140:4;5114:30;;;5159:38;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;3690:253:72:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:72;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:72;;;-1:-1:-1;;;;;;3846:40:72;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5253:204:71:-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:71;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:71;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;12681:573:327:-;13026:33;13034:12;;13056:1;13026:7;:33::i;:::-;13025:34;:56;;;;-1:-1:-1;;;;;;13063:18:327;;;;13025:56;:76;;;;-1:-1:-1;;;;;;13085:16:327;;;;13025:76;13021:227;;;13122:27;13130:12;;13144:4;13122:7;:27::i;:::-;13121:28;:58;;;;;13154:25;13162:12;;13176:2;13154:7;:25::i;:::-;13153:26;13121:58;13117:121;;;13199:24;;-1:-1:-1;;;13199:24:327;;45202:2:640;13199:24:327;;;45184:21:640;45241:2;45221:18;;;45214:30;-1:-1:-1;;;45260:18:640;;;45253:44;45314:18;;13199:24:327;45000:338:640;508:385:286;659:12;655:49;;687:7;;655:49;-1:-1:-1;;;;;718:25:286;;408:42;718:25;714:173;;;759:37;783:3;788:7;759:23;:37::i;714:173::-;827:49;845:9;856:5;863:3;868:7;827:17;:49::i;10528:102:26:-;10596:27;10606:2;10610:8;10596:27;;;;;;;;;;;;:9;:27::i;6622:742:459:-;6768:12;6796:7;6792:566;;;-1:-1:-1;6826:10:459;6819:17;;6792:566;6937:17;;:21;6933:415;;7181:10;7175:17;7241:15;7228:10;7224:2;7220:19;7213:44;6933:415;7320:12;7313:20;;-1:-1:-1;;;7313:20:459;;;;;;;;:::i;19928:694:26:-;20086:4;20133:2;-1:-1:-1;;;;;20106:47:26;;20154:12;:10;:12::i;:::-;20168:4;20174:7;20183:5;20106:83;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20106:83:26;;;;;;;;-1:-1:-1;;20106:83:26;;;;;;;;;;;;:::i;:::-;;;20102:514;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20381:13:26;;20377:229;;20426:40;;-1:-1:-1;;;20426:40:26;;;;;;;;;;;20377:229;20566:6;20560:13;20551:6;20547:2;20543:15;20536:38;20102:514;-1:-1:-1;;;;;;20257:66:26;-1:-1:-1;;;20257:66:26;;-1:-1:-1;19928:694:26;;;;;;:::o;11251:127:327:-;11315:4;11338:33;11346:10;;11358:12;:10;:12::i;2840:362:52:-;2990:25;;3054:24;3065:13;3054:8;:24;:::i;:::-;3126:8;:22;;;;;;;;;;;;;-1:-1:-1;3159:16:52;;;:7;3126:22;3159:16;;;;;;;:36;;3044:34;;-1:-1:-1;3044:34:52;;-1:-1:-1;3159:36:52;;:16;;:36;;;;:::i;:::-;;2840:362;;;;;;:::o;776:69:461:-;4910:13:433;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:433;;;;;;;:::i;670:242:211:-;4910:13:433;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:433;;;;;;;:::i;:::-;787:9:211::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:211::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:211;:45;;-1:-1:-1;;850:45:211::1;::::0;::::1;;::::0;;;::::1;::::0;;831:3;::::1;::::0;::::1;:::i;:::-;;;;782:124;;2382:202:26::0;4910:13:433;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:433;;;;;;;:::i;:::-;2496:13:26;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2519:17:26;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2732:7:26;2546:13:::1;:31:::0;-1:-1:-1;;2382:202:26:o;441:447:69:-;829:52;839:30;871:9;829;:52::i;1058:401:211:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:211;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:461;;10349:127:327:o;2532:292:286:-;2714:12;2732:2;-1:-1:-1;;;;;2732:7:286;2748:5;2732:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:46;;;2777:7;2769:48;;;;-1:-1:-1;;;2769:48:286;;46503:2:640;2769:48:286;;;46485:21:640;46542:2;46522:18;;;46515:30;-1:-1:-1;;;46561:18:640;;;46554:58;46629:18;;2769:48:286;46301:352:640;2073:396:286;2234:3;-1:-1:-1;;;;;2225:12:286;:5;-1:-1:-1;;;;;2225:12:286;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:286;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:286;;2353:3;2358:7;2322:30;:44::i;2280:183::-;2397:55;-1:-1:-1;;;;;2397:34:286;;2432:5;2439:3;2444:7;2397:34;:55::i;10990:1708:26:-;11131:13;;-1:-1:-1;;;;;11158:16:26;;11154:48;;11183:19;;-1:-1:-1;;;11183:19:26;;;;;;;;;;;11154:48;11216:13;11212:44;;11238:18;;-1:-1:-1;;;11238:18:26;;;;;;;;;;;11212:44;11267:61;11297:1;11301:2;11305:12;11319:8;11267:21;:61::i;:::-;-1:-1:-1;;;;;11599:16:26;;;;;;:12;:16;;;;;;;;:44;;-1:-1:-1;;;;;;11657:49:26;;-1:-1:-1;;;;;11599:44:26;;;;;;;11657:49;;;-1:-1:-1;;;;;;;;;11599:44:26;;;;;;11657:49;;;;;;;;;;;;;;;;11721:25;;;:11;:25;;;;;;:35;;-1:-1:-1;;;;;;11770:66:26;;;-1:-1:-1;;;11820:15:26;11770:66;;;;;;;;;;;;;11721:25;;11914:23;;;;11956:15;;:13;:15::i;:::-;11952:618;;;11991:308;12021:38;;12046:12;;-1:-1:-1;;;;;12021:38:26;;;12038:1;;-1:-1:-1;;;;;;;;;;;12021:38:26;12038:1;;12021:38;12086:69;12125:1;12129:2;12133:14;;;;;;12149:5;12086:30;:69::i;:::-;12081:172;;12190:40;;-1:-1:-1;;;12190:40:26;;;;;;;;;;;12081:172;12294:3;12279:12;:18;11991:308;;12378:12;12361:13;;:29;12357:43;;12392:8;;;12357:43;11952:618;;;12439:117;12469:40;;12494:14;;;;;-1:-1:-1;;;;;12469:40:26;;;12486:1;;-1:-1:-1;;;;;;;;;;;12469:40:26;12486:1;;12469:40;12551:3;12536:12;:18;12439:117;;11952:618;-1:-1:-1;12583:13:26;:28;12631:60;12660:1;12664:2;12668:12;12682:8;12631:60;:::i;735:205:228:-;847:86;867:5;897:23;;;922:2;926:5;874:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;874:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:228;-1:-1:-1;;;;;;874:58:228;;;;;;;;;;847:19;:86::i;946:241::-;1111:68;;-1:-1:-1;;;;;46916:15:640;;;1111:68:228;;;46898:34:640;46968:15;;46948:18;;;46941:43;47000:18;;;46993:34;;;1084:96:228;;1104:5;;-1:-1:-1;;;1134:27:228;46833:18:640;;1111:68:228;46658:375:640;3241:706:228;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:228;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:228;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:228;;47240:2:640;3845:85:228;;;47222:21:640;47279:2;47259:18;;;47252:30;47318:34;47298:18;;;47291:62;-1:-1:-1;;;47369:18:640;;;47362:40;47419:19;;3845:85:228;47038:406:640;3827:223:290;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:290;;48058:2:640;5194:60:290;;;48040:21:640;48097:2;48077:18;;;48070:30;48136:31;48116:18;;;48109:59;48185:18;;5194:60:290;47856:353:640;5194:60:290;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:290;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:290:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:640;-1:-1:-1;;;;;;88:32:640;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;688:258::-;760:1;770:113;784:6;781:1;778:13;770:113;;;860:11;;;854:18;841:11;;;834:39;806:2;799:10;770:113;;;901:6;898:1;895:13;892:48;;;-1:-1:-1;;936:1:640;918:16;;911:27;688:258::o;951:::-;993:3;1031:5;1025:12;1058:6;1053:3;1046:19;1074:63;1130:6;1123:4;1118:3;1114:14;1107:4;1100:5;1096:16;1074:63;:::i;:::-;1191:2;1170:15;-1:-1:-1;;1166:29:640;1157:39;;;;1198:4;1153:50;;951:258;-1:-1:-1;;951:258:640:o;1214:220::-;1363:2;1352:9;1345:21;1326:4;1383:45;1424:2;1413:9;1409:18;1401:6;1383:45;:::i;1439:203::-;-1:-1:-1;;;;;1603:32:640;;;;1585:51;;1573:2;1558:18;;1439:203::o;1647:180::-;1706:6;1759:2;1747:9;1738:7;1734:23;1730:32;1727:52;;;1775:1;1772;1765:12;1727:52;-1:-1:-1;1798:23:640;;1647:180;-1:-1:-1;1647:180:640:o;1832:131::-;-1:-1:-1;;;;;1907:31:640;;1897:42;;1887:70;;1953:1;1950;1943:12;1968:134;2036:20;;2065:31;2036:20;2065:31;:::i;:::-;1968:134;;;:::o;2107:315::-;2175:6;2183;2236:2;2224:9;2215:7;2211:23;2207:32;2204:52;;;2252:1;2249;2242:12;2204:52;2291:9;2278:23;2310:31;2335:5;2310:31;:::i;:::-;2360:5;2412:2;2397:18;;;;2384:32;;-1:-1:-1;;;2107:315:640:o;2427:247::-;2486:6;2539:2;2527:9;2518:7;2514:23;2510:32;2507:52;;;2555:1;2552;2545:12;2507:52;2594:9;2581:23;2613:31;2638:5;2613:31;:::i;2861:163::-;2928:5;2973:3;2964:6;2959:3;2955:16;2951:26;2948:46;;;2990:1;2987;2980:12;3029:854;3168:6;3176;3184;3192;3200;3208;3261:3;3249:9;3240:7;3236:23;3232:33;3229:53;;;3278:1;3275;3268:12;3229:53;3314:9;3301:23;3291:33;;3374:2;3363:9;3359:18;3346:32;3387:31;3412:5;3387:31;:::i;:::-;3437:5;-1:-1:-1;3489:2:640;3474:18;;3461:32;;-1:-1:-1;3545:2:640;3530:18;;3517:32;3558:33;3517:32;3558:33;:::i;:::-;3610:7;-1:-1:-1;3664:3:640;3649:19;;3636:33;;-1:-1:-1;3720:3:640;3705:19;;3692:33;-1:-1:-1;;;;;3737:30:640;;3734:50;;;3780:1;3777;3770:12;3734:50;3803:74;3869:7;3860:6;3849:9;3845:22;3803:74;:::i;:::-;3793:84;;;3029:854;;;;;;;;:::o;3888:456::-;3965:6;3973;3981;4034:2;4022:9;4013:7;4009:23;4005:32;4002:52;;;4050:1;4047;4040:12;4002:52;4089:9;4076:23;4108:31;4133:5;4108:31;:::i;:::-;4158:5;-1:-1:-1;4215:2:640;4200:18;;4187:32;4228:33;4187:32;4228:33;:::i;:::-;3888:456;;4280:7;;-1:-1:-1;;;4334:2:640;4319:18;;;;4306:32;;3888:456::o;4716:248::-;4784:6;4792;4845:2;4833:9;4824:7;4820:23;4816:32;4813:52;;;4861:1;4858;4851:12;4813:52;-1:-1:-1;;4884:23:640;;;4954:2;4939:18;;;4926:32;;-1:-1:-1;4716:248:640:o;4969:274::-;-1:-1:-1;;;;;5161:32:640;;;;5143:51;;5225:2;5210:18;;5203:34;5131:2;5116:18;;4969:274::o;5248:315::-;5316:6;5324;5377:2;5365:9;5356:7;5352:23;5348:32;5345:52;;;5393:1;5390;5383:12;5345:52;5429:9;5416:23;5406:33;;5489:2;5478:9;5474:18;5461:32;5502:31;5527:5;5502:31;:::i;:::-;5552:5;5542:15;;;5248:315;;;;;:::o;5568:118::-;5654:5;5647:13;5640:21;5633:5;5630:32;5620:60;;5676:1;5673;5666:12;5691:241;5747:6;5800:2;5788:9;5779:7;5775:23;5771:32;5768:52;;;5816:1;5813;5806:12;5768:52;5855:9;5842:23;5874:28;5896:5;5874:28;:::i;6227:826::-;6422:2;6411:9;6404:21;6467:6;6461:13;6456:2;6445:9;6441:18;6434:41;6529:2;6521:6;6517:15;6511:22;6506:2;6495:9;6491:18;6484:50;6588:2;6580:6;6576:15;6570:22;6565:2;6554:9;6550:18;6543:50;6648:2;6640:6;6636:15;6630:22;6624:3;6613:9;6609:19;6602:51;6708:3;6700:6;6696:16;6690:23;6684:3;6673:9;6669:19;6662:52;6769:3;6761:6;6757:16;6751:23;6745:3;6734:9;6730:19;6723:52;6858:1;6854;6849:3;6845:11;6841:19;6834:3;6826:6;6822:16;6816:23;6812:49;6806:3;6795:9;6791:19;6784:78;6385:4;6909:3;6901:6;6897:16;6891:23;6933:6;6975:2;6970;6959:9;6955:18;6948:30;;6995:52;7042:3;7031:9;7027:19;7013:12;6995:52;:::i;7058:390::-;7144:8;7154:6;7208:3;7201:4;7193:6;7189:17;7185:27;7175:55;;7226:1;7223;7216:12;7175:55;-1:-1:-1;7249:20:640;;-1:-1:-1;;;;;7281:30:640;;7278:50;;;7324:1;7321;7314:12;7278:50;7361:4;7353:6;7349:17;7337:29;;7421:3;7414:4;7404:6;7401:1;7397:14;7389:6;7385:27;7381:38;7378:47;7375:67;;;7438:1;7435;7428:12;7375:67;7058:390;;;;;:::o;7453:624::-;7580:6;7588;7596;7649:2;7637:9;7628:7;7624:23;7620:32;7617:52;;;7665:1;7662;7655:12;7617:52;7705:9;7692:23;-1:-1:-1;;;;;7730:6:640;7727:30;7724:50;;;7770:1;7767;7760:12;7724:50;7809:93;7894:7;7885:6;7874:9;7870:22;7809:93;:::i;:::-;7921:8;;-1:-1:-1;7783:119:640;-1:-1:-1;;8006:2:640;7991:18;;7978:32;8019:28;7978:32;8019:28;:::i;:::-;8066:5;8056:15;;;7453:624;;;;;:::o;8082:127::-;8143:10;8138:3;8134:20;8131:1;8124:31;8174:4;8171:1;8164:15;8198:4;8195:1;8188:15;8214:275;8285:2;8279:9;8350:2;8331:13;;-1:-1:-1;;8327:27:640;8315:40;;-1:-1:-1;;;;;8370:34:640;;8406:22;;;8367:62;8364:88;;;8432:18;;:::i;:::-;8468:2;8461:22;8214:275;;-1:-1:-1;8214:275:640:o;8494:186::-;8542:4;-1:-1:-1;;;;;8567:6:640;8564:30;8561:56;;;8597:18;;:::i;:::-;-1:-1:-1;8663:2:640;8642:15;-1:-1:-1;;8638:29:640;8669:4;8634:40;;8494:186::o;8685:462::-;8727:5;8780:3;8773:4;8765:6;8761:17;8757:27;8747:55;;8798:1;8795;8788:12;8747:55;8834:6;8821:20;8865:48;8881:31;8909:2;8881:31;:::i;:::-;8865:48;:::i;:::-;8938:2;8929:7;8922:19;8984:3;8977:4;8972:2;8964:6;8960:15;8956:26;8953:35;8950:55;;;9001:1;8998;8991:12;8950:55;9066:2;9059:4;9051:6;9047:17;9040:4;9031:7;9027:18;9014:55;9114:1;9089:16;;;9107:4;9085:27;9078:38;;;;9093:7;8685:462;-1:-1:-1;;;8685:462:640:o;9152:1005::-;9300:6;9308;9316;9324;9332;9340;9393:3;9381:9;9372:7;9368:23;9364:33;9361:53;;;9410:1;9407;9400:12;9361:53;9449:9;9436:23;9468:31;9493:5;9468:31;:::i;:::-;9518:5;-1:-1:-1;9570:2:640;9555:18;;9542:32;;-1:-1:-1;9626:2:640;9611:18;;9598:32;9639:33;9598:32;9639:33;:::i;:::-;9691:7;-1:-1:-1;9745:2:640;9730:18;;9717:32;;-1:-1:-1;9800:3:640;9785:19;;9772:33;-1:-1:-1;;;;;9854:14:640;;;9851:34;;;9881:1;9878;9871:12;9851:34;9904:74;9970:7;9961:6;9950:9;9946:22;9904:74;:::i;:::-;9894:84;;10031:3;10020:9;10016:19;10003:33;9987:49;;10061:2;10051:8;10048:16;10045:36;;;10077:1;10074;10067:12;10045:36;;10100:51;10143:7;10132:8;10121:9;10117:24;10100:51;:::i;10415:321::-;10484:6;10537:2;10525:9;10516:7;10512:23;10508:32;10505:52;;;10553:1;10550;10543:12;10505:52;10593:9;10580:23;-1:-1:-1;;;;;10618:6:640;10615:30;10612:50;;;10658:1;10655;10648:12;10612:50;10681:49;10722:7;10713:6;10702:9;10698:22;10681:49;:::i;10741:383::-;10818:6;10826;10834;10887:2;10875:9;10866:7;10862:23;10858:32;10855:52;;;10903:1;10900;10893:12;10855:52;10939:9;10926:23;10916:33;;10999:2;10988:9;10984:18;10971:32;11012:31;11037:5;11012:31;:::i;11129:347::-;11180:8;11190:6;11244:3;11237:4;11229:6;11225:17;11221:27;11211:55;;11262:1;11259;11252:12;11211:55;-1:-1:-1;11285:20:640;;-1:-1:-1;;;;;11317:30:640;;11314:50;;;11360:1;11357;11350:12;11314:50;11397:4;11389:6;11385:17;11373:29;;11449:3;11442:4;11433:6;11425;11421:19;11417:30;11414:39;11411:59;;;11466:1;11463;11456:12;11481:477;11560:6;11568;11576;11629:2;11617:9;11608:7;11604:23;11600:32;11597:52;;;11645:1;11642;11635:12;11597:52;11681:9;11668:23;11658:33;;11742:2;11731:9;11727:18;11714:32;-1:-1:-1;;;;;11761:6:640;11758:30;11755:50;;;11801:1;11798;11791:12;11755:50;11840:58;11890:7;11881:6;11870:9;11866:22;11840:58;:::i;:::-;11481:477;;11917:8;;-1:-1:-1;11814:84:640;;-1:-1:-1;;;;11481:477:640:o;12375:382::-;12440:6;12448;12501:2;12489:9;12480:7;12476:23;12472:32;12469:52;;;12517:1;12514;12507:12;12469:52;12556:9;12543:23;12575:31;12600:5;12575:31;:::i;:::-;12625:5;-1:-1:-1;12682:2:640;12667:18;;12654:32;12695:30;12654:32;12695:30;:::i;12762:471::-;12859:6;12867;12920:2;12908:9;12899:7;12895:23;12891:32;12888:52;;;12936:1;12933;12926:12;12888:52;12976:9;12963:23;-1:-1:-1;;;;;13001:6:640;12998:30;12995:50;;;13041:1;13038;13031:12;12995:50;13080:93;13165:7;13156:6;13145:9;13141:22;13080:93;:::i;:::-;13192:8;;13054:119;;-1:-1:-1;12762:471:640;-1:-1:-1;;;;12762:471:640:o;13238:801::-;13398:4;13427:2;13467;13456:9;13452:18;13497:2;13486:9;13479:21;13520:6;13555;13549:13;13586:6;13578;13571:22;13624:2;13613:9;13609:18;13602:25;;13686:2;13676:6;13673:1;13669:14;13658:9;13654:30;13650:39;13636:53;;13724:2;13716:6;13712:15;13745:1;13755:255;13769:6;13766:1;13763:13;13755:255;;;13862:2;13858:7;13846:9;13838:6;13834:22;13830:36;13825:3;13818:49;13890:40;13923:6;13914;13908:13;13890:40;:::i;:::-;13880:50;-1:-1:-1;13988:12:640;;;;13953:15;;;;13791:1;13784:9;13755:255;;;-1:-1:-1;14027:6:640;;13238:801;-1:-1:-1;;;;;;;13238:801:640:o;14364:277::-;14444:6;14497:2;14485:9;14476:7;14472:23;14468:32;14465:52;;;14513:1;14510;14503:12;14465:52;14552:9;14539:23;14591:1;14584:5;14581:12;14571:40;;14607:1;14604;14597:12;14646:665;14741:6;14749;14757;14765;14818:3;14806:9;14797:7;14793:23;14789:33;14786:53;;;14835:1;14832;14825:12;14786:53;14874:9;14861:23;14893:31;14918:5;14893:31;:::i;:::-;14943:5;-1:-1:-1;15000:2:640;14985:18;;14972:32;15013:33;14972:32;15013:33;:::i;:::-;15065:7;-1:-1:-1;15119:2:640;15104:18;;15091:32;;-1:-1:-1;15174:2:640;15159:18;;15146:32;-1:-1:-1;;;;;15190:30:640;;15187:50;;;15233:1;15230;15223:12;15187:50;15256:49;15297:7;15288:6;15277:9;15273:22;15256:49;:::i;:::-;15246:59;;;14646:665;;;;;;;:::o;15316:786::-;15416:6;15424;15432;15440;15448;15501:2;15489:9;15480:7;15476:23;15472:32;15469:52;;;15517:1;15514;15507:12;15469:52;15553:9;15540:23;15530:33;;15614:2;15603:9;15599:18;15586:32;-1:-1:-1;;;;;15678:2:640;15670:6;15667:14;15664:34;;;15694:1;15691;15684:12;15664:34;15733:58;15783:7;15774:6;15763:9;15759:22;15733:58;:::i;:::-;15810:8;;-1:-1:-1;15707:84:640;-1:-1:-1;15898:2:640;15883:18;;15870:32;;-1:-1:-1;15914:16:640;;;15911:36;;;15943:1;15940;15933:12;15911:36;;15982:60;16034:7;16023:8;16012:9;16008:24;15982:60;:::i;:::-;15316:786;;;;-1:-1:-1;15316:786:640;;-1:-1:-1;16061:8:640;;15956:86;15316:786;-1:-1:-1;;;15316:786:640:o;16360:787::-;16414:5;16467:3;16460:4;16452:6;16448:17;16444:27;16434:55;;16485:1;16482;16475:12;16434:55;16521:6;16508:20;16547:4;-1:-1:-1;;;;;16566:2:640;16563:26;16560:52;;;16592:18;;:::i;:::-;16638:2;16635:1;16631:10;16661:28;16685:2;16681;16677:11;16661:28;:::i;:::-;16723:15;;;16793;;;16789:24;;;16754:12;;;;16825:15;;;16822:35;;;16853:1;16850;16843:12;16822:35;16889:2;16881:6;16877:15;16866:26;;16901:217;16917:6;16912:3;16909:15;16901:217;;;16997:3;16984:17;17014:31;17039:5;17014:31;:::i;:::-;17058:18;;16934:12;;;;17096;;;;16901:217;;17152:173;17220:20;;-1:-1:-1;;;;;17269:31:640;;17259:42;;17249:70;;17315:1;17312;17305:12;17330:1417;17525:6;17533;17541;17549;17557;17565;17573;17581;17589;17597;17650:3;17638:9;17629:7;17625:23;17621:33;17618:53;;;17667:1;17664;17657:12;17618:53;17690:29;17709:9;17690:29;:::i;:::-;17680:39;;17770:2;17759:9;17755:18;17742:32;-1:-1:-1;;;;;17834:2:640;17826:6;17823:14;17820:34;;;17850:1;17847;17840:12;17820:34;17873:49;17914:7;17905:6;17894:9;17890:22;17873:49;:::i;:::-;17863:59;;17975:2;17964:9;17960:18;17947:32;17931:48;;18004:2;17994:8;17991:16;17988:36;;;18020:1;18017;18010:12;17988:36;18043:51;18086:7;18075:8;18064:9;18060:24;18043:51;:::i;:::-;18033:61;;18147:2;18136:9;18132:18;18119:32;18103:48;;18176:2;18166:8;18163:16;18160:36;;;18192:1;18189;18182:12;18160:36;18215:51;18258:7;18247:8;18236:9;18232:24;18215:51;:::i;:::-;18205:61;;18319:3;18308:9;18304:19;18291:33;18275:49;;18349:2;18339:8;18336:16;18333:36;;;18365:1;18362;18355:12;18333:36;;18388:63;18443:7;18432:8;18421:9;18417:24;18388:63;:::i;:::-;18378:73;;;18470:39;18504:3;18493:9;18489:19;18470:39;:::i;:::-;18460:49;;18528:39;18562:3;18551:9;18547:19;18528:39;:::i;:::-;18518:49;;18586:39;18620:3;18609:9;18605:19;18586:39;:::i;:::-;18576:49;;18644:39;18678:3;18667:9;18663:19;18644:39;:::i;:::-;18634:49;;18702:39;18736:3;18725:9;18721:19;18702:39;:::i;:::-;18692:49;;17330:1417;;;;;;;;;;;;;:::o;18752:628::-;18840:6;18848;18856;18909:2;18897:9;18888:7;18884:23;18880:32;18877:52;;;18925:1;18922;18915:12;18877:52;18965:9;18952:23;-1:-1:-1;;;;;19035:2:640;19027:6;19024:14;19021:34;;;19051:1;19048;19041:12;19021:34;19074:49;19115:7;19106:6;19095:9;19091:22;19074:49;:::i;:::-;19064:59;;19176:2;19165:9;19161:18;19148:32;19132:48;;19205:2;19195:8;19192:16;19189:36;;;19221:1;19218;19211:12;19189:36;;19260:60;19312:7;19301:8;19290:9;19286:24;19260:60;:::i;19385:388::-;19453:6;19461;19514:2;19502:9;19493:7;19489:23;19485:32;19482:52;;;19530:1;19527;19520:12;19482:52;19569:9;19556:23;19588:31;19613:5;19588:31;:::i;:::-;19638:5;-1:-1:-1;19695:2:640;19680:18;;19667:32;19708:33;19667:32;19708:33;:::i;19778:127::-;19839:10;19834:3;19830:20;19827:1;19820:31;19870:4;19867:1;19860:15;19894:4;19891:1;19884:15;19910:349;20063:2;20048:18;;20096:1;20085:13;;20075:144;;20141:10;20136:3;20132:20;20129:1;20122:31;20176:4;20173:1;20166:15;20204:4;20201:1;20194:15;20075:144;20228:25;;;19910:349;:::o;20264:380::-;20343:1;20339:12;;;;20386;;;20407:61;;20461:4;20453:6;20449:17;20439:27;;20407:61;20514:2;20506:6;20503:14;20483:18;20480:38;20477:161;;;20560:10;20555:3;20551:20;20548:1;20541:31;20595:4;20592:1;20585:15;20623:4;20620:1;20613:15;20649:304;-1:-1:-1;;;;;20879:15:640;;;20861:34;;20931:15;;20926:2;20911:18;;20904:43;20811:2;20796:18;;20649:304::o;20958:245::-;21025:6;21078:2;21066:9;21057:7;21053:23;21049:32;21046:52;;;21094:1;21091;21084:12;21046:52;21126:9;21120:16;21145:28;21167:5;21145:28;:::i;21208:338::-;21410:2;21392:21;;;21449:2;21429:18;;;21422:30;-1:-1:-1;;;21483:2:640;21468:18;;21461:44;21537:2;21522:18;;21208:338::o;21551:545::-;21644:4;21650:6;21710:11;21697:25;21804:2;21800:7;21789:8;21773:14;21769:29;21765:43;21745:18;21741:68;21731:96;;21823:1;21820;21813:12;21731:96;21850:33;;21902:20;;;-1:-1:-1;;;;;;21934:30:640;;21931:50;;;21977:1;21974;21967:12;21931:50;22010:4;21998:17;;-1:-1:-1;22061:1:640;22057:14;;;22041;22037:35;22027:46;;22024:66;;;22086:1;22083;22076:12;22907:127;22968:10;22963:3;22959:20;22956:1;22949:31;22999:4;22996:1;22989:15;23023:4;23020:1;23013:15;23039:128;23079:3;23110:1;23106:6;23103:1;23100:13;23097:39;;;23116:18;;:::i;:::-;-1:-1:-1;23152:9:640;;23039:128::o;24528:127::-;24589:10;24584:3;24580:20;24577:1;24570:31;24620:4;24617:1;24610:15;24644:4;24641:1;24634:15;24660:168;24700:7;24766:1;24762;24758:6;24754:14;24751:1;24748:21;24743:1;24736:9;24729:17;24725:45;24722:71;;;24773:18;;:::i;:::-;-1:-1:-1;24813:9:640;;24660:168::o;24833:127::-;24894:10;24889:3;24885:20;24882:1;24875:31;24925:4;24922:1;24915:15;24949:4;24946:1;24939:15;24965:120;25005:1;25031;25021:35;;25036:18;;:::i;:::-;-1:-1:-1;25070:9:640;;24965:120::o;26624:333::-;26725:4;26783:11;26770:25;26877:3;26873:8;26862;26846:14;26842:29;26838:44;26818:18;26814:69;26804:97;;26897:1;26894;26887:12;26804:97;26918:33;;;;;26624:333;-1:-1:-1;;26624:333:640:o;27639:516::-;27711:4;27717:6;27777:11;27764:25;27871:2;27867:7;27856:8;27840:14;27836:29;27832:43;27812:18;27808:68;27798:96;;27890:1;27887;27880:12;27798:96;27917:33;;27969:20;;;-1:-1:-1;;;;;;28001:30:640;;27998:50;;;28044:1;28041;28034:12;27998:50;28077:4;28065:17;;-1:-1:-1;28108:14:640;28104:27;;;28094:38;;28091:58;;;28145:1;28142;28135:12;28286:545;28388:2;28383:3;28380:11;28377:448;;;28424:1;28449:5;28445:2;28438:17;28494:4;28490:2;28480:19;28564:2;28552:10;28548:19;28545:1;28541:27;28535:4;28531:38;28600:4;28588:10;28585:20;28582:47;;;-1:-1:-1;28623:4:640;28582:47;28678:2;28673:3;28669:12;28666:1;28662:20;28656:4;28652:31;28642:41;;28733:82;28751:2;28744:5;28741:13;28733:82;;;28796:17;;;28777:1;28766:13;28733:82;;29007:1190;-1:-1:-1;;;;;29110:3:640;29107:27;29104:53;;;29137:18;;:::i;:::-;29166:94;29256:3;29216:38;29248:4;29242:11;29216:38;:::i;:::-;29210:4;29166:94;:::i;:::-;29286:1;29311:2;29306:3;29303:11;29328:1;29323:616;;;;29983:1;30000:3;29997:93;;;-1:-1:-1;30056:19:640;;;30043:33;29997:93;-1:-1:-1;;28964:1:640;28960:11;;;28956:24;28952:29;28942:40;28988:1;28984:11;;;28939:57;30103:78;;29296:895;;29323:616;28233:1;28226:14;;;28270:4;28257:18;;-1:-1:-1;;29359:17:640;;;29460:9;29482:229;29496:7;29493:1;29490:14;29482:229;;;29585:19;;;29572:33;29557:49;;29692:4;29677:20;;;;29645:1;29633:14;;;;29512:12;29482:229;;;29486:3;29739;29730:7;29727:16;29724:159;;;29863:1;29859:6;29853:3;29847;29844:1;29840:11;29836:21;29832:34;29828:39;29815:9;29810:3;29806:19;29793:33;29789:79;29781:6;29774:95;29724:159;;;29926:1;29920:3;29917:1;29913:11;29909:19;29903:4;29896:33;29296:895;;29007:1190;;;:::o;30202:950::-;30381:5;30368:19;30362:4;30355:33;30442:2;30435:5;30431:14;30418:28;30414:1;30408:4;30404:12;30397:50;30501:2;30494:5;30490:14;30477:28;30473:1;30467:4;30463:12;30456:50;30560:2;30553:5;30549:14;30536:28;30532:1;30526:4;30522:12;30515:50;30619:3;30612:5;30608:15;30595:29;30591:1;30585:4;30581:12;30574:51;30679:3;30672:5;30668:15;30655:29;30651:1;30645:4;30641:12;30634:51;30722:1;30716:4;30712:12;30772:3;30765:5;30761:15;30748:29;30786:33;30811:7;30786:33;:::i;:::-;30854:17;;-1:-1:-1;;;;;;30850:48:640;-1:-1:-1;;;;;30900:33:640;;;;30847:87;30828:107;;30978:60;31033:3;31022:15;;31026:5;30978:60;:::i;:::-;31047:99;31132:13;31119:11;31115:1;31109:4;31105:12;31047:99;:::i;31157:135::-;31196:3;-1:-1:-1;;31217:17:640;;31214:43;;;31237:18;;:::i;:::-;-1:-1:-1;31284:1:640;31273:13;;31157:135::o;31297:504::-;31356:5;31363:6;31423:3;31410:17;31509:2;31505:7;31494:8;31478:14;31474:29;31470:43;31450:18;31446:68;31436:96;;31528:1;31525;31518:12;31436:96;31556:33;;31660:4;31647:18;;;-1:-1:-1;31608:21:640;;-1:-1:-1;;;;;;31677:30:640;;31674:50;;;31720:1;31717;31710:12;31674:50;31770:6;31754:14;31750:27;31740:8;31736:42;31733:62;;;31791:1;31788;31781:12;31806:267;31895:6;31890:3;31883:19;31947:6;31940:5;31933:4;31928:3;31924:14;31911:43;-1:-1:-1;31999:1:640;31974:16;;;31992:4;31970:27;;;31963:38;;;;32055:2;32034:15;;;-1:-1:-1;;32030:29:640;32021:39;;;32017:50;;31806:267::o;32078:2051::-;32349:2;32401:21;;;32374:18;;;32457:22;;;32320:4;;32498:2;32516:18;;;32580:1;32576:14;;;32561:30;;32557:39;;32619:6;32320:4;;32674:1372;32690:6;32685:3;32682:15;32674:1372;;;32759:22;;;-1:-1:-1;;32755:36:640;32743:49;;32831:20;;32906:14;32902:27;;;-1:-1:-1;;32898:42:640;32874:67;;32864:95;;32955:1;32952;32945:12;32864:95;32985:31;;33073:19;;33058:35;;33116:4;33170:14;;;33157:28;33140:15;;;33133:53;33236:14;;;33223:28;33206:15;;;33199:53;33302:14;;;33289:28;33272:15;;;33265:53;33341:4;33395:14;;;33382:28;33365:15;;;33358:53;33434:4;33488:14;;;33475:28;33458:15;;;33451:53;33039:6;;33527:4;33572:14;;;33559:28;33600:33;33559:28;33600:33;:::i;:::-;-1:-1:-1;;;;;33670:33:640;33653:15;;;33646:58;33727:4;33778:54;33817:14;;;33821:5;33778:54;:::i;:::-;33744:88;;33869:2;33864;33856:6;33852:15;33845:27;33895:71;33962:2;33954:6;33950:15;33936:12;33922;33895:71;:::i;:::-;34024:12;;;;33885:81;-1:-1:-1;;;33989:15:640;;;;;-1:-1:-1;;32716:1:640;32707:11;32674:1372;;;-1:-1:-1;;;470:13:640;;463:21;34117:4;34102:20;;451:34;34063:6;-1:-1:-1;34078:45:640;;-1:-1:-1;;;400:91:640;34480:703;34568:6;34576;34629:2;34617:9;34608:7;34604:23;34600:32;34597:52;;;34645:1;34642;34635:12;34597:52;34678:9;34672:16;-1:-1:-1;;;;;34703:6:640;34700:30;34697:50;;;34743:1;34740;34733:12;34697:50;34766:22;;34819:4;34811:13;;34807:27;-1:-1:-1;34797:55:640;;34848:1;34845;34838:12;34797:55;34877:2;34871:9;34902:48;34918:31;34946:2;34918:31;:::i;34902:48::-;34973:2;34966:5;34959:17;35015:7;35008:4;35003:2;34999;34995:11;34991:22;34988:35;34985:55;;;35036:1;35033;35026:12;34985:55;35049:58;35104:2;35097:4;35090:5;35086:16;35079:4;35075:2;35071:13;35049:58;:::i;:::-;35171:4;35156:20;;;;35150:27;35126:5;;35150:27;;-1:-1:-1;;;;;34480:703:640:o;35188:525::-;35403:3;35441:6;35435:13;35457:53;35503:6;35498:3;35491:4;35483:6;35479:17;35457:53;:::i;:::-;35532:16;;35585:6;35577;35532:16;35557:35;35611:18;;;35660;;;-1:-1:-1;35702:4:640;35694:13;;35188:525;-1:-1:-1;;;35188:525:640:o;36586:125::-;36626:4;36654:1;36651;36648:8;36645:34;;;36659:18;;:::i;:::-;-1:-1:-1;36696:9:640;;36586:125::o;36716:136::-;36755:3;36783:5;36773:39;;36792:18;;:::i;:::-;-1:-1:-1;;;36828:18:640;;36716:136::o;37197:439::-;37429:3;37467:6;37461:13;37483:53;37529:6;37524:3;37517:4;37509:6;37505:17;37483:53;:::i;:::-;-1:-1:-1;;;37558:16:640;;37583:18;;;-1:-1:-1;37628:1:640;37617:13;;37197:439;-1:-1:-1;37197:439:640:o;37641:470::-;37820:3;37858:6;37852:13;37874:53;37920:6;37915:3;37908:4;37900:6;37896:17;37874:53;:::i;:::-;37990:13;;37949:16;;;;38012:57;37990:13;37949:16;38046:4;38034:17;;38012:57;:::i;:::-;38085:20;;37641:470;-1:-1:-1;;;;37641:470:640:o;38116:388::-;38193:6;38201;38254:2;38242:9;38233:7;38229:23;38225:32;38222:52;;;38270:1;38267;38260:12;38222:52;38310:9;38297:23;-1:-1:-1;;;;;38335:6:640;38332:30;38329:50;;;38375:1;38372;38365:12;38329:50;38398:49;38439:7;38430:6;38419:9;38415:22;38398:49;:::i;:::-;38388:59;38494:2;38479:18;;;;38466:32;;-1:-1:-1;;;;38116:388:640:o;39123:335::-;39334:6;39326;39321:3;39308:33;39360:16;;;39407:18;;;39449:2;39441:11;;39123:335;-1:-1:-1;39123:335:640:o;39463:339::-;39665:2;39647:21;;;39704:2;39684:18;;;39677:30;-1:-1:-1;;;39738:2:640;39723:18;;39716:45;39793:2;39778:18;;39463:339::o;40059:784::-;-1:-1:-1;;;40465:3:640;40458:36;40440:3;40523:6;40517:13;40539:62;40594:6;40589:2;40584:3;40580:12;40573:4;40565:6;40561:17;40539:62;:::i;:::-;-1:-1:-1;;;40660:2:640;40620:16;;;40652:11;;;40645:40;40710:13;;40732:63;40710:13;40781:2;40773:11;;40766:4;40754:17;;40732:63;:::i;:::-;40815:17;40834:2;40811:26;;40059:784;-1:-1:-1;;;;40059:784:640:o;41518:325::-;41720:2;41702:21;;;41759:1;41739:18;;;41732:29;-1:-1:-1;;;41792:2:640;41777:18;;41770:32;41834:2;41819:18;;41518:325::o;41848:383::-;42045:2;42034:9;42027:21;42008:4;42071:45;42112:2;42101:9;42097:18;42089:6;42071:45;:::i;:::-;42164:9;42156:6;42152:22;42147:2;42136:9;42132:18;42125:50;42192:33;42218:6;42210;42192:33;:::i;42643:274::-;42772:3;42810:6;42804:13;42826:53;42872:6;42867:3;42860:4;42852:6;42848:17;42826:53;:::i;43266:112::-;43298:1;43324;43314:35;;43329:18;;:::i;:::-;-1:-1:-1;43363:9:640;;43266:112::o;43716:506::-;43959:6;43948:9;43941:25;44002:2;43997;43986:9;43982:18;43975:30;43922:4;44028:62;44086:2;44075:9;44071:18;44063:6;44055;44028:62;:::i;:::-;44138:9;44130:6;44126:22;44121:2;44110:9;44106:18;44099:50;44166;44209:6;44201;44193;44166:50;:::i;:::-;44158:58;43716:506;-1:-1:-1;;;;;;;;43716:506:640:o;44227:407::-;44429:2;44411:21;;;44468:2;44448:18;;;44441:30;44507:34;44502:2;44487:18;;44480:62;-1:-1:-1;;;44573:2:640;44558:18;;44551:41;44624:3;44609:19;;44227:407::o;45343:489::-;-1:-1:-1;;;;;45612:15:640;;;45594:34;;45664:15;;45659:2;45644:18;;45637:43;45711:2;45696:18;;45689:34;;;45759:3;45754:2;45739:18;;45732:31;;;45537:4;;45780:46;;45806:19;;45798:6;45780:46;:::i;45837:249::-;45906:6;45959:2;45947:9;45938:7;45934:23;45930:32;45927:52;;;45975:1;45972;45965:12;45927:52;46007:9;46001:16;46026:30;46050:5;46026:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
    "claimCondition()": "d637ed59",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "encryptDecrypt(bytes,bytes)": "e7150322",
    "encryptedData(uint256)": "a05112fc",
    "getActiveClaimConditionId()": "c68907de",
    "getApproved(uint256)": "081812fc",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getClaimConditionById(uint256)": "6f8934f4",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getFlatPlatformFeeInfo()": "e57553da",
    "getPlatformFeeInfo()": "d45573f6",
    "getPlatformFeeType()": "f28083c3",
    "getRevealURI(uint256,bytes)": "9fc4d68f",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getSupplyClaimedByWallet(uint256,address)": "ad1eefc5",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": "e1591634",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isEncryptedBatch(uint256)": "492e224b",
    "isTrustedForwarder(address)": "572b6c05",
    "lazyMint(uint256,string,bytes)": "d37c353b",
    "maxTotalSupply()": "2ab4d052",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToClaim()": "acd083f8",
    "nextTokenIdToMint()": "3b1475a7",
    "operatorRestriction()": "504c6e01",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "renounceRole(bytes32,address)": "36568abe",
    "reveal(uint256,bytes)": "ce805642",
    "revokeRole(bytes32,address)": "d547741f",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "74bc7db7",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setFlatPlatformFeeInfo(address,uint256)": "7e54523c",
    "setMaxTotalSupply(uint256)": "3f3e4c11",
    "setOperatorRestriction(bool)": "32f0cd64",
    "setOwner(address)": "13af4035",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPlatformFeeType(uint8)": "b6f10c79",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "subscribeToRegistry(address)": "57fd8455",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalMinted()": "a2309ff8",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "23a2902b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"MaxTotalSupplyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restriction\",\"type\":\"bool\"}],\"name\":\"OperatorRestriction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"name\":\"TokenURIRevealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedBaseURI\",\"type\":\"bytes\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentStartId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"encryptDecrypt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"encryptedData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlatPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeType\",\"outputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_key\",\"type\":\"bytes\"}],\"name\":\"getRevealURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyClaimedByWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_platformFeeBps\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"}],\"name\":\"isEncryptedBatch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURIForTokens\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"lazyMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorRestriction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_key\",\"type\":\"bytes\"}],\"name\":\"reveal\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"_conditions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_flatFee\",\"type\":\"uint256\"}],\"name\":\"setFlatPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"setMaxTotalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_restriction\",\"type\":\"bool\"}],\"name\":\"setOperatorRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"_feeType\",\"type\":\"uint8\"}],\"name\":\"setPlatformFeeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_subscription\",\"type\":\"address\"}],\"name\":\"subscribeToRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"MaxTotalSupplyUpdated(uint256)\":{\"details\":\"Emitted when the global max supply of tokens is updated.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {ERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"encryptDecrypt(bytes,bytes)\":{\"details\":\"Encrypt/decrypt given `data` with `key`. Uses inline assembly.                  See: https://ethereum.stackexchange.com/questions/69825/decrypt-message-on-chain\",\"params\":{\"data\":\"Bytes of data to encrypt/decrypt.\",\"key\":\"Secure key used by caller for encryption/decryption.\"},\"returns\":{\"result\":\" Output after encryption/decryption of given data.\"}},\"getActiveClaimConditionId()\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"ID of a token.\"}},\"getClaimConditionById(uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getFlatPlatformFeeInfo()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getPlatformFeeType()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getRevealURI(uint256,bytes)\":{\"details\":\"Reveal encrypted base URI for `_batchId` with caller/admin's `_key` used for encryption.                      Reverts if there's no encrypted URI for `_batchId`.                      See {encryptDecrypt}.\",\"params\":{\"_batchId\":\"ID of the batch for which URI is being revealed.\",\"_key\":\"Secure key used by caller/admin for encryption of baseURI.\"},\"returns\":{\"revealedURI\":\"Decrypted base URI.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getSupplyClaimedByWallet(uint256,address)\":{\"details\":\"Returns the supply claimed by claimer for a given conditionId.\"},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,string,string,address[],address,address,uint128,uint128,address)\":{\"details\":\"Initiliazes the contract, like a constructor.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isEncryptedBatch(uint256)\":{\"details\":\"Returns `true` if `_batchId`'s base URI is encrypted.\",\"params\":{\"_batchId\":\"ID of a batch of NFTs.\"}},\"lazyMint(uint256,string,bytes)\":{\"details\":\"Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"nextTokenIdToClaim()\":{\"details\":\"The next token ID of the NFT that can be claimed.\"},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"reveal(uint256,bytes)\":{\"details\":\"Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {ERC721-setApprovalForAll}.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setMaxTotalSupply(uint256)\":{\"details\":\"Lets a contract admin set the global maximum supply for collection's NFTs.\"},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_transferFrom}.\"},\"verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"maxTotalSupply\":{\"details\":\"Global max total supply of NFTs.\"},\"minterRole\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens.\"},\"transferRole\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"events\":{\"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"encryptDecrypt(bytes,bytes)\":{\"notice\":\"Encrypt/decrypt data on chain.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens the given tokenId belongs to.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRevealURI(uint256,bytes)\":{\"notice\":\"Returns revealed URI for a batch of NFTs.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"isEncryptedBatch(uint256)\":{\"notice\":\"Returns whether the relvant batch of NFTs is subject to a delayed reveal.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setFlatPlatformFeeInfo(address,uint256)\":{\"notice\":\"Lets a module admin set a flat fee on primary sales.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"},\"setPlatformFeeType(uint8)\":{\"notice\":\"Lets a module admin set platform fee type.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"totalMinted()\":{\"notice\":\"Returns the total amount of tokens minted in the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/drop/DropERC721.sol\":\"DropERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/eip/ERC721AVirtualApproveUpgradeable.sol\":{\"keccak256\":\"0xf644dda26330df06c005afaa856130ca1717813da3801c295a8684d1d185dfbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c3c26d8e93ae85fe8c955cab7b6eb4ab8e624fe3ace08e497cd8d077c0b53eb\",\"dweb:/ipfs/QmPrwqtYsrvW35ZWhWFhzBWQD24EUGoRdd6cGhgTPE7Fag\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7\",\"dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/DefaultOperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0xbc4433257d90e055dbc4ae1d1e7c08e9ffd37a8ef45a5b9b81b22ae8ca603f29\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://791826c7fcdeccbdfcf5812363d2e239c116bc2f3eaf710820d36f76fb847e49\",\"dweb:/ipfs/QmeSyE4Z5ZAyo9t92YWd69pmAp1riyA35JDY4SmNuLVX9U\"]},\"contracts/extension/DelayedReveal.sol\":{\"keccak256\":\"0x2a860e4b857617a1c87c5fb79df2dd4a70e0e63ec6796f58ce9d0b3b93f1e242\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc4039ae41d23b921c13b500018e333d63dd9b3be65e700e0d05465d3ac680a3\",\"dweb:/ipfs/QmSLCVWqjVzDt9ygXmBffERFCYCo7RiGry2BhQjXcnZjQ6\"]},\"contracts/extension/Drop.sol\":{\"keccak256\":\"0x11e1f936e81e51b69d5130acc57a1b95c6428f55265492a7f8bbc1e76a7f9acc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9d1ac7b9be364630343fc9d0509c67e8ba9de07a28a9520461a4c81fe122701c\",\"dweb:/ipfs/Qme1eucpamqAkL2xFfcYHWPmo4aNk8SNuWSfk2R2uW7pYZ\"]},\"contracts/extension/LazyMint.sol\":{\"keccak256\":\"0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827\",\"dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9\"]},\"contracts/extension/OperatorFilterToggle.sol\":{\"keccak256\":\"0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac\",\"dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA\"]},\"contracts/extension/OperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0xfad890de90b24aeba9ae86cf09ff09b08a6517bdc290b46703bd05b7298ec638\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://9261a7c5d33b1b97a4a470f8d3df7033c2da163e9a5c990746c52ea3af6b763b\",\"dweb:/ipfs/QmXuHJSNnmidTy4HfdK3SeiHni2xLVe8KaR5CdtuhHXDub\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PlatformFee.sol\":{\"keccak256\":\"0x1549722107cf053d4a7fa35f6738b3cff237712a378c7341268512104dea9341\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6da70c4ae6b60e151a5cb20c7c29a464c9a47cb61a228d5b0c8e84c5eac78c80\",\"dweb:/ipfs/QmfHrcdPGkkE9yvYqvm4sHqiKaR1FwXwWCyYM5m9Mqu3zq\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7\",\"dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDelayedReveal.sol\":{\"keccak256\":\"0xbbe98263ebce49f81cb42f8bf1e7e631afd81cda73be79b907e81a2f54fd2123\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://76913c2086e309c97ac0d5be72bbe23e66fe35e231c75318993c14e6aa4c0138\",\"dweb:/ipfs/QmXwr49U275Cam8x9mYcNdcCmZHUYuBge3CtFPkBkEMzL4\"]},\"contracts/extension/interface/IDrop.sol\":{\"keccak256\":\"0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093\",\"dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo\"]},\"contracts/extension/interface/ILazyMint.sol\":{\"keccak256\":\"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3\",\"dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA\"]},\"contracts/extension/interface/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34\",\"dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg\"]},\"contracts/extension/interface/IOperatorFilterToggle.sol\":{\"keccak256\":\"0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674\",\"dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf\",\"dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/prebuilts/drop/DropERC721.sol\":{\"keccak256\":\"0x58edf63d3b2f62828959bd01a088ac6253244eb98bf01133dff590c1da2ac0f5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://76ecad88701e24bb8833718feb2de31f15b6f3163b13586e28dfe4865a32889e\",\"dweb:/ipfs/Qme1UiGjyJ8Mey14rn8fD5rDE5UvV7PQuu15aen5GLEPhv\"]},\"lib/ERC721A-Upgradeable/contracts/IERC721AUpgradeable.sol\":{\"keccak256\":\"0x89447bfc4f1417953e3664234d896b42ebc7d68b3cc27f86f7cdd7addfdd5c1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3916917efc838814adb1e459c968d442d26e304f28af181ff35cffb5ca3ec0be\",\"dweb:/ipfs/QmcVwcrhenj31MCbDn6yvaYsFNkyJmA3isWaJiGhgQeEmQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol\":{\"keccak256\":\"0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c\",\"dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x016298e66a5810253c6c905e61966bb31c8775c3f3517bf946ff56ee31d6c005\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1723de5ae414f210db039b19e6487c19c2d643483c9be7c445cf481a80c199d2\",\"dweb:/ipfs/QmcBLbmPdZsNngYhA1KDadNUqQZoGACytFWuUH74RC4AXC\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol\":{\"keccak256\":\"0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d\",\"dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OperatorNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "claimConditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxTotalSupply",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxTotalSupplyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "restriction",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRestriction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenURIRevealed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimConditionIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "endTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "encryptedBaseURI",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensLazyMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "currentStartId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "key",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "encryptDecrypt",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "encryptedData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveClaimConditionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimConditionById",
          "outputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlatPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeType",
          "outputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_batchId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_key",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRevealURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "supplyClaimedByWallet",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "_platformFeeBps",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_batchId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isEncryptedBatch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURIForTokens",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lazyMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "batchId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorRestriction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_key",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reveal",
          "outputs": [
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "_conditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_flatFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlatPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_maxTotalSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxTotalSupply"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_restriction",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorRestriction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "_feeType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeType"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_subscription",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "subscribeToRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalMinted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {ERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "encryptDecrypt(bytes,bytes)": {
            "details": "Encrypt/decrypt given `data` with `key`. Uses inline assembly.                  See: https://ethereum.stackexchange.com/questions/69825/decrypt-message-on-chain",
            "params": {
              "data": "Bytes of data to encrypt/decrypt.",
              "key": "Secure key used by caller for encryption/decryption."
            },
            "returns": {
              "result": " Output after encryption/decryption of given data."
            }
          },
          "getActiveClaimConditionId()": {
            "details": "At any given moment, returns the uid for the active claim condition."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "ID of a token."
            }
          },
          "getClaimConditionById(uint256)": {
            "details": "Returns the claim condition at the given uid."
          },
          "getFlatPlatformFeeInfo()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getPlatformFeeType()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getRevealURI(uint256,bytes)": {
            "details": "Reveal encrypted base URI for `_batchId` with caller/admin's `_key` used for encryption.                      Reverts if there's no encrypted URI for `_batchId`.                      See {encryptDecrypt}.",
            "params": {
              "_batchId": "ID of the batch for which URI is being revealed.",
              "_key": "Secure key used by caller/admin for encryption of baseURI."
            },
            "returns": {
              "revealedURI": "Decrypted base URI."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getSupplyClaimedByWallet(uint256,address)": {
            "details": "Returns the supply claimed by claimer for a given conditionId."
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": {
            "details": "Initiliazes the contract, like a constructor."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isEncryptedBatch(uint256)": {
            "details": "Returns `true` if `_batchId`'s base URI is encrypted.",
            "params": {
              "_batchId": "ID of a batch of NFTs."
            }
          },
          "lazyMint(uint256,string,bytes)": {
            "details": "Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "nextTokenIdToClaim()": {
            "details": "The next token ID of the NFT that can be claimed."
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "reveal(uint256,bytes)": {
            "details": "Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs."
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {ERC721-setApprovalForAll}."
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setMaxTotalSupply(uint256)": {
            "details": "Lets a contract admin set the global maximum supply for collection's NFTs."
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.",
            "params": {
              "_platformFeeBps": "Updated platformFeeBps.",
              "_platformFeeRecipient": "Address to be set as new platformFeeRecipient."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "totalSupply()": {
            "details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {ERC721-_transferFrom}."
          },
          "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "encryptDecrypt(bytes,bytes)": {
            "notice": "Encrypt/decrypt data on chain."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens the given tokenId belongs to."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRevealURI(uint256,bytes)": {
            "notice": "Returns revealed URI for a batch of NFTs."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "isEncryptedBatch(uint256)": {
            "notice": "Returns whether the relvant batch of NFTs is subject to a delayed reveal."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setFlatPlatformFeeInfo(address,uint256)": {
            "notice": "Lets a module admin set a flat fee on primary sales."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "notice": "Updates the platform fee recipient and bps."
          },
          "setPlatformFeeType(uint8)": {
            "notice": "Lets a module admin set platform fee type."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "totalMinted()": {
            "notice": "Returns the total amount of tokens minted in the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/drop/DropERC721.sol": "DropERC721"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/ERC721AVirtualApproveUpgradeable.sol": {
        "keccak256": "0xf644dda26330df06c005afaa856130ca1717813da3801c295a8684d1d185dfbf",
        "urls": [
          "bzz-raw://9c3c26d8e93ae85fe8c955cab7b6eb4ab8e624fe3ace08e497cd8d077c0b53eb",
          "dweb:/ipfs/QmPrwqtYsrvW35ZWhWFhzBWQD24EUGoRdd6cGhgTPE7Fag"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/BatchMintMetadata.sol": {
        "keccak256": "0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67",
        "urls": [
          "bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7",
          "dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/DefaultOperatorFiltererUpgradeable.sol": {
        "keccak256": "0xbc4433257d90e055dbc4ae1d1e7c08e9ffd37a8ef45a5b9b81b22ae8ca603f29",
        "urls": [
          "bzz-raw://791826c7fcdeccbdfcf5812363d2e239c116bc2f3eaf710820d36f76fb847e49",
          "dweb:/ipfs/QmeSyE4Z5ZAyo9t92YWd69pmAp1riyA35JDY4SmNuLVX9U"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/DelayedReveal.sol": {
        "keccak256": "0x2a860e4b857617a1c87c5fb79df2dd4a70e0e63ec6796f58ce9d0b3b93f1e242",
        "urls": [
          "bzz-raw://cc4039ae41d23b921c13b500018e333d63dd9b3be65e700e0d05465d3ac680a3",
          "dweb:/ipfs/QmSLCVWqjVzDt9ygXmBffERFCYCo7RiGry2BhQjXcnZjQ6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Drop.sol": {
        "keccak256": "0x11e1f936e81e51b69d5130acc57a1b95c6428f55265492a7f8bbc1e76a7f9acc",
        "urls": [
          "bzz-raw://9d1ac7b9be364630343fc9d0509c67e8ba9de07a28a9520461a4c81fe122701c",
          "dweb:/ipfs/Qme1eucpamqAkL2xFfcYHWPmo4aNk8SNuWSfk2R2uW7pYZ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/LazyMint.sol": {
        "keccak256": "0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170",
        "urls": [
          "bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827",
          "dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/OperatorFilterToggle.sol": {
        "keccak256": "0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329",
        "urls": [
          "bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac",
          "dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFiltererUpgradeable.sol": {
        "keccak256": "0xfad890de90b24aeba9ae86cf09ff09b08a6517bdc290b46703bd05b7298ec638",
        "urls": [
          "bzz-raw://9261a7c5d33b1b97a4a470f8d3df7033c2da163e9a5c990746c52ea3af6b763b",
          "dweb:/ipfs/QmXuHJSNnmidTy4HfdK3SeiHni2xLVe8KaR5CdtuhHXDub"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PlatformFee.sol": {
        "keccak256": "0x1549722107cf053d4a7fa35f6738b3cff237712a378c7341268512104dea9341",
        "urls": [
          "bzz-raw://6da70c4ae6b60e151a5cb20c7c29a464c9a47cb61a228d5b0c8e84c5eac78c80",
          "dweb:/ipfs/QmfHrcdPGkkE9yvYqvm4sHqiKaR1FwXwWCyYM5m9Mqu3zq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42",
        "urls": [
          "bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7",
          "dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350",
        "urls": [
          "bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485",
          "dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimConditionMultiPhase.sol": {
        "keccak256": "0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa",
        "urls": [
          "bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125",
          "dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDelayedReveal.sol": {
        "keccak256": "0xbbe98263ebce49f81cb42f8bf1e7e631afd81cda73be79b907e81a2f54fd2123",
        "urls": [
          "bzz-raw://76913c2086e309c97ac0d5be72bbe23e66fe35e231c75318993c14e6aa4c0138",
          "dweb:/ipfs/QmXwr49U275Cam8x9mYcNdcCmZHUYuBge3CtFPkBkEMzL4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDrop.sol": {
        "keccak256": "0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad",
        "urls": [
          "bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093",
          "dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ILazyMint.sol": {
        "keccak256": "0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec",
        "urls": [
          "bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3",
          "dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IOperatorFilterRegistry.sol": {
        "keccak256": "0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da",
        "urls": [
          "bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34",
          "dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOperatorFilterToggle.sol": {
        "keccak256": "0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1",
        "urls": [
          "bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674",
          "dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0",
        "urls": [
          "bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf",
          "dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/drop/DropERC721.sol": {
        "keccak256": "0x58edf63d3b2f62828959bd01a088ac6253244eb98bf01133dff590c1da2ac0f5",
        "urls": [
          "bzz-raw://76ecad88701e24bb8833718feb2de31f15b6f3163b13586e28dfe4865a32889e",
          "dweb:/ipfs/Qme1UiGjyJ8Mey14rn8fD5rDE5UvV7PQuu15aen5GLEPhv"
        ],
        "license": "Apache-2.0"
      },
      "lib/ERC721A-Upgradeable/contracts/IERC721AUpgradeable.sol": {
        "keccak256": "0x89447bfc4f1417953e3664234d896b42ebc7d68b3cc27f86f7cdd7addfdd5c1c",
        "urls": [
          "bzz-raw://3916917efc838814adb1e459c968d442d26e304f28af181ff35cffb5ca3ec0be",
          "dweb:/ipfs/QmcVwcrhenj31MCbDn6yvaYsFNkyJmA3isWaJiGhgQeEmQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol": {
        "keccak256": "0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d",
        "urls": [
          "bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c",
          "dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0x016298e66a5810253c6c905e61966bb31c8775c3f3517bf946ff56ee31d6c005",
        "urls": [
          "bzz-raw://1723de5ae414f210db039b19e6487c19c2d643483c9be7c445cf481a80c199d2",
          "dweb:/ipfs/QmcBLbmPdZsNngYhA1KDadNUqQZoGACytFWuUH74RC4AXC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
        "keccak256": "0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70",
        "urls": [
          "bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3",
          "dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol": {
        "keccak256": "0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15",
        "urls": [
          "bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d",
          "dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/drop/DropERC721.sol",
    "id": 75280,
    "exportedSymbols": {
      "AddressUpgradeable": [
        157008
      ],
      "BatchMintMetadata": [
        18037
      ],
      "ContextUpgradeable": [
        157284
      ],
      "ContractMetadata": [
        18264
      ],
      "CurrencyTransferLib": [
        64276
      ],
      "DefaultOperatorFiltererUpgradeable": [
        18344
      ],
      "DelayedReveal": [
        18503
      ],
      "Drop": [
        19150
      ],
      "DropERC721": [
        75279
      ],
      "ERC165Upgradeable": [
        158489
      ],
      "ERC2771ContextUpgradeable": [
        46243
      ],
      "ERC721AUpgradeable": [
        14481
      ],
      "IClaimCondition": [
        33068
      ],
      "IClaimConditionMultiPhase": [
        33091
      ],
      "IContractMetadata": [
        33220
      ],
      "IDelayedReveal": [
        33251
      ],
      "IDrop": [
        33356
      ],
      "IERC165": [
        14687
      ],
      "IERC165Upgradeable": [
        158501
      ],
      "IERC20": [
        14757
      ],
      "IERC2981": [
        14831
      ],
      "IERC2981Upgradeable": [
        151288
      ],
      "IERC721AUpgradeable": [
        104038
      ],
      "IERC721MetadataUpgradeable": [
        156718
      ],
      "IERC721ReceiverUpgradeable": [
        156186
      ],
      "IERC721Upgradeable": [
        156302
      ],
      "ILazyMint": [
        33595
      ],
      "IOwnable": [
        33959
      ],
      "IPermissions": [
        34032
      ],
      "IPermissionsEnumerable": [
        34057
      ],
      "IPlatformFee": [
        34100
      ],
      "IPrimarySale": [
        34121
      ],
      "IRoyalty": [
        34185
      ],
      "IWETH": [
        55953
      ],
      "Initializable": [
        151439
      ],
      "LazyMint": [
        21079
      ],
      "MerkleProof": [
        64376
      ],
      "MulticallUpgradeable": [
        157467
      ],
      "OperatorFiltererUpgradeable": [
        21859
      ],
      "Ownable": [
        21941
      ],
      "Permissions": [
        22288
      ],
      "PermissionsEnumerable": [
        22587
      ],
      "PlatformFee": [
        22797
      ],
      "PrimarySale": [
        22859
      ],
      "Royalty": [
        23187
      ],
      "SafeERC20": [
        49005
      ],
      "StringsUpgradeable": [
        157693
      ],
      "TWAddress": [
        64850
      ],
      "TWStrings": [
        65550
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:15057:327",
    "nodes": [
      {
        "id": 74340,
        "nodeType": "PragmaDirective",
        "src": "39:24:327",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 74341,
        "nodeType": "ImportDirective",
        "src": "775:76:327",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75280,
        "sourceUnit": 157468,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74342,
        "nodeType": "ImportDirective",
        "src": "852:74:327",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75280,
        "sourceUnit": 157694,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74343,
        "nodeType": "ImportDirective",
        "src": "927:80:327",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75280,
        "sourceUnit": 151289,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74344,
        "nodeType": "ImportDirective",
        "src": "1009:56:327",
        "nodes": [],
        "absolutePath": "contracts/eip/ERC721AVirtualApproveUpgradeable.sol",
        "file": "../../eip/ERC721AVirtualApproveUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75280,
        "sourceUnit": 14482,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74345,
        "nodeType": "ImportDirective",
        "src": "1115:79:327",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75280,
        "sourceUnit": 46244,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74346,
        "nodeType": "ImportDirective",
        "src": "1195:43:327",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75280,
        "sourceUnit": 64277,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74347,
        "nodeType": "ImportDirective",
        "src": "1280:46:327",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75280,
        "sourceUnit": 18265,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74348,
        "nodeType": "ImportDirective",
        "src": "1327:41:327",
        "nodes": [],
        "absolutePath": "contracts/extension/PlatformFee.sol",
        "file": "../../extension/PlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75280,
        "sourceUnit": 22798,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74349,
        "nodeType": "ImportDirective",
        "src": "1369:37:327",
        "nodes": [],
        "absolutePath": "contracts/extension/Royalty.sol",
        "file": "../../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75280,
        "sourceUnit": 23188,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74350,
        "nodeType": "ImportDirective",
        "src": "1407:41:327",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75280,
        "sourceUnit": 22860,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74351,
        "nodeType": "ImportDirective",
        "src": "1449:37:327",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75280,
        "sourceUnit": 21942,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74352,
        "nodeType": "ImportDirective",
        "src": "1487:43:327",
        "nodes": [],
        "absolutePath": "contracts/extension/DelayedReveal.sol",
        "file": "../../extension/DelayedReveal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75280,
        "sourceUnit": 18504,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74353,
        "nodeType": "ImportDirective",
        "src": "1531:38:327",
        "nodes": [],
        "absolutePath": "contracts/extension/LazyMint.sol",
        "file": "../../extension/LazyMint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75280,
        "sourceUnit": 21080,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74354,
        "nodeType": "ImportDirective",
        "src": "1570:51:327",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75280,
        "sourceUnit": 22588,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74355,
        "nodeType": "ImportDirective",
        "src": "1622:34:327",
        "nodes": [],
        "absolutePath": "contracts/extension/Drop.sol",
        "file": "../../extension/Drop.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75280,
        "sourceUnit": 19151,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74356,
        "nodeType": "ImportDirective",
        "src": "1685:64:327",
        "nodes": [],
        "absolutePath": "contracts/extension/DefaultOperatorFiltererUpgradeable.sol",
        "file": "../../extension/DefaultOperatorFiltererUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75280,
        "sourceUnit": 18345,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75279,
        "nodeType": "ContractDefinition",
        "src": "1751:13344:327",
        "nodes": [
          {
            "id": 74387,
            "nodeType": "UsingForDirective",
            "src": "2071:37:327",
            "nodes": [],
            "libraryName": {
              "id": 74385,
              "name": "StringsUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 157693,
              "src": "2077:18:327"
            },
            "typeName": {
              "id": 74386,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2100:7:327",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 74390,
            "nodeType": "VariableDeclaration",
            "src": "2401:28:327",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 74388,
              "nodeType": "StructuredDocumentation",
              "src": "2298:98:327",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "mutable",
            "name": "transferRole",
            "nameLocation": "2417:12:327",
            "scope": 75279,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 74389,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2401:7:327",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 74393,
            "nodeType": "VariableDeclaration",
            "src": "2526:26:327",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 74391,
              "nodeType": "StructuredDocumentation",
              "src": "2435:86:327",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens."
            },
            "mutability": "mutable",
            "name": "minterRole",
            "nameLocation": "2542:10:327",
            "scope": 75279,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 74392,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2526:7:327",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 74397,
            "nodeType": "VariableDeclaration",
            "src": "2604:41:327",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 74394,
              "nodeType": "StructuredDocumentation",
              "src": "2559:40:327",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "2629:7:327",
            "scope": 75279,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 74395,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2604:7:327",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 74396,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2639:6:327",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 74400,
            "nodeType": "VariableDeclaration",
            "src": "2698:29:327",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 74398,
              "nodeType": "StructuredDocumentation",
              "src": "2652:41:327",
              "text": "@dev Global max total supply of NFTs."
            },
            "functionSelector": "2ab4d052",
            "mutability": "mutable",
            "name": "maxTotalSupply",
            "nameLocation": "2713:14:327",
            "scope": 75279,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 74399,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2698:7:327",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 74405,
            "nodeType": "EventDefinition",
            "src": "2804:52:327",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 74401,
              "nodeType": "StructuredDocumentation",
              "src": "2734:65:327",
              "text": "@dev Emitted when the global max supply of tokens is updated."
            },
            "name": "MaxTotalSupplyUpdated",
            "nameLocation": "2810:21:327",
            "parameters": {
              "id": 74404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74403,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "maxTotalSupply",
                  "nameLocation": "2840:14:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74405,
                  "src": "2832:22:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2832:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2831:24:327"
            }
          },
          {
            "id": 74411,
            "nodeType": "FunctionDefinition",
            "src": "3054:28:327",
            "nodes": [],
            "body": {
              "id": 74410,
              "nodeType": "Block",
              "src": "3080:2:327",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 74408,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 74407,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151359,
                  "src": "3068:11:327"
                },
                "nodeType": "ModifierInvocation",
                "src": "3068:11:327"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 74406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3065:2:327"
            },
            "returnParameters": {
              "id": 74409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3080:0:327"
            },
            "scope": 75279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74520,
            "nodeType": "FunctionDefinition",
            "src": "3147:1300:327",
            "nodes": [],
            "body": {
              "id": 74519,
              "nodeType": "Block",
              "src": "3534:913:327",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    74439
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74439,
                      "mutability": "mutable",
                      "name": "_transferRole",
                      "nameLocation": "3552:13:327",
                      "nodeType": "VariableDeclaration",
                      "scope": 74519,
                      "src": "3544:21:327",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 74438,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3544:7:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74443,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "5452414e534645525f524f4c45",
                        "id": 74441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3578:15:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        },
                        "value": "TRANSFER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        }
                      ],
                      "id": 74440,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3568:9:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 74442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3568:26:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3544:50:327"
                },
                {
                  "assignments": [
                    74445
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74445,
                      "mutability": "mutable",
                      "name": "_minterRole",
                      "nameLocation": "3612:11:327",
                      "nodeType": "VariableDeclaration",
                      "scope": 74519,
                      "src": "3604:19:327",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 74444,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3604:7:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74449,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4d494e5445525f524f4c45",
                        "id": 74447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3636:13:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        },
                        "value": "MINTER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        }
                      ],
                      "id": 74446,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3626:9:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 74448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3626:24:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3604:46:327"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74451,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74423,
                        "src": "3758:18:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 74450,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46150,
                      "src": "3736:21:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 74452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3736:41:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74453,
                  "nodeType": "ExpressionStatement",
                  "src": "3736:41:327"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74455,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74416,
                        "src": "3802:5:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 74456,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74418,
                        "src": "3809:7:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 74454,
                      "name": "__ERC721A_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13149,
                      "src": "3787:14:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 74457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3787:30:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74458,
                  "nodeType": "ExpressionStatement",
                  "src": "3787:30:327"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 74459,
                      "name": "__DefaultOperatorFilterer_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18326,
                      "src": "3827:30:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 74460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3827:32:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74461,
                  "nodeType": "ExpressionStatement",
                  "src": "3827:32:327"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74463,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74420,
                        "src": "3888:12:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 74462,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18257,
                      "src": "3870:17:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 74464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3870:31:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74465,
                  "nodeType": "ExpressionStatement",
                  "src": "3870:31:327"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74467,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74414,
                        "src": "3923:13:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74466,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21934,
                      "src": "3911:11:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 74468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3911:26:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74469,
                  "nodeType": "ExpressionStatement",
                  "src": "3911:26:327"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 74471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3971:4:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 74470,
                      "name": "_setOperatorRestriction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21529,
                      "src": "3947:23:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 74472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3947:29:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74473,
                  "nodeType": "ExpressionStatement",
                  "src": "3947:29:327"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74475,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "3998:18:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 74476,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74414,
                        "src": "4018:13:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74474,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22511
                      ],
                      "referencedDeclaration": 22511,
                      "src": "3987:10:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 74477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3987:45:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74478,
                  "nodeType": "ExpressionStatement",
                  "src": "3987:45:327"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74480,
                        "name": "_minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74445,
                        "src": "4053:11:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 74481,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74414,
                        "src": "4066:13:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74479,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22511
                      ],
                      "referencedDeclaration": 22511,
                      "src": "4042:10:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 74482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4042:38:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74483,
                  "nodeType": "ExpressionStatement",
                  "src": "4042:38:327"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74485,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74439,
                        "src": "4101:13:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 74486,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74414,
                        "src": "4116:13:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74484,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22511
                      ],
                      "referencedDeclaration": 22511,
                      "src": "4090:10:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 74487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4090:40:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74488,
                  "nodeType": "ExpressionStatement",
                  "src": "4090:40:327"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74490,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74439,
                        "src": "4151:13:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 74493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4174:1:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 74492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4166:7:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 74491,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4166:7:327",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 74494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4166:10:327",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74489,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22511
                      ],
                      "referencedDeclaration": 22511,
                      "src": "4140:10:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 74495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4140:37:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74496,
                  "nodeType": "ExpressionStatement",
                  "src": "4140:37:327"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74498,
                        "name": "_platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74433,
                        "src": "4210:21:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74499,
                        "name": "_platformFeeBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74431,
                        "src": "4233:15:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 74497,
                      "name": "_setupPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22704,
                      "src": "4188:21:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 74500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4188:61:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74501,
                  "nodeType": "ExpressionStatement",
                  "src": "4188:61:327"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74503,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74427,
                        "src": "4284:17:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74504,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74429,
                        "src": "4303:11:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 74502,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23118,
                      "src": "4259:24:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 74505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4259:56:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74506,
                  "nodeType": "ExpressionStatement",
                  "src": "4259:56:327"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74508,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74425,
                        "src": "4352:14:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74507,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22852,
                      "src": "4325:26:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 74509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4325:42:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74510,
                  "nodeType": "ExpressionStatement",
                  "src": "4325:42:327"
                },
                {
                  "expression": {
                    "id": 74513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74511,
                      "name": "transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74390,
                      "src": "4378:12:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 74512,
                      "name": "_transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74439,
                      "src": "4393:13:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4378:28:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 74514,
                  "nodeType": "ExpressionStatement",
                  "src": "4378:28:327"
                },
                {
                  "expression": {
                    "id": 74517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74515,
                      "name": "minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74393,
                      "src": "4416:10:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 74516,
                      "name": "_minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74445,
                      "src": "4429:11:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4416:24:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 74518,
                  "nodeType": "ExpressionStatement",
                  "src": "4416:24:327"
                }
              ]
            },
            "documentation": {
              "id": 74412,
              "nodeType": "StructuredDocumentation",
              "src": "3088:54:327",
              "text": "@dev Initiliazes the contract, like a constructor."
            },
            "functionSelector": "e1591634",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 74436,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 74435,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151359,
                  "src": "3522:11:327"
                },
                "nodeType": "ModifierInvocation",
                "src": "3522:11:327"
              }
            ],
            "name": "initialize",
            "nameLocation": "3156:10:327",
            "parameters": {
              "id": 74434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74414,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "3184:13:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74520,
                  "src": "3176:21:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3176:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74416,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3221:5:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74520,
                  "src": "3207:19:327",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 74415,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3207:6:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74418,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "3250:7:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74520,
                  "src": "3236:21:327",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 74417,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3236:6:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74420,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "3281:12:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74520,
                  "src": "3267:26:327",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 74419,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3267:6:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74423,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "3320:18:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74520,
                  "src": "3303:35:327",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 74421,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3303:7:327",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 74422,
                    "nodeType": "ArrayTypeName",
                    "src": "3303:9:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74425,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "3356:14:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74520,
                  "src": "3348:22:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3348:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74427,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "3388:17:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74520,
                  "src": "3380:25:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3380:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74429,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "3423:11:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74520,
                  "src": "3415:19:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 74428,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3415:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74431,
                  "mutability": "mutable",
                  "name": "_platformFeeBps",
                  "nameLocation": "3452:15:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74520,
                  "src": "3444:23:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 74430,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3444:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74433,
                  "mutability": "mutable",
                  "name": "_platformFeeRecipient",
                  "nameLocation": "3485:21:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74520,
                  "src": "3477:29:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74432,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3477:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3166:346:327"
            },
            "returnParameters": {
              "id": 74437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3534:0:327"
            },
            "scope": 75279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 74568,
            "nodeType": "FunctionDefinition",
            "src": "4694:402:327",
            "nodes": [],
            "body": {
              "id": 74567,
              "nodeType": "Block",
              "src": "4775:321:327",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    74530,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74530,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "4794:7:327",
                      "nodeType": "VariableDeclaration",
                      "scope": 74567,
                      "src": "4786:15:327",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 74529,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4786:7:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 74534,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 74532,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74523,
                        "src": "4819:8:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74531,
                      "name": "_getBatchId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17933,
                      "src": "4807:11:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 74533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4807:21:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4785:43:327"
                },
                {
                  "assignments": [
                    74536
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74536,
                      "mutability": "mutable",
                      "name": "batchUri",
                      "nameLocation": "4852:8:327",
                      "nodeType": "VariableDeclaration",
                      "scope": 74567,
                      "src": "4838:22:327",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 74535,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4838:6:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74540,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 74538,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74523,
                        "src": "4875:8:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74537,
                      "name": "_getBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17984,
                      "src": "4863:11:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 74539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4863:21:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4838:46:327"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 74542,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74530,
                        "src": "4916:7:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74541,
                      "name": "isEncryptedBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18502,
                      "src": "4899:16:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 74543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4899:25:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 74565,
                    "nodeType": "Block",
                    "src": "5003:87:327",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 74558,
                                  "name": "batchUri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74536,
                                  "src": "5048:8:327",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 74559,
                                      "name": "_tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74523,
                                      "src": "5058:8:327",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 74560,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 157555,
                                    "src": "5058:17:327",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 74561,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5058:19:327",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 74556,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5031:3:327",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 74557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "5031:16:327",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 74562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5031:47:327",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 74555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5024:6:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 74554,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "5024:6:327",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 74563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5024:55:327",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 74528,
                        "id": 74564,
                        "nodeType": "Return",
                        "src": "5017:62:327"
                      }
                    ]
                  },
                  "id": 74566,
                  "nodeType": "IfStatement",
                  "src": "4895:195:327",
                  "trueBody": {
                    "id": 74553,
                    "nodeType": "Block",
                    "src": "4926:71:327",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 74548,
                                  "name": "batchUri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74536,
                                  "src": "4971:8:327",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 74549,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4981:3:327",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  }
                                ],
                                "expression": {
                                  "id": 74546,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4954:3:327",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 74547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4954:16:327",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 74550,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4954:31:327",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 74545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4947:6:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 74544,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "4947:6:327",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 74551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4947:39:327",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 74528,
                        "id": 74552,
                        "nodeType": "Return",
                        "src": "4940:46:327"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              13485
            ],
            "documentation": {
              "id": 74521,
              "nodeType": "StructuredDocumentation",
              "src": "4644:45:327",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "4703:8:327",
            "overrides": {
              "id": 74525,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4742:8:327"
            },
            "parameters": {
              "id": 74524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74523,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4720:8:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74568,
                  "src": "4712:16:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74522,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4712:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4711:18:327"
            },
            "returnParameters": {
              "id": 74528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74527,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74568,
                  "src": "4760:13:327",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 74526,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4760:6:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4759:15:327"
            },
            "scope": 75279,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74592,
            "nodeType": "FunctionDefinition",
            "src": "5127:280:327",
            "nodes": [],
            "body": {
              "id": 74591,
              "nodeType": "Block",
              "src": "5291:116:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 74589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 74581,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74571,
                          "src": "5332:11:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 74579,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "5308:5:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_DropERC721_$75279_$",
                            "typeString": "type(contract super DropERC721)"
                          }
                        },
                        "id": 74580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13241,
                        "src": "5308:23:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 74582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5308:36:327",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 74588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 74584,
                              "name": "IERC2981Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151288,
                              "src": "5353:19:327",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$151288_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$151288_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            ],
                            "id": 74583,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "5348:4:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 74585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5348:25:327",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981Upgradeable_$151288",
                            "typeString": "type(contract IERC2981Upgradeable)"
                          }
                        },
                        "id": 74586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "5348:37:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 74587,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74571,
                        "src": "5389:11:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "5348:52:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5308:92:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74578,
                  "id": 74590,
                  "nodeType": "Return",
                  "src": "5301:99:327"
                }
              ]
            },
            "baseFunctions": [
              13241,
              14686
            ],
            "documentation": {
              "id": 74569,
              "nodeType": "StructuredDocumentation",
              "src": "5102:20:327",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "5136:17:327",
            "overrides": {
              "id": 74575,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 74573,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14481,
                  "src": "5235:18:327"
                },
                {
                  "id": 74574,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14687,
                  "src": "5255:7:327"
                }
              ],
              "src": "5226:37:327"
            },
            "parameters": {
              "id": 74572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74571,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "5161:11:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74592,
                  "src": "5154:18:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 74570,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5154:6:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5153:20:327"
            },
            "returnParameters": {
              "id": 74578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74577,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74592,
                  "src": "5281:4:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74576,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5281:4:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5280:6:327"
            },
            "scope": 75279,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 74603,
            "nodeType": "FunctionDefinition",
            "src": "5598:101:327",
            "nodes": [],
            "body": {
              "id": 74602,
              "nodeType": "Block",
              "src": "5654:45:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "44726f70455243373231",
                        "id": 74599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5679:12:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5365a898e19426afde2526aaa3fe87e1e366d6f6affe6ec2652fb30715593966",
                          "typeString": "literal_string \"DropERC721\""
                        },
                        "value": "DropERC721"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5365a898e19426afde2526aaa3fe87e1e366d6f6affe6ec2652fb30715593966",
                          "typeString": "literal_string \"DropERC721\""
                        }
                      ],
                      "id": 74598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5671:7:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 74597,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5671:7:327",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 74600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5671:21:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 74596,
                  "id": 74601,
                  "nodeType": "Return",
                  "src": "5664:28:327"
                }
              ]
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "5607:12:327",
            "parameters": {
              "id": 74593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5619:2:327"
            },
            "returnParameters": {
              "id": 74596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74595,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74603,
                  "src": "5645:7:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 74594,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5645:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5644:9:327"
            },
            "scope": 75279,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 74614,
            "nodeType": "FunctionDefinition",
            "src": "5705:89:327",
            "nodes": [],
            "body": {
              "id": 74613,
              "nodeType": "Block",
              "src": "5762:32:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "34",
                        "id": 74610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5785:1:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 74609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5779:5:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 74608,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "5779:5:327",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 74611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5779:8:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 74607,
                  "id": 74612,
                  "nodeType": "Return",
                  "src": "5772:15:327"
                }
              ]
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "5714:15:327",
            "parameters": {
              "id": 74604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5729:2:327"
            },
            "returnParameters": {
              "id": 74607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74606,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74614,
                  "src": "5755:5:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 74605,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5755:5:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5754:7:327"
            },
            "scope": 75279,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 74672,
            "nodeType": "FunctionDefinition",
            "src": "6168:540:327",
            "nodes": [],
            "body": {
              "id": 74671,
              "nodeType": "Block",
              "src": "6332:376:327",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 74627,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74621,
                        "src": "6346:5:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 74628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6346:12:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 74629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6361:1:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6346:16:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74663,
                  "nodeType": "IfStatement",
                  "src": "6342:293:327",
                  "trueBody": {
                    "id": 74662,
                    "nodeType": "Block",
                    "src": "6364:271:327",
                    "statements": [
                      {
                        "assignments": [
                          74632,
                          74634
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 74632,
                            "mutability": "mutable",
                            "name": "encryptedURI",
                            "nameLocation": "6392:12:327",
                            "nodeType": "VariableDeclaration",
                            "scope": 74662,
                            "src": "6379:25:327",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 74631,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6379:5:327",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 74634,
                            "mutability": "mutable",
                            "name": "provenanceHash",
                            "nameLocation": "6414:14:327",
                            "nodeType": "VariableDeclaration",
                            "scope": 74662,
                            "src": "6406:22:327",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 74633,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6406:7:327",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 74644,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 74637,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74621,
                              "src": "6443:5:327",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 74639,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6451:5:327",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 74638,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6451:5:327",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 74641,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6458:7:327",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 74640,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6458:7:327",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 74642,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6450:16:327",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes storage pointer),type(bytes32))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes storage pointer),type(bytes32))"
                              }
                            ],
                            "expression": {
                              "id": 74635,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6432:3:327",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 74636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6432:10:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 74643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6432:35:327",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$",
                            "typeString": "tuple(bytes memory,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6378:89:327"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 74652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 74648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 74645,
                                "name": "encryptedURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74632,
                                "src": "6485:12:327",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 74646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "6485:19:327",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 74647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6508:1:327",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "6485:24:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 74651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 74649,
                              "name": "provenanceHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74634,
                              "src": "6513:14:327",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "",
                              "id": 74650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6531:2:327",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            "src": "6513:20:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6485:48:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 74661,
                        "nodeType": "IfStatement",
                        "src": "6481:144:327",
                        "trueBody": {
                          "id": 74660,
                          "nodeType": "Block",
                          "src": "6535:90:327",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 74656,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 74654,
                                      "name": "nextTokenIdToLazyMint",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21013,
                                      "src": "6571:21:327",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 74655,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74617,
                                      "src": "6595:7:327",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6571:31:327",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 74657,
                                    "name": "_data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74621,
                                    "src": "6604:5:327",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 74653,
                                  "name": "_setEncryptedData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18370,
                                  "src": "6553:17:327",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,bytes memory)"
                                  }
                                },
                                "id": 74658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6553:57:327",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 74659,
                              "nodeType": "ExpressionStatement",
                              "src": "6553:57:327"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74666,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74617,
                        "src": "6667:7:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74667,
                        "name": "_baseURIForTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74619,
                        "src": "6676:17:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 74668,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74621,
                        "src": "6695:5:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 74664,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "6652:5:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC721_$75279_$",
                          "typeString": "type(contract super DropERC721)"
                        }
                      },
                      "id": 74665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lazyMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21072,
                      "src": "6652:14:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,string calldata,bytes calldata) returns (uint256)"
                      }
                    },
                    "id": 74669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6652:49:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 74626,
                  "id": 74670,
                  "nodeType": "Return",
                  "src": "6645:56:327"
                }
              ]
            },
            "baseFunctions": [
              21072
            ],
            "documentation": {
              "id": 74615,
              "nodeType": "StructuredDocumentation",
              "src": "5996:167:327",
              "text": "  @dev Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.\n       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."
            },
            "functionSelector": "d37c353b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lazyMint",
            "nameLocation": "6177:8:327",
            "overrides": {
              "id": 74623,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6297:8:327"
            },
            "parameters": {
              "id": 74622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74617,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6203:7:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74672,
                  "src": "6195:15:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6195:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74619,
                  "mutability": "mutable",
                  "name": "_baseURIForTokens",
                  "nameLocation": "6236:17:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74672,
                  "src": "6220:33:327",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 74618,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6220:6:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74621,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6278:5:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74672,
                  "src": "6263:20:327",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 74620,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6263:5:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6185:104:327"
            },
            "returnParameters": {
              "id": 74626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74625,
                  "mutability": "mutable",
                  "name": "batchId",
                  "nameLocation": "6323:7:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74672,
                  "src": "6315:15:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6315:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6314:17:327"
            },
            "scope": 75279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74714,
            "nodeType": "FunctionDefinition",
            "src": "6815:395:327",
            "nodes": [],
            "body": {
              "id": 74713,
              "nodeType": "Block",
              "src": "6962:248:327",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    74686
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74686,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "6980:7:327",
                      "nodeType": "VariableDeclaration",
                      "scope": 74713,
                      "src": "6972:15:327",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 74685,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6972:7:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74690,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 74688,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74675,
                        "src": "7008:6:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74687,
                      "name": "getBatchIdAtIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17872,
                      "src": "6990:17:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 74689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6990:25:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6972:43:327"
                },
                {
                  "expression": {
                    "id": 74696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74691,
                      "name": "revealedURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74683,
                      "src": "7025:11:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 74693,
                          "name": "batchId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74686,
                          "src": "7052:7:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 74694,
                          "name": "_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74677,
                          "src": "7061:4:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 74692,
                        "name": "getRevealURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18436,
                        "src": "7039:12:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (uint256,bytes calldata) view returns (string memory)"
                        }
                      },
                      "id": 74695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7039:27:327",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "7025:41:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 74697,
                  "nodeType": "ExpressionStatement",
                  "src": "7025:41:327"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74699,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74686,
                        "src": "7095:7:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 74700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7104:2:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 74698,
                      "name": "_setEncryptedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18370,
                      "src": "7077:17:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 74701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7077:30:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74702,
                  "nodeType": "ExpressionStatement",
                  "src": "7077:30:327"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74704,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74686,
                        "src": "7129:7:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74705,
                        "name": "revealedURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74683,
                        "src": "7138:11:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 74703,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17999,
                      "src": "7117:11:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 74706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7117:33:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74707,
                  "nodeType": "ExpressionStatement",
                  "src": "7117:33:327"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 74709,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74675,
                        "src": "7183:6:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74710,
                        "name": "revealedURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74683,
                        "src": "7191:11:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 74708,
                      "name": "TokenURIRevealed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33230,
                      "src": "7166:16:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 74711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7166:37:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74712,
                  "nodeType": "EmitStatement",
                  "src": "7161:42:327"
                }
              ]
            },
            "baseFunctions": [
              33240
            ],
            "documentation": {
              "id": 74673,
              "nodeType": "StructuredDocumentation",
              "src": "6714:96:327",
              "text": "@dev Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs."
            },
            "functionSelector": "ce805642",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 74680,
                    "name": "minterRole",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 74393,
                    "src": "6902:10:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 74681,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 74679,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21977,
                  "src": "6893:8:327"
                },
                "nodeType": "ModifierInvocation",
                "src": "6893:20:327"
              }
            ],
            "name": "reveal",
            "nameLocation": "6824:6:327",
            "parameters": {
              "id": 74678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74675,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "6839:6:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74714,
                  "src": "6831:14:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6831:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74677,
                  "mutability": "mutable",
                  "name": "_key",
                  "nameLocation": "6862:4:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74714,
                  "src": "6847:19:327",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 74676,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6847:5:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6830:37:327"
            },
            "returnParameters": {
              "id": 74684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74683,
                  "mutability": "mutable",
                  "name": "revealedURI",
                  "nameLocation": "6945:11:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74714,
                  "src": "6931:25:327",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 74682,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6931:6:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6930:27:327"
            },
            "scope": 75279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 74732,
            "nodeType": "FunctionDefinition",
            "src": "7485:192:327",
            "nodes": [],
            "body": {
              "id": 74731,
              "nodeType": "Block",
              "src": "7575:102:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 74725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74723,
                      "name": "maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74400,
                      "src": "7585:14:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 74724,
                      "name": "_maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74717,
                      "src": "7602:15:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7585:32:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 74726,
                  "nodeType": "ExpressionStatement",
                  "src": "7585:32:327"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 74728,
                        "name": "_maxTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74717,
                        "src": "7654:15:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74727,
                      "name": "MaxTotalSupplyUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74405,
                      "src": "7632:21:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 74729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7632:38:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74730,
                  "nodeType": "EmitStatement",
                  "src": "7627:43:327"
                }
              ]
            },
            "documentation": {
              "id": 74715,
              "nodeType": "StructuredDocumentation",
              "src": "7397:83:327",
              "text": "@dev Lets a contract admin set the global maximum supply for collection's NFTs."
            },
            "functionSelector": "3f3e4c11",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 74720,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21964,
                    "src": "7555:18:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 74721,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 74719,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21977,
                  "src": "7546:8:327"
                },
                "nodeType": "ModifierInvocation",
                "src": "7546:28:327"
              }
            ],
            "name": "setMaxTotalSupply",
            "nameLocation": "7494:17:327",
            "parameters": {
              "id": 74718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74717,
                  "mutability": "mutable",
                  "name": "_maxTotalSupply",
                  "nameLocation": "7520:15:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74732,
                  "src": "7512:23:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7512:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7511:25:327"
            },
            "returnParameters": {
              "id": 74722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7575:0:327"
            },
            "scope": 75279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 74773,
            "nodeType": "FunctionDefinition",
            "src": "7920:367:327",
            "nodes": [],
            "body": {
              "id": 74772,
              "nodeType": "Block",
              "src": "8104:183:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 74753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 74751,
                            "name": "_currentIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13108,
                            "src": "8122:13:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 74752,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74737,
                            "src": "8138:9:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8122:25:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 74754,
                          "name": "nextTokenIdToLazyMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21013,
                          "src": "8151:21:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8122:50:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21546f6b656e73",
                        "id": 74756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8174:9:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c48d16b147323aabba55b2c5e21a0b7a88b05e59180ad9d2d4b243d721a30dd",
                          "typeString": "literal_string \"!Tokens\""
                        },
                        "value": "!Tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c48d16b147323aabba55b2c5e21a0b7a88b05e59180ad9d2d4b243d721a30dd",
                          "typeString": "literal_string \"!Tokens\""
                        }
                      ],
                      "id": 74750,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8114:7:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8114:70:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74758,
                  "nodeType": "ExpressionStatement",
                  "src": "8114:70:327"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 74768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 74762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 74760,
                            "name": "maxTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74400,
                            "src": "8202:14:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 74761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8220:1:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8202:19:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 74767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 74765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 74763,
                              "name": "_currentIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13108,
                              "src": "8225:13:327",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 74764,
                              "name": "_quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74737,
                              "src": "8241:9:327",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8225:25:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 74766,
                            "name": "maxTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74400,
                            "src": "8254:14:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8225:43:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8202:66:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21537570706c79",
                        "id": 74769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8270:9:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_621a3b1b99a8bff49ecb98db11468fdefb9a831f2bd730c68ae7cf98e8357223",
                          "typeString": "literal_string \"!Supply\""
                        },
                        "value": "!Supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_621a3b1b99a8bff49ecb98db11468fdefb9a831f2bd730c68ae7cf98e8357223",
                          "typeString": "literal_string \"!Supply\""
                        }
                      ],
                      "id": 74759,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8194:7:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8194:86:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74771,
                  "nodeType": "ExpressionStatement",
                  "src": "8194:86:327"
                }
              ]
            },
            "baseFunctions": [
              19103
            ],
            "documentation": {
              "id": 74733,
              "nodeType": "StructuredDocumentation",
              "src": "7866:49:327",
              "text": "@dev Runs before every `claim` function call."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeClaim",
            "nameLocation": "7929:12:327",
            "overrides": {
              "id": 74748,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8095:8:327"
            },
            "parameters": {
              "id": 74747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74735,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74773,
                  "src": "7951:7:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7951:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74737,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "7976:9:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74773,
                  "src": "7968:17:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7968:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74739,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74773,
                  "src": "7995:7:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7995:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74741,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74773,
                  "src": "8012:7:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8012:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74744,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74773,
                  "src": "8029:23:327",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllowlistProof_$33306_calldata_ptr",
                    "typeString": "struct IDrop.AllowlistProof"
                  },
                  "typeName": {
                    "id": 74743,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 74742,
                      "name": "AllowlistProof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33306,
                      "src": "8029:14:327"
                    },
                    "referencedDeclaration": 33306,
                    "src": "8029:14:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowlistProof_$33306_storage_ptr",
                      "typeString": "struct IDrop.AllowlistProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74746,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74773,
                  "src": "8062:12:327",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 74745,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8062:5:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7941:139:327"
            },
            "returnParameters": {
              "id": 74749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8104:0:327"
            },
            "scope": 75279,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74887,
            "nodeType": "FunctionDefinition",
            "src": "8377:1117:327",
            "nodes": [],
            "body": {
              "id": 74886,
              "nodeType": "Block",
              "src": "8563:931:327",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74786,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74782,
                      "src": "8577:14:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 74787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8595:1:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8577:19:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74799,
                  "nodeType": "IfStatement",
                  "src": "8573:99:327",
                  "trueBody": {
                    "id": 74798,
                    "nodeType": "Block",
                    "src": "8598:74:327",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 74793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 74790,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8620:3:327",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 74791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "8620:9:327",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 74792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8633:1:327",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8620:14:327",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156",
                              "id": 74794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8636:4:327",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                                "typeString": "literal_string \"!V\""
                              },
                              "value": "!V"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                                "typeString": "literal_string \"!V\""
                              }
                            ],
                            "id": 74789,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8612:7:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 74795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8612:29:327",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 74796,
                        "nodeType": "ExpressionStatement",
                        "src": "8612:29:327"
                      },
                      {
                        "functionReturnParameters": 74785,
                        "id": 74797,
                        "nodeType": "Return",
                        "src": "8655:7:327"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    74801,
                    74803
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74801,
                      "mutability": "mutable",
                      "name": "platformFeeRecipient",
                      "nameLocation": "8691:20:327",
                      "nodeType": "VariableDeclaration",
                      "scope": 74886,
                      "src": "8683:28:327",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 74800,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8683:7:327",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 74803,
                      "mutability": "mutable",
                      "name": "platformFeeBps",
                      "nameLocation": "8720:14:327",
                      "nodeType": "VariableDeclaration",
                      "scope": 74886,
                      "src": "8713:21:327",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 74802,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "8713:6:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74806,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 74804,
                      "name": "getPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22623,
                      "src": "8738:18:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint16_$",
                        "typeString": "function () view returns (address,uint16)"
                      }
                    },
                    "id": 74805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8738:20:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                      "typeString": "tuple(address,uint16)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8682:76:327"
                },
                {
                  "assignments": [
                    74808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74808,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "8777:13:327",
                      "nodeType": "VariableDeclaration",
                      "scope": 74886,
                      "src": "8769:21:327",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 74807,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8769:7:327",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74819,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 74814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 74809,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74776,
                        "src": "8793:21:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 74812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8826:1:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 74811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8818:7:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 74810,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8818:7:327",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 74813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8818:10:327",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "8793:35:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 74817,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74776,
                      "src": "8856:21:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 74818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "8793:84:327",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 74815,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22816,
                        "src": "8831:20:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 74816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8831:22:327",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8769:108:327"
                },
                {
                  "assignments": [
                    74821
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74821,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "8896:10:327",
                      "nodeType": "VariableDeclaration",
                      "scope": 74886,
                      "src": "8888:18:327",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 74820,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8888:7:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74825,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74822,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74778,
                      "src": "8909:16:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 74823,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74782,
                      "src": "8928:14:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8909:33:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8888:54:327"
                },
                {
                  "assignments": [
                    74827
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74827,
                      "mutability": "mutable",
                      "name": "platformFees",
                      "nameLocation": "8960:12:327",
                      "nodeType": "VariableDeclaration",
                      "scope": 74886,
                      "src": "8952:20:327",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 74826,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8952:7:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74834,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 74830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 74828,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74821,
                            "src": "8976:10:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 74829,
                            "name": "platformFeeBps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74803,
                            "src": "8989:14:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "8976:27:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 74831,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8975:29:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 74832,
                      "name": "MAX_BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74397,
                      "src": "9007:7:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8975:39:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8952:62:327"
                },
                {
                  "assignments": [
                    74836
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74836,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "9030:13:327",
                      "nodeType": "VariableDeclaration",
                      "scope": 74886,
                      "src": "9025:18:327",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 74835,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9025:4:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74837,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9025:18:327"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 74841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74838,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74780,
                      "src": "9057:9:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 74839,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64276,
                        "src": "9070:19:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64276_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 74840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64044,
                      "src": "9070:32:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9057:45:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 74857,
                    "nodeType": "Block",
                    "src": "9174:55:327",
                    "statements": [
                      {
                        "expression": {
                          "id": 74855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 74850,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74836,
                            "src": "9188:13:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 74854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 74851,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9204:3:327",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 74852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "9204:9:327",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 74853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9217:1:327",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "9204:14:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9188:30:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 74856,
                        "nodeType": "ExpressionStatement",
                        "src": "9188:30:327"
                      }
                    ]
                  },
                  "id": 74858,
                  "nodeType": "IfStatement",
                  "src": "9053:176:327",
                  "trueBody": {
                    "id": 74849,
                    "nodeType": "Block",
                    "src": "9104:64:327",
                    "statements": [
                      {
                        "expression": {
                          "id": 74847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 74842,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74836,
                            "src": "9118:13:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 74846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 74843,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9134:3:327",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 74844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "9134:9:327",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 74845,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74821,
                              "src": "9147:10:327",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9134:23:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9118:39:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 74848,
                        "nodeType": "ExpressionStatement",
                        "src": "9118:39:327"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74860,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74836,
                        "src": "9246:13:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2156",
                        "id": 74861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9261:4:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        },
                        "value": "!V"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        }
                      ],
                      "id": 74859,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9238:7:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9238:28:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74863,
                  "nodeType": "ExpressionStatement",
                  "src": "9238:28:327"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74867,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74780,
                        "src": "9314:9:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74868,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75265
                          ],
                          "referencedDeclaration": 75265,
                          "src": "9325:10:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9325:12:327",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74870,
                        "name": "platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74801,
                        "src": "9339:20:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74871,
                        "name": "platformFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74827,
                        "src": "9361:12:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74864,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64276,
                        "src": "9277:19:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64276_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 74866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64081,
                      "src": "9277:36:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 74872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9277:97:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74873,
                  "nodeType": "ExpressionStatement",
                  "src": "9277:97:327"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74877,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74780,
                        "src": "9421:9:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74878,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75265
                          ],
                          "referencedDeclaration": 75265,
                          "src": "9432:10:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9432:12:327",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74880,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74808,
                        "src": "9446:13:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74881,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74821,
                          "src": "9461:10:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 74882,
                          "name": "platformFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74827,
                          "src": "9474:12:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9461:25:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74874,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64276,
                        "src": "9384:19:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64276_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 74876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64081,
                      "src": "9384:36:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 74884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9384:103:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74885,
                  "nodeType": "ExpressionStatement",
                  "src": "9384:103:327"
                }
              ]
            },
            "baseFunctions": [
              19133
            ],
            "documentation": {
              "id": 74774,
              "nodeType": "StructuredDocumentation",
              "src": "8293:79:327",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "8386:20:327",
            "overrides": {
              "id": 74784,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8554:8:327"
            },
            "parameters": {
              "id": 74783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74776,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "8424:21:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74887,
                  "src": "8416:29:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8416:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74778,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "8463:16:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74887,
                  "src": "8455:24:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8455:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74780,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "8497:9:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74887,
                  "src": "8489:17:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8489:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74782,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "8524:14:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74887,
                  "src": "8516:22:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8516:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8406:138:327"
            },
            "returnParameters": {
              "id": 74785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8563:0:327"
            },
            "scope": 75279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74908,
            "nodeType": "FunctionDefinition",
            "src": "9547:245:327",
            "nodes": [],
            "body": {
              "id": 74907,
              "nodeType": "Block",
              "src": "9700:92:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 74900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74898,
                      "name": "startTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74896,
                      "src": "9710:12:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 74899,
                      "name": "_currentIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13108,
                      "src": "9725:13:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9710:28:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 74901,
                  "nodeType": "ExpressionStatement",
                  "src": "9710:28:327"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74903,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74890,
                        "src": "9758:3:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74904,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74892,
                        "src": "9763:21:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74902,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13726,
                        13889
                      ],
                      "referencedDeclaration": 13726,
                      "src": "9748:9:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 74905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9748:37:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74906,
                  "nodeType": "ExpressionStatement",
                  "src": "9748:37:327"
                }
              ]
            },
            "baseFunctions": [
              19143
            ],
            "documentation": {
              "id": 74888,
              "nodeType": "StructuredDocumentation",
              "src": "9500:42:327",
              "text": "@dev Transfers the NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "9556:22:327",
            "overrides": {
              "id": 74894,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9648:8:327"
            },
            "parameters": {
              "id": 74893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74890,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "9587:3:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74908,
                  "src": "9579:11:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74889,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9579:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74892,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "9600:21:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74908,
                  "src": "9592:29:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9592:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9578:44:327"
            },
            "returnParameters": {
              "id": 74897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74896,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "9682:12:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 74908,
                  "src": "9674:20:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9674:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9673:22:327"
            },
            "scope": 75279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74922,
            "nodeType": "FunctionDefinition",
            "src": "9887:137:327",
            "nodes": [],
            "body": {
              "id": 74921,
              "nodeType": "Block",
              "src": "9959:65:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74916,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "9984:18:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74917,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75265
                          ],
                          "referencedDeclaration": 75265,
                          "src": "10004:10:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10004:12:327",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74915,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "9976:7:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9976:41:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74914,
                  "id": 74920,
                  "nodeType": "Return",
                  "src": "9969:48:327"
                }
              ]
            },
            "baseFunctions": [
              22796
            ],
            "documentation": {
              "id": 74909,
              "nodeType": "StructuredDocumentation",
              "src": "9798:84:327",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPlatformFeeInfo",
            "nameLocation": "9896:22:327",
            "overrides": {
              "id": 74911,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9935:8:327"
            },
            "parameters": {
              "id": 74910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9918:2:327"
            },
            "returnParameters": {
              "id": 74914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74913,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74922,
                  "src": "9953:4:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74912,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9953:4:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9952:6:327"
            },
            "scope": 75279,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74936,
            "nodeType": "FunctionDefinition",
            "src": "10124:142:327",
            "nodes": [],
            "body": {
              "id": 74935,
              "nodeType": "Block",
              "src": "10201:65:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74930,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "10226:18:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74931,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75265
                          ],
                          "referencedDeclaration": 75265,
                          "src": "10246:10:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10246:12:327",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74929,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "10218:7:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10218:41:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74928,
                  "id": 74934,
                  "nodeType": "Return",
                  "src": "10211:48:327"
                }
              ]
            },
            "baseFunctions": [
              22858
            ],
            "documentation": {
              "id": 74923,
              "nodeType": "StructuredDocumentation",
              "src": "10030:89:327",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "10133:27:327",
            "overrides": {
              "id": 74925,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10177:8:327"
            },
            "parameters": {
              "id": 74924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10160:2:327"
            },
            "returnParameters": {
              "id": 74928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74927,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74936,
                  "src": "10195:4:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74926,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10195:4:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10194:6:327"
            },
            "scope": 75279,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74950,
            "nodeType": "FunctionDefinition",
            "src": "10349:127:327",
            "nodes": [],
            "body": {
              "id": 74949,
              "nodeType": "Block",
              "src": "10411:65:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74944,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "10436:18:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74945,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75265
                          ],
                          "referencedDeclaration": 75265,
                          "src": "10456:10:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10456:12:327",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74943,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "10428:7:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10428:41:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74942,
                  "id": 74948,
                  "nodeType": "Return",
                  "src": "10421:48:327"
                }
              ]
            },
            "baseFunctions": [
              21940
            ],
            "documentation": {
              "id": 74937,
              "nodeType": "StructuredDocumentation",
              "src": "10272:72:327",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "10358:12:327",
            "overrides": {
              "id": 74939,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10387:8:327"
            },
            "parameters": {
              "id": 74938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10370:2:327"
            },
            "returnParameters": {
              "id": 74942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74941,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74950,
                  "src": "10405:4:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74940,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10405:4:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10404:6:327"
            },
            "scope": 75279,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74964,
            "nodeType": "FunctionDefinition",
            "src": "10566:133:327",
            "nodes": [],
            "body": {
              "id": 74963,
              "nodeType": "Block",
              "src": "10634:65:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74958,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "10659:18:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74959,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75265
                          ],
                          "referencedDeclaration": 75265,
                          "src": "10679:10:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10679:12:327",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74957,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "10651:7:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10651:41:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74956,
                  "id": 74962,
                  "nodeType": "Return",
                  "src": "10644:48:327"
                }
              ]
            },
            "baseFunctions": [
              23186
            ],
            "documentation": {
              "id": 74951,
              "nodeType": "StructuredDocumentation",
              "src": "10482:79:327",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "10575:18:327",
            "overrides": {
              "id": 74953,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10610:8:327"
            },
            "parameters": {
              "id": 74952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10593:2:327"
            },
            "returnParameters": {
              "id": 74956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74955,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74964,
                  "src": "10628:4:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74954,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10628:4:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10627:6:327"
            },
            "scope": 75279,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74978,
            "nodeType": "FunctionDefinition",
            "src": "10794:133:327",
            "nodes": [],
            "body": {
              "id": 74977,
              "nodeType": "Block",
              "src": "10862:65:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74972,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "10887:18:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74973,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75265
                          ],
                          "referencedDeclaration": 75265,
                          "src": "10907:10:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10907:12:327",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74971,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "10879:7:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10879:41:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74970,
                  "id": 74976,
                  "nodeType": "Return",
                  "src": "10872:48:327"
                }
              ]
            },
            "baseFunctions": [
              18263
            ],
            "documentation": {
              "id": 74965,
              "nodeType": "StructuredDocumentation",
              "src": "10705:84:327",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "10803:18:327",
            "overrides": {
              "id": 74967,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10838:8:327"
            },
            "parameters": {
              "id": 74966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10821:2:327"
            },
            "returnParameters": {
              "id": 74970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74969,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74978,
                  "src": "10856:4:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74968,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10856:4:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10855:6:327"
            },
            "scope": 75279,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74992,
            "nodeType": "FunctionDefinition",
            "src": "11022:137:327",
            "nodes": [],
            "body": {
              "id": 74991,
              "nodeType": "Block",
              "src": "11094:65:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74986,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "11119:18:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74987,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75265
                          ],
                          "referencedDeclaration": 75265,
                          "src": "11139:10:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11139:12:327",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74985,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "11111:7:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11111:41:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74984,
                  "id": 74990,
                  "nodeType": "Return",
                  "src": "11104:48:327"
                }
              ]
            },
            "baseFunctions": [
              19149
            ],
            "documentation": {
              "id": 74979,
              "nodeType": "StructuredDocumentation",
              "src": "10933:84:327",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "11031:22:327",
            "overrides": {
              "id": 74981,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11070:8:327"
            },
            "parameters": {
              "id": 74980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11053:2:327"
            },
            "returnParameters": {
              "id": 74984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74983,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74992,
                  "src": "11088:4:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74982,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11088:4:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11087:6:327"
            },
            "scope": 75279,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 75006,
            "nodeType": "FunctionDefinition",
            "src": "11251:127:327",
            "nodes": [],
            "body": {
              "id": 75005,
              "nodeType": "Block",
              "src": "11321:57:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75000,
                        "name": "minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74393,
                        "src": "11346:10:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 75001,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75265
                          ],
                          "referencedDeclaration": 75265,
                          "src": "11358:10:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 75002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11358:12:327",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74999,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "11338:7:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 75003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11338:33:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74998,
                  "id": 75004,
                  "nodeType": "Return",
                  "src": "11331:40:327"
                }
              ]
            },
            "baseFunctions": [
              21078
            ],
            "documentation": {
              "id": 74993,
              "nodeType": "StructuredDocumentation",
              "src": "11165:81:327",
              "text": "@dev Returns whether lazy minting can be done in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canLazyMint",
            "nameLocation": "11260:12:327",
            "overrides": {
              "id": 74995,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11297:8:327"
            },
            "parameters": {
              "id": 74994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11272:2:327"
            },
            "returnParameters": {
              "id": 74998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74997,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75006,
                  "src": "11315:4:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74996,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11315:4:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11314:6:327"
            },
            "scope": 75279,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 75020,
            "nodeType": "FunctionDefinition",
            "src": "11477:144:327",
            "nodes": [],
            "body": {
              "id": 75019,
              "nodeType": "Block",
              "src": "11556:65:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75014,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "11581:18:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 75015,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75265
                          ],
                          "referencedDeclaration": 75265,
                          "src": "11601:10:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 75016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11601:12:327",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 75013,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "11573:7:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 75017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11573:41:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 75012,
                  "id": 75018,
                  "nodeType": "Return",
                  "src": "11566:48:327"
                }
              ]
            },
            "baseFunctions": [
              21534
            ],
            "documentation": {
              "id": 75007,
              "nodeType": "StructuredDocumentation",
              "src": "11384:88:327",
              "text": "@dev Returns whether operator restriction can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOperatorRestriction",
            "nameLocation": "11486:26:327",
            "overrides": {
              "id": 75009,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11532:8:327"
            },
            "parameters": {
              "id": 75008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11512:2:327"
            },
            "returnParameters": {
              "id": 75012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75011,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75020,
                  "src": "11550:4:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 75010,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11550:4:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11549:6:327"
            },
            "scope": 75279,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 75033,
            "nodeType": "FunctionDefinition",
            "src": "11887:144:327",
            "nodes": [],
            "body": {
              "id": 75032,
              "nodeType": "Block",
              "src": "11942:89:327",
              "nodes": [],
              "statements": [
                {
                  "id": 75031,
                  "nodeType": "UncheckedBlock",
                  "src": "11952:73:327",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 75029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 75026,
                          "name": "_currentIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13108,
                          "src": "11983:13:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 75027,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13181,
                            "src": "11999:13:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 75028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11999:15:327",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11983:31:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 75025,
                      "id": 75030,
                      "nodeType": "Return",
                      "src": "11976:38:327"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 75021,
              "nodeType": "StructuredDocumentation",
              "src": "11805:77:327",
              "text": " Returns the total amount of tokens minted in the contract."
            },
            "functionSelector": "a2309ff8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMinted",
            "nameLocation": "11896:11:327",
            "parameters": {
              "id": 75022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11907:2:327"
            },
            "returnParameters": {
              "id": 75025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75024,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75033,
                  "src": "11933:7:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11933:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11932:9:327"
            },
            "scope": 75279,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75042,
            "nodeType": "FunctionDefinition",
            "src": "12113:106:327",
            "nodes": [],
            "body": {
              "id": 75041,
              "nodeType": "Block",
              "src": "12174:45:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 75039,
                    "name": "nextTokenIdToLazyMint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21013,
                    "src": "12191:21:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 75038,
                  "id": 75040,
                  "nodeType": "Return",
                  "src": "12184:28:327"
                }
              ]
            },
            "documentation": {
              "id": 75034,
              "nodeType": "StructuredDocumentation",
              "src": "12037:71:327",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "12122:17:327",
            "parameters": {
              "id": 75035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12139:2:327"
            },
            "returnParameters": {
              "id": 75038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75037,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75042,
                  "src": "12165:7:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12165:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12164:9:327"
            },
            "scope": 75279,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75051,
            "nodeType": "FunctionDefinition",
            "src": "12288:99:327",
            "nodes": [],
            "body": {
              "id": 75050,
              "nodeType": "Block",
              "src": "12350:37:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 75048,
                    "name": "_currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13108,
                    "src": "12367:13:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 75047,
                  "id": 75049,
                  "nodeType": "Return",
                  "src": "12360:20:327"
                }
              ]
            },
            "documentation": {
              "id": 75043,
              "nodeType": "StructuredDocumentation",
              "src": "12225:58:327",
              "text": "@dev The next token ID of the NFT that can be claimed."
            },
            "functionSelector": "acd083f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToClaim",
            "nameLocation": "12297:18:327",
            "parameters": {
              "id": 75044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12315:2:327"
            },
            "returnParameters": {
              "id": 75047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75046,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75051,
                  "src": "12341:7:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12341:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12340:9:327"
            },
            "scope": 75279,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75063,
            "nodeType": "FunctionDefinition",
            "src": "12443:184:327",
            "nodes": [],
            "body": {
              "id": 75062,
              "nodeType": "Block",
              "src": "12491:136:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75058,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75054,
                        "src": "12606:7:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 75059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12615:4:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 75057,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14189,
                        14371
                      ],
                      "referencedDeclaration": 14371,
                      "src": "12600:5:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 75060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12600:20:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75061,
                  "nodeType": "ExpressionStatement",
                  "src": "12600:20:327"
                }
              ]
            },
            "documentation": {
              "id": 75052,
              "nodeType": "StructuredDocumentation",
              "src": "12393:45:327",
              "text": "@dev Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "12452:4:327",
            "parameters": {
              "id": 75055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75054,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12465:7:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 75063,
                  "src": "12457:15:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75053,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12457:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12456:17:327"
            },
            "returnParameters": {
              "id": 75056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12491:0:327"
            },
            "scope": 75279,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 75127,
            "nodeType": "FunctionDefinition",
            "src": "12681:573:327",
            "nodes": [],
            "body": {
              "id": 75126,
              "nodeType": "Block",
              "src": "12842:412:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75079,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75066,
                        "src": "12880:4:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75080,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75068,
                        "src": "12886:2:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75081,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75070,
                        "src": "12890:12:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 75082,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75072,
                        "src": "12904:8:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 75076,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "12852:5:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC721_$75279_$",
                          "typeString": "type(contract super DropERC721)"
                        }
                      },
                      "id": 75078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14462,
                      "src": "12852:27:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 75083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12852:61:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75084,
                  "nodeType": "ExpressionStatement",
                  "src": "12852:61:327"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 75106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 75099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 75092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "13025:34:327",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 75086,
                              "name": "transferRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74390,
                              "src": "13034:12:327",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 75089,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13056:1:327",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 75088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13048:7:327",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 75087,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13048:7:327",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 75090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13048:10:327",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 75085,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21995,
                            "src": "13026:7:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 75091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13026:33:327",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 75098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 75093,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75066,
                          "src": "13063:4:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 75096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13079:1:327",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 75095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13071:7:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 75094,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13071:7:327",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 75097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13071:10:327",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13063:18:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "13025:56:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 75105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 75100,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75068,
                        "src": "13085:2:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 75103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13099:1:327",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 75102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13091:7:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75101,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13091:7:327",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13091:10:327",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "13085:16:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13025:76:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 75125,
                  "nodeType": "IfStatement",
                  "src": "13021:227:327",
                  "trueBody": {
                    "id": 75124,
                    "nodeType": "Block",
                    "src": "13103:145:327",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 75117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 75111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "13121:28:327",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 75108,
                                  "name": "transferRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74390,
                                  "src": "13130:12:327",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 75109,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75066,
                                  "src": "13144:4:327",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 75107,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21995,
                                "src": "13122:7:327",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 75110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13122:27:327",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 75116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "13153:26:327",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 75113,
                                  "name": "transferRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74390,
                                  "src": "13162:12:327",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 75114,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75068,
                                  "src": "13176:2:327",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 75112,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21995,
                                "src": "13154:7:327",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 75115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13154:25:327",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13121:58:327",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 75123,
                        "nodeType": "IfStatement",
                        "src": "13117:121:327",
                        "trueBody": {
                          "id": 75122,
                          "nodeType": "Block",
                          "src": "13181:57:327",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "215472616e736665722d526f6c65",
                                    "id": 75119,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13206:16:327",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    },
                                    "value": "!Transfer-Role"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    }
                                  ],
                                  "id": 75118,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "13199:6:327",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 75120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13199:24:327",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 75121,
                              "nodeType": "ExpressionStatement",
                              "src": "13199:24:327"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              14462
            ],
            "documentation": {
              "id": 75064,
              "nodeType": "StructuredDocumentation",
              "src": "12633:43:327",
              "text": "@dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "12690:21:327",
            "overrides": {
              "id": 75074,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12833:8:327"
            },
            "parameters": {
              "id": 75073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75066,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12729:4:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 75127,
                  "src": "12721:12:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75065,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12721:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75068,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12751:2:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 75127,
                  "src": "12743:10:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12743:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75070,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "12771:12:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 75127,
                  "src": "12763:20:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12763:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75072,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "12801:8:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 75127,
                  "src": "12793:16:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12793:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12711:104:327"
            },
            "returnParameters": {
              "id": 75075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12842:0:327"
            },
            "scope": 75279,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 75147,
            "nodeType": "FunctionDefinition",
            "src": "13305:174:327",
            "nodes": [],
            "body": {
              "id": 75146,
              "nodeType": "Block",
              "src": "13419:60:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75142,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75130,
                        "src": "13453:8:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75143,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75132,
                        "src": "13463:8:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 75139,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "13429:5:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC721_$75279_$",
                          "typeString": "type(contract super DropERC721)"
                        }
                      },
                      "id": 75141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13596,
                      "src": "13429:23:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 75144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13429:43:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75145,
                  "nodeType": "ExpressionStatement",
                  "src": "13429:43:327"
                }
              ]
            },
            "baseFunctions": [
              13596
            ],
            "documentation": {
              "id": 75128,
              "nodeType": "StructuredDocumentation",
              "src": "13260:40:327",
              "text": "@dev See {ERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 75136,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75130,
                    "src": "13409:8:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 75137,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 75135,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21796,
                  "src": "13381:27:327"
                },
                "nodeType": "ModifierInvocation",
                "src": "13381:37:327"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "13314:17:327",
            "overrides": {
              "id": 75134,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13372:8:327"
            },
            "parameters": {
              "id": 75133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75130,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13340:8:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 75147,
                  "src": "13332:16:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13332:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75132,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "13355:8:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 75147,
                  "src": "13350:13:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 75131,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13350:4:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13331:33:327"
            },
            "returnParameters": {
              "id": 75138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13419:0:327"
            },
            "scope": 75279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75167,
            "nodeType": "FunctionDefinition",
            "src": "13520:155:327",
            "nodes": [],
            "body": {
              "id": 75166,
              "nodeType": "Block",
              "src": "13626:49:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75162,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75150,
                        "src": "13650:8:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75163,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75152,
                        "src": "13660:7:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 75159,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "13636:5:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC721_$75279_$",
                          "typeString": "type(contract super DropERC721)"
                        }
                      },
                      "id": 75161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13540,
                      "src": "13636:13:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 75164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13636:32:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75165,
                  "nodeType": "ExpressionStatement",
                  "src": "13636:32:327"
                }
              ]
            },
            "baseFunctions": [
              13540
            ],
            "documentation": {
              "id": 75148,
              "nodeType": "StructuredDocumentation",
              "src": "13485:30:327",
              "text": "@dev See {ERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 75156,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75150,
                    "src": "13616:8:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 75157,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 75155,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21796,
                  "src": "13588:27:327"
                },
                "nodeType": "ModifierInvocation",
                "src": "13588:37:327"
              }
            ],
            "name": "approve",
            "nameLocation": "13529:7:327",
            "overrides": {
              "id": 75154,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13579:8:327"
            },
            "parameters": {
              "id": 75153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75150,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13545:8:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 75167,
                  "src": "13537:16:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13537:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75152,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13563:7:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 75167,
                  "src": "13555:15:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13555:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13536:35:327"
            },
            "returnParameters": {
              "id": 75158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13626:0:327"
            },
            "scope": 75279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75191,
            "nodeType": "FunctionDefinition",
            "src": "13722:211:327",
            "nodes": [],
            "body": {
              "id": 75190,
              "nodeType": "Block",
              "src": "13879:54:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75185,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75170,
                        "src": "13908:4:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75186,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75172,
                        "src": "13914:2:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75187,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75174,
                        "src": "13918:7:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 75182,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "13889:5:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC721_$75279_$",
                          "typeString": "type(contract super DropERC721)"
                        }
                      },
                      "id": 75184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13632,
                      "src": "13889:18:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 75188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13889:37:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75189,
                  "nodeType": "ExpressionStatement",
                  "src": "13889:37:327"
                }
              ]
            },
            "baseFunctions": [
              13632
            ],
            "documentation": {
              "id": 75168,
              "nodeType": "StructuredDocumentation",
              "src": "13681:36:327",
              "text": "@dev See {ERC721-_transferFrom}."
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 75179,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75170,
                    "src": "13873:4:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 75180,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 75178,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21762,
                  "src": "13853:19:327"
                },
                "nodeType": "ModifierInvocation",
                "src": "13853:25:327"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "13731:12:327",
            "overrides": {
              "id": 75177,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 75176,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14481,
                  "src": "13833:18:327"
                }
              ],
              "src": "13824:28:327"
            },
            "parameters": {
              "id": 75175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75170,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13761:4:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 75191,
                  "src": "13753:12:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13753:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75172,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13783:2:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 75191,
                  "src": "13775:10:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13775:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75174,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13803:7:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 75191,
                  "src": "13795:15:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13795:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13743:73:327"
            },
            "returnParameters": {
              "id": 75181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13879:0:327"
            },
            "scope": 75279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75215,
            "nodeType": "FunctionDefinition",
            "src": "13984:219:327",
            "nodes": [],
            "body": {
              "id": 75214,
              "nodeType": "Block",
              "src": "14145:58:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75209,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75194,
                        "src": "14178:4:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75210,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75196,
                        "src": "14184:2:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75211,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75198,
                        "src": "14188:7:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 75206,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "14155:5:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC721_$75279_$",
                          "typeString": "type(contract super DropERC721)"
                        }
                      },
                      "id": 75208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13651,
                      "src": "14155:22:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 75212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14155:41:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75213,
                  "nodeType": "ExpressionStatement",
                  "src": "14155:41:327"
                }
              ]
            },
            "baseFunctions": [
              13651
            ],
            "documentation": {
              "id": 75192,
              "nodeType": "StructuredDocumentation",
              "src": "13939:40:327",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 75203,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75194,
                    "src": "14139:4:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 75204,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 75202,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21762,
                  "src": "14119:19:327"
                },
                "nodeType": "ModifierInvocation",
                "src": "14119:25:327"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "13993:16:327",
            "overrides": {
              "id": 75201,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 75200,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14481,
                  "src": "14099:18:327"
                }
              ],
              "src": "14090:28:327"
            },
            "parameters": {
              "id": 75199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75194,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14027:4:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 75215,
                  "src": "14019:12:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14019:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75196,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14049:2:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 75215,
                  "src": "14041:10:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14041:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75198,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14069:7:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 75215,
                  "src": "14061:15:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14061:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14009:73:327"
            },
            "returnParameters": {
              "id": 75205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14145:0:327"
            },
            "scope": 75279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75242,
            "nodeType": "FunctionDefinition",
            "src": "14254:252:327",
            "nodes": [],
            "body": {
              "id": 75241,
              "nodeType": "Block",
              "src": "14442:64:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75235,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75218,
                        "src": "14475:4:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75236,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75220,
                        "src": "14481:2:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75237,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75222,
                        "src": "14485:7:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 75238,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75224,
                        "src": "14494:4:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 75232,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "14452:5:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC721_$75279_$",
                          "typeString": "type(contract super DropERC721)"
                        }
                      },
                      "id": 75234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13687,
                      "src": "14452:22:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 75239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14452:47:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75240,
                  "nodeType": "ExpressionStatement",
                  "src": "14452:47:327"
                }
              ]
            },
            "baseFunctions": [
              13687
            ],
            "documentation": {
              "id": 75216,
              "nodeType": "StructuredDocumentation",
              "src": "14209:40:327",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 75229,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75218,
                    "src": "14436:4:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 75230,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 75228,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21762,
                  "src": "14416:19:327"
                },
                "nodeType": "ModifierInvocation",
                "src": "14416:25:327"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "14263:16:327",
            "overrides": {
              "id": 75227,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 75226,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14481,
                  "src": "14396:18:327"
                }
              ],
              "src": "14387:28:327"
            },
            "parameters": {
              "id": 75225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75218,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14297:4:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 75242,
                  "src": "14289:12:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14289:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75220,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14319:2:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 75242,
                  "src": "14311:10:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14311:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75222,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14339:7:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 75242,
                  "src": "14331:15:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14331:7:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75224,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "14369:4:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 75242,
                  "src": "14356:17:327",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 75223,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14356:5:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14279:100:327"
            },
            "returnParameters": {
              "id": 75231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14442:0:327"
            },
            "scope": 75279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75252,
            "nodeType": "FunctionDefinition",
            "src": "14512:111:327",
            "nodes": [],
            "body": {
              "id": 75251,
              "nodeType": "Block",
              "src": "14587:36:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 75248,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        75265
                      ],
                      "referencedDeclaration": 75265,
                      "src": "14604:10:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 75249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14604:12:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 75247,
                  "id": 75250,
                  "nodeType": "Return",
                  "src": "14597:19:327"
                }
              ]
            },
            "baseFunctions": [
              19085
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "14521:14:327",
            "overrides": {
              "id": 75244,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "14560:8:327"
            },
            "parameters": {
              "id": 75243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14535:2:327"
            },
            "returnParameters": {
              "id": 75247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75246,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75252,
                  "src": "14578:7:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75245,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14578:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14577:9:327"
            },
            "scope": 75279,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 75265,
            "nodeType": "FunctionDefinition",
            "src": "14629:231:327",
            "nodes": [],
            "body": {
              "id": 75264,
              "nodeType": "Block",
              "src": "14798:62:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75260,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46243,
                        "src": "14815:25:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46243_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 75261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46211,
                      "src": "14815:36:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 75262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14815:38:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 75259,
                  "id": 75263,
                  "nodeType": "Return",
                  "src": "14808:45:327"
                }
              ]
            },
            "baseFunctions": [
              46211,
              157269
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "14638:10:327",
            "overrides": {
              "id": 75256,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 75254,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157284,
                  "src": "14714:18:327"
                },
                {
                  "id": 75255,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46243,
                  "src": "14734:25:327"
                }
              ],
              "src": "14705:55:327"
            },
            "parameters": {
              "id": 75253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14648:2:327"
            },
            "returnParameters": {
              "id": 75259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75258,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "14786:6:327",
                  "nodeType": "VariableDeclaration",
                  "scope": 75265,
                  "src": "14778:14:327",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14778:7:327",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14777:16:327"
            },
            "scope": 75279,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 75278,
            "nodeType": "FunctionDefinition",
            "src": "14866:227:327",
            "nodes": [],
            "body": {
              "id": 75277,
              "nodeType": "Block",
              "src": "15033:60:327",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75273,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46243,
                        "src": "15050:25:327",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46243_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 75274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46238,
                      "src": "15050:34:327",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 75275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15050:36:327",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 75272,
                  "id": 75276,
                  "nodeType": "Return",
                  "src": "15043:43:327"
                }
              ]
            },
            "baseFunctions": [
              46238,
              157278
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "14875:8:327",
            "overrides": {
              "id": 75269,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 75267,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157284,
                  "src": "14949:18:327"
                },
                {
                  "id": 75268,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46243,
                  "src": "14969:25:327"
                }
              ],
              "src": "14940:55:327"
            },
            "parameters": {
              "id": 75266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14883:2:327"
            },
            "returnParameters": {
              "id": 75272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75271,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75278,
                  "src": "15013:14:327",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 75270,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15013:5:327",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15012:16:327"
            },
            "scope": 75279,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 74357,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 151439,
              "src": "1778:13:327"
            },
            "id": 74358,
            "nodeType": "InheritanceSpecifier",
            "src": "1778:13:327"
          },
          {
            "baseName": {
              "id": 74359,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18264,
              "src": "1797:16:327"
            },
            "id": 74360,
            "nodeType": "InheritanceSpecifier",
            "src": "1797:16:327"
          },
          {
            "baseName": {
              "id": 74361,
              "name": "PlatformFee",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22797,
              "src": "1819:11:327"
            },
            "id": 74362,
            "nodeType": "InheritanceSpecifier",
            "src": "1819:11:327"
          },
          {
            "baseName": {
              "id": 74363,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23187,
              "src": "1836:7:327"
            },
            "id": 74364,
            "nodeType": "InheritanceSpecifier",
            "src": "1836:7:327"
          },
          {
            "baseName": {
              "id": 74365,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22859,
              "src": "1849:11:327"
            },
            "id": 74366,
            "nodeType": "InheritanceSpecifier",
            "src": "1849:11:327"
          },
          {
            "baseName": {
              "id": 74367,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21941,
              "src": "1866:7:327"
            },
            "id": 74368,
            "nodeType": "InheritanceSpecifier",
            "src": "1866:7:327"
          },
          {
            "baseName": {
              "id": 74369,
              "name": "DelayedReveal",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18503,
              "src": "1879:13:327"
            },
            "id": 74370,
            "nodeType": "InheritanceSpecifier",
            "src": "1879:13:327"
          },
          {
            "baseName": {
              "id": 74371,
              "name": "LazyMint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21079,
              "src": "1898:8:327"
            },
            "id": 74372,
            "nodeType": "InheritanceSpecifier",
            "src": "1898:8:327"
          },
          {
            "baseName": {
              "id": 74373,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22587,
              "src": "1912:21:327"
            },
            "id": 74374,
            "nodeType": "InheritanceSpecifier",
            "src": "1912:21:327"
          },
          {
            "baseName": {
              "id": 74375,
              "name": "Drop",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19150,
              "src": "1939:4:327"
            },
            "id": 74376,
            "nodeType": "InheritanceSpecifier",
            "src": "1939:4:327"
          },
          {
            "baseName": {
              "id": 74377,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46243,
              "src": "1949:25:327"
            },
            "id": 74378,
            "nodeType": "InheritanceSpecifier",
            "src": "1949:25:327"
          },
          {
            "baseName": {
              "id": 74379,
              "name": "MulticallUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 157467,
              "src": "1980:20:327"
            },
            "id": 74380,
            "nodeType": "InheritanceSpecifier",
            "src": "1980:20:327"
          },
          {
            "baseName": {
              "id": 74381,
              "name": "DefaultOperatorFiltererUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18344,
              "src": "2006:34:327"
            },
            "id": 74382,
            "nodeType": "InheritanceSpecifier",
            "src": "2006:34:327"
          },
          {
            "baseName": {
              "id": 74383,
              "name": "ERC721AUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14481,
              "src": "2046:18:327"
            },
            "id": 74384,
            "nodeType": "InheritanceSpecifier",
            "src": "2046:18:327"
          }
        ],
        "canonicalName": "DropERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          75279,
          14481,
          104038,
          156718,
          156302,
          158489,
          158501,
          18344,
          21859,
          21535,
          33936,
          157467,
          46243,
          157284,
          19150,
          33356,
          33091,
          33068,
          22587,
          22288,
          34057,
          34032,
          21079,
          18037,
          33595,
          18503,
          33251,
          21941,
          33959,
          22859,
          34121,
          23187,
          34185,
          14831,
          14687,
          22797,
          34100,
          18264,
          151439,
          33220
        ],
        "name": "DropERC721",
        "nameLocation": "1760:10:327",
        "scope": 75280,
        "usedErrors": [
          21699,
          103979,
          103982,
          103985,
          103988,
          103991,
          103994,
          103997,
          104000,
          104003,
          104006,
          104009,
          104012,
          104015
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 327
}