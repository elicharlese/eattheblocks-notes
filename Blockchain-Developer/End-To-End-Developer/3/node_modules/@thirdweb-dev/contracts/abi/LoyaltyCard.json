{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_toTokenId",
          "type": "uint256"
        }
      ],
      "name": "BatchMetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "MetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "restriction",
          "type": "bool"
        }
      ],
      "name": "OperatorRestriction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdMinted",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "TokensMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdMinted",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "mintRequest",
          "type": "tuple"
        }
      ],
      "name": "TokensMintedWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFlatPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeType",
      "outputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_platformFeeBps",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenIdMinted",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "mintWithSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorRestriction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_flatFee",
          "type": "uint256"
        }
      ],
      "name": "setFlatPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_restriction",
          "type": "bool"
        }
      ],
      "name": "setOperatorRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "_feeType",
          "type": "uint8"
        }
      ],
      "name": "setPlatformFeeType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_subscription",
          "type": "address"
        }
      ],
      "name": "subscribeToRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600b54610100900460ff1615808015620000335750600b54600160ff909116105b8062000063575062000050306200013d60201b62001cbf1760201c565b158015620000635750600b5460ff166001145b620000cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600b805460ff191660011790558015620000ef57600b805461ff0019166101001790555b80156200013657600b805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b506200014c565b6001600160a01b03163b151590565b6151b7806200015c6000396000f3fe6080604052600436106102745760003560e01c80636352211e1161014b5780636352211e1461063c5780636f4f28371461065c57806370a082311461067c5780637e54523c1461069c5780638da5cb5b146106bc5780639010d07c146106da57806391d14854146106fa578063938e3d7b1461071a57806395d89b411461073a5780639bcf7a151461074f578063a217fddf1461076f578063a22cb46514610784578063a2309ff814610517578063a32fa5b3146107a4578063ac9650d8146107c4578063b24f2d39146107f1578063b6f10c791461081c578063b88d4fde1461083c578063c87b56dd1461085c578063ca15c8731461087c578063d45573f61461089c578063d547741f146108b1578063e1591634146108d1578063e57553da146108f1578063e8a3d48514610906578063e985e9c51461091b578063f28083c31461096557600080fd5b806275a3171461027957806301ffc9a7146102ac57806306fdde03146102dc578063079fe40e146102fe578063081812fc14610320578063095ea7b31461034057806313af403514610362578063162094c41461038257806318160ddd146103a25780631e7ac488146103bd57806320c5429b146103dd57806323b872dd146103fd578063248a9ca31461041d578063252e82e81461044a5780632a55205a146104895780632f2ff15d146104b757806332f0cd64146104d757806336568abe146104f75780633b1475a71461051757806340e58ee51461052d57806342842e0e1461054d578063439c7be51461056d5780634cc157df14610580578063504c6e01146105c2578063572b6c05146105dc57806357fd8455146105fc578063600dd5ea1461061c575b600080fd5b34801561028557600080fd5b5061029961029436600461442a565b610985565b6040519081526020015b60405180910390f35b3480156102b857600080fd5b506102cc6102c7366004614492565b6109f9565b60405190151581526020016102a3565b3480156102e857600080fd5b506102f1610a25565b6040516102a39190614507565b34801561030a57600080fd5b50610313610ab8565b6040516102a39190614527565b34801561032c57600080fd5b5061031361033b36600461453b565b610ac7565b34801561034c57600080fd5b5061036061035b366004614554565b610b0c565b005b34801561036e57600080fd5b5061036061037d36600461457e565b610bd9565b34801561038e57600080fd5b5061036061039d366004614656565b610c09565b3480156103ae57600080fd5b5061010c5461010b5403610299565b3480156103c957600080fd5b506103606103d8366004614554565b610c6b565b3480156103e957600080fd5b506103606103f836600461453b565b610c99565b34801561040957600080fd5b5061036061041836600461469c565b610cbb565b34801561042957600080fd5b5061029961043836600461453b565b60009081526009602052604090205490565b34801561045657600080fd5b5061046a6104653660046146d8565b610da2565b6040805192151583526001600160a01b039091166020830152016102a3565b34801561049557600080fd5b506104a96104a436600461473c565b610de6565b6040516102a392919061475e565b3480156104c357600080fd5b506103606104d2366004614777565b610e23565b3480156104e357600080fd5b506103606104f23660046147b1565b610eb9565b34801561050357600080fd5b50610360610512366004614777565b610f2a565b34801561052357600080fd5b5061010b54610299565b34801561053957600080fd5b5061036061054836600461453b565b610f89565b34801561055957600080fd5b5061036061056836600461469c565b610f94565b61031361057b3660046146d8565b611070565b34801561058c57600080fd5b506105a061059b36600461453b565b61124b565b604080516001600160a01b03909316835261ffff9091166020830152016102a3565b3480156105ce57600080fd5b50603e546102cc9060ff1681565b3480156105e857600080fd5b506102cc6105f736600461457e565b6112b6565b34801561060857600080fd5b5061036061061736600461457e565b6112d4565b34801561062857600080fd5b50610360610637366004614554565b611344565b34801561064857600080fd5b5061031361065736600461453b565b611372565b34801561066857600080fd5b5061036061067736600461457e565b611384565b34801561068857600080fd5b5061029961069736600461457e565b6113b1565b3480156106a857600080fd5b506103606106b7366004614554565b611400565b3480156106c857600080fd5b506001546001600160a01b0316610313565b3480156106e657600080fd5b506103136106f536600461473c565b61142e565b34801561070657600080fd5b506102cc610715366004614777565b61151d565b34801561072657600080fd5b506103606107353660046147ce565b611548565b34801561074657600080fd5b506102f1611575565b34801561075b57600080fd5b5061036061076a366004614802565b611585565b34801561077b57600080fd5b50610299600081565b34801561079057600080fd5b5061036061079f366004614827565b6115b4565b3480156107b057600080fd5b506102cc6107bf366004614777565b611673565b3480156107d057600080fd5b506107e46107df36600461485e565b6116c9565b6040516102a391906148d2565b3480156107fd57600080fd5b506002546001600160a01b03811690600160a01b900461ffff166105a0565b34801561082857600080fd5b50610360610837366004614934565b6117bd565b34801561084857600080fd5b50610360610857366004614955565b61183e565b34801561086857600080fd5b506102f161087736600461453b565b611928565b34801561088857600080fd5b5061029961089736600461453b565b611933565b3480156108a857600080fd5b506105a06119bc565b3480156108bd57600080fd5b506103606108cc366004614777565b6119d9565b3480156108dd57600080fd5b506103606108ec366004614a62565b6119f2565b3480156108fd57600080fd5b506104a9611c1d565b34801561091257600080fd5b506102f1611c31565b34801561092757600080fd5b506102cc610936366004614b74565b6001600160a01b0391821660009081526101126020908152604080832093909416825291909152205460ff1690565b34801561097157600080fd5b5060075460ff166040516102a39190614bb4565b60006000805160206151428339815191526109a08133611cce565b6109ab858585611d4e565b915081856001600160a01b03167f9d89e36eadf856db0ad9ffb5a569e07f95634dddd9501141ecf04820484ad0dc86866040516109e9929190614c05565b60405180910390a3509392505050565b6000610a0482611da8565b80610a1f575063152a902d60e11b6001600160e01b03198316145b92915050565b606061010d8054610a3590614c19565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6190614c19565b8015610aae5780601f10610a8357610100808354040283529160200191610aae565b820191906000526020600020905b815481529060010190602001808311610a9157829003601f168201915b5050505050905090565b6004546001600160a01b031690565b6000610ad282611df8565b610aef576040516333d1c03960e21b815260040160405180910390fd5b50600090815261011160205260409020546001600160a01b031690565b603e54829060ff1615610bca576daaeb6d7670e522a718067333cd4e3b15610bca57604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c617113490610b619030908590600401614c4e565b602060405180830381865afa158015610b7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba29190614c68565b610bca5780604051633b79c77360e21b8152600401610bc19190614527565b60405180910390fd5b610bd48383611e26565b505050565b610be1611eba565b610bfd5760405162461bcd60e51b8152600401610bc190614c85565b610c0681611ecd565b50565b610c11611f1f565b610c5d5760405162461bcd60e51b815260206004820152601e60248201527f4e6f7420617574686f72697a656420746f20736574206d6574616461746100006044820152606401610bc1565b610c678282611f3b565b5050565b610c73611eba565b610c8f5760405162461bcd60e51b8152600401610bc190614c85565b610c678282611fe3565b6000805160206150db833981519152610cb28133611cce565b610c6782612071565b603e54839060ff1615610d91576daaeb6d7670e522a718067333cd4e3b15610d91576001600160a01b038116331415610cfe57610cf984848461207c565b610d9c565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c617113490610d319030903390600401614c4e565b602060405180830381865afa158015610d4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d729190614c68565b610d915733604051633b79c77360e21b8152600401610bc19190614527565b610d9c84848461207c565b50505050565b600080610db0858585612087565b610140860135600090815260d8602052604090205490915060ff16158015610ddc5750610ddc816120eb565b9150935093915050565b600080600080610df58661124b565b90945084925061ffff169050612710610e0e8287614cc3565b610e189190614ce2565b925050509250929050565b600082815260096020526040902054610e3c9033611cce565b60008281526008602090815260408083206001600160a01b038516845290915290205460ff1615610eaf5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610bc1565b610c678282612105565b610ec1611eba565b610f215760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420617574686f72697a656420746f20736574206f70657261746f72207260448201526a32b9ba3934b1ba34b7b71760a91b6064820152608401610bc1565b610c0681612119565b336001600160a01b03821614610f7f5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610bc1565b610c67828261215a565b610c068160016121b1565b603e54839060ff1615611065576daaeb6d7670e522a718067333cd4e3b15611065576001600160a01b038116331415610fd257610cf9848484612395565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c6171134906110059030903390600401614c4e565b602060405180830381865afa158015611022573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110469190614c68565b6110655733604051633b79c77360e21b8152600401610bc19190614527565b610d9c848484612395565b60006002600c5414156110c55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bc1565b6002600c55600160a0850135146111375760405162461bcd60e51b815260206004820152603060248201527f4c6f79616c7479436172643a206f6e6c792031204e46542063616e206265206d60448201526f34b73a32b21030ba1030903a34b6b29760811b6064820152608401610bc1565b6111428484846123b0565b90506000611153602086018661457e565b9050600061116d826111686080890189614d04565b611d4e565b90506000611181604088016020890161457e565b6001600160a01b03161415801561119b5750604086013515155b156111be576111be816111b46040890160208a0161457e565b8860400135612539565b6111f16111d1608088016060890161457e565b60a08801356111e76101008a0160e08b0161457e565b8960c001356125e0565b80826001600160a01b0316846001600160a01b03167fee0cf9c3e87795b1932d13f80f892f620f567b4465e768ced5d64aa44ca1d64c896040516112359190614d8f565b60405180910390a450506001600c559392505050565b6000818152600360209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561129257805160208201516112ac565b6002546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6001600160a01b031660009081526071602052604090205460ff1690565b6112dc611eba565b6113395760405162461bcd60e51b815260206004820152602860248201527f4e6f7420617574686f72697a656420746f2073756273637269626520746f207260448201526732b3b4b9ba393c9760c11b6064820152608401610bc1565b610c068160016127b1565b61134c611eba565b6113685760405162461bcd60e51b8152600401610bc190614c85565b610c6782826128a9565b600061137d82612926565b5192915050565b61138c611eba565b6113a85760405162461bcd60e51b8152600401610bc190614c85565b610c0681612a43565b60006001600160a01b0382166113da576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b0316600090815261011060205260409020546001600160401b031690565b611408611eba565b6114245760405162461bcd60e51b8152600401610bc190614c85565b610c678282612a8d565b6000828152600a602052604081205481805b82811015611514576000868152600a602090815260408083208484526001019091529020546001600160a01b0316156114bd57848214156114ab576000868152600a602090815260408083209383526001909301905220546001600160a01b03169250610a1f915050565b6114b6600183614e9d565b9150611502565b6114c886600061151d565b80156114ef57506000868152600a6020908152604080832083805260020190915290205481145b15611502576114ff600183614e9d565b91505b61150d600182614e9d565b9050611440565b50505092915050565b60009182526008602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611550611eba565b61156c5760405162461bcd60e51b8152600401610bc190614c85565b610c0681612adf565b606061010e8054610a3590614c19565b61158d611eba565b6115a95760405162461bcd60e51b8152600401610bc190614c85565b610bd4838383612539565b603e54829060ff1615611669576daaeb6d7670e522a718067333cd4e3b1561166957604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c6171134906116099030908590600401614c4e565b602060405180830381865afa158015611626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164a9190614c68565b6116695780604051633b79c77360e21b8152600401610bc19190614527565b610bd48383612bb4565b600082815260086020908152604080832083805290915281205460ff166116c0575060008281526008602090815260408083206001600160a01b038516845290915290205460ff16610a1f565b50600192915050565b6060816001600160401b038111156116e3576116e3614599565b60405190808252806020026020018201604052801561171657816020015b60608152602001906001900390816117015790505b50905060005b828110156117b6576117863085858481811061173a5761173a614eb5565b905060200281019061174c9190614d04565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612c8892505050565b82828151811061179857611798614eb5565b602002602001018190525080806117ae90614ecb565b91505061171c565b5092915050565b6117c5611eba565b6117e15760405162461bcd60e51b8152600401610bc190614c85565b6007805482919060ff1916600183818111156117ff576117ff614b9e565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c1816040516118339190614bb4565b60405180910390a150565b603e54849060ff1615611915576daaeb6d7670e522a718067333cd4e3b15611915576001600160a01b0381163314156118825761187d85858585612cad565b611921565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c6171134906118b59030903390600401614c4e565b602060405180830381865afa1580156118d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f69190614c68565b6119155733604051633b79c77360e21b8152600401610bc19190614527565b61192185858585612cad565b5050505050565b6060610a1f82612cf8565b6000818152600a6020526040812054815b81811015611997576000848152600a602090815260408083208484526001019091529020546001600160a01b03161561198557611982600184614e9d565b92505b611990600182614e9d565b9050611944565b506119a383600061151d565b156119b6576119b3600183614e9d565b91505b50919050565b6005546001600160a01b03811691600160a01b90910461ffff1690565b600082815260096020526040902054610f7f9033611cce565b600b54610100900460ff1615808015611a125750600b54600160ff909116105b80611a335750611a2130611cbf565b158015611a335750600b5460ff166001145b611a965760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610bc1565b600b805460ff191660011790558015611ab957600b805461ff0019166101001790555b611ac287612d9a565b611acc8a8a612dd2565b611ad4612e03565b611adc612e24565b611ae4612e99565b611aed88612adf565b611af68b611ecd565b611b006001612119565b611b0b60008c612105565b611b236000805160206151428339815191528c612105565b611b3b6000805160206150bb8339815191528c612105565b611b536000805160206150fb8339815191528c612105565b611b6b6000805160206150fb83398151915280612ec8565b611b836000805160206150db8339815191528c612105565b611b9b6000805160206150db83398151915280612ec8565b611bae82846001600160801b0316611fe3565b611bc185856001600160801b03166128a9565b611bca86612a43565b8015611c1057600b805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b6005546006546001600160a01b0390911691565b60008054611c3e90614c19565b80601f0160208091040260200160405190810160405280929190818152602001828054611c6a90614c19565b8015611cb75780601f10611c8c57610100808354040283529160200191611cb7565b820191906000526020600020905b815481529060010190602001808311611c9a57829003601f168201915b505050505081565b6001600160a01b03163b151590565b60008281526008602090815260408083206001600160a01b038516845290915290205460ff16610c6757611d0c816001600160a01b03166014612f10565b611d17836020612f10565b604051602001611d28929190614ee6565b60408051601f198184030181529082905262461bcd60e51b8252610bc191600401614507565b600061010b549050611d968184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611f3b92505050565b611da18460016130ab565b9392505050565b60006001600160e01b031982166380ac58cd60e01b1480611dd957506001600160e01b03198216635b5e139f60e01b145b80610a1f57506301ffc9a760e01b6001600160e01b0319831614610a1f565b600061010b5482108015610a1f575050600090815261010f6020526040902054600160e01b900460ff161590565b6000611e3182611372565b9050806001600160a01b0316836001600160a01b03161415611e665760405163250fdee360e21b815260040160405180910390fd5b806001600160a01b0316611e786130c5565b6001600160a01b031614611eaf57611e92816109366130c5565b611eaf576040516367d9dca160e11b815260040160405180910390fd5b610bd48383836130cf565b6000611ec8816107156130c5565b905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6000611ec86000805160206150fb8339815191526107156130c5565b6000815111611f8b5760405162461bcd60e51b815260206004820152601c60248201527b27232a26b2ba30b230ba309d1032b6b83a3c9036b2ba30b230ba309760211b6044820152606401610bc1565b600082815260a3602090815260409091208251611faa92840190614334565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7906020015b60405180910390a15050565b6127108111156120055760405162461bcd60e51b8152600401610bc190614f53565b600580546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b610c068160006121b1565b610bd483838361312c565b60006120e383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506120dd92506120d19150889050613336565b8051906020012061347d565b906134cb565b949350505050565b6000610a1f6000805160206151428339815191528361151d565b61210f82826134ef565b610c67828261354a565b603e805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba7809690602001611833565b61216482826135b7565b6000828152600a602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b60006121bc83612926565b80519091508215612244576000816001600160a01b03166121db6130c5565b6001600160a01b031614806121f757506121f7826109366130c5565b8061222257506122056130c5565b6001600160a01b031661221786610ac7565b6001600160a01b0316145b90508061224257604051632ce44b5f60e11b815260040160405180910390fd5b505b612252816000866001613619565b61225e600085836130cf565b6001600160a01b038082166000818152610110602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b865261010f909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b17855591890180845292208054919490911661235b5761010b54821461235b57805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020615162833981519152908390a4505061010c805460010190555050565b610bd48383836040518060200160405280600081525061183e565b6000806123be858585610da2565b92509050806123fd5760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642072657160a81b6044820152606401610bc1565b4261241061012087016101008801614f7c565b6001600160801b0316118061243e575061243261014086016101208701614f7c565b6001600160801b031642115b156124795760405162461bcd60e51b815260206004820152600b60248201526a14995c48195e1c1a5c995960aa1b6044820152606401610bc1565b6000612488602087018761457e565b6001600160a01b031614156124d55760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b6044820152606401610bc1565b60008560a00135116125115760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b6044820152606401610bc1565b5061014090930135600090815260d860205260409020805460ff191660011790555090919050565b61271081111561255b5760405162461bcd60e51b8152600401610bc190614f53565b6040805180820182526001600160a01b038481168083526020808401868152600089815260038352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b8061261c573415610cf95760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610bc1565b60006126288285614cc3565b905060006001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561265a575034811461265e565b5034155b8061269f5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672076616c756560781b6044820152606401610bc1565b60006001600160a01b038716156126b657866126be565b6126be610ab8565b905060008060006126d160075460ff1690565b905060018160018111156126e7576126e7614b9e565b14156126fe576126f5611c1d565b9350915061272c565b60006127086119bc565b909350905061271061271e61ffff831689614cc3565b6127289190614ce2565b9350505b828610156127765760405162461bcd60e51b8152602060048201526017602482015276466565732067726561746572207468616e20707269636560481b6044820152606401610bc1565b612789886127826130c5565b84866136d8565b6127a5886127956130c5565b866127a0878b614f97565b6136d8565b50505050505050505050565b6daaeb6d7670e522a718067333cd4e3b15610c67576001600160a01b0382163b1561287857801561284557604051633e9f1edf60e11b81526daaeb6d7670e522a718067333cd4e90637d3e3dbe9061280f9030908690600401614c4e565b600060405180830381600087803b15801561282957600080fd5b505af115801561283d573d6000803e3d6000fd5b505050505050565b60405163a0af290360e01b81526daaeb6d7670e522a718067333cd4e9063a0af29039061280f9030908690600401614c4e565b604051632210724360e11b81526daaeb6d7670e522a718067333cd4e90634420e4869061280f903090600401614527565b6127108111156128cb5760405162461bcd60e51b8152600401610bc190614f53565b600280546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb90602001612065565b60408051606081018252600080825260208201819052918101919091528161010b54811015612a2a57600081815261010f6020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff16151591810182905290612a285780516001600160a01b0316156129be579392505050565b5060001901600081815261010f6020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215612a23579392505050565b6129be565b505b604051636f96cda160e11b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6006819055600580546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb6390611fd7908490849061475e565b6000808054612aed90614c19565b80601f0160208091040260200160405190810160405280929190818152602001828054612b1990614c19565b8015612b665780601f10612b3b57610100808354040283529160200191612b66565b820191906000526020600020905b815481529060010190602001808311612b4957829003601f168201915b50508551939450612b8293600093506020870192509050614334565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611fd7929190614fae565b612bbc6130c5565b6001600160a01b0316826001600160a01b03161415612bee5760405163b06307db60e01b815260040160405180910390fd5b806101126000612bfc6130c5565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155612c406130c5565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051612c7c911515815260200190565b60405180910390a35050565b6060611da1838360405180606001604052806027815260200161511b6027913961371d565b612cb884848461312c565b612cca836001600160a01b0316611cbf565b15610d9c57612cdb848484846137f8565b610d9c576040516368d2bf6b60e11b815260040160405180910390fd5b600081815260a360205260409020805460609190612d1590614c19565b80601f0160208091040260200160405190810160405280929190818152602001828054612d4190614c19565b8015612d8e5780601f10612d6357610100808354040283529160200191612d8e565b820191906000526020600020905b815481529060010190602001808311612d7157829003601f168201915b50505050509050919050565b600b54610100900460ff16612dc15760405162461bcd60e51b8152600401610bc190614fdc565b612dc96138e6565b610c068161390d565b600b54610100900460ff16612df95760405162461bcd60e51b8152600401610bc190614fdc565b610c67828261399c565b612e22733cc6cdda760b79bafa08df41ecfa224f810dceb660016139f7565b565b600b54610100900460ff16612e4b5760405162461bcd60e51b8152600401610bc190614fdc565b612e22604051806040016040528060138152602001725369676e61747572654d696e7445524337323160681b815250604051806040016040528060018152602001603160f81b815250613a01565b600b54610100900460ff16612ec05760405162461bcd60e51b8152600401610bc190614fdc565b612e22613a32565b600082815260096020526040808220805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b60606000612f1f836002614cc3565b612f2a906002614e9d565b6001600160401b03811115612f4157612f41614599565b6040519080825280601f01601f191660200182016040528015612f6b576020820181803683370190505b509050600360fc1b81600081518110612f8657612f86614eb5565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612fb557612fb5614eb5565b60200101906001600160f81b031916908160001a9053506000612fd9846002614cc3565b612fe4906001614e9d565b90505b600181111561305c576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061301857613018614eb5565b1a60f81b82828151811061302e5761302e614eb5565b60200101906001600160f81b031916908160001a90535060049490941c9361305581615027565b9050612fe7565b508315611da15760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610bc1565b610c67828260405180602001604052806000815250613a60565b6000611ec8613c0a565b6000828152610111602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061313782612926565b9050836001600160a01b031681600001516001600160a01b03161461316e5760405162a1148160e81b815260040160405180910390fd5b6000846001600160a01b03166131826130c5565b6001600160a01b0316148061319e575061319e856109366130c5565b806131c957506131ac6130c5565b6001600160a01b03166131be84610ac7565b6001600160a01b0316145b9050806131e957604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03841661321057604051633a954ecd60e21b815260040160405180910390fd5b61321d8585856001613619565b613229600084876130cf565b6001600160a01b0385811660009081526101106020908152604080832080546001600160401b03198082166001600160401b039283166000190183161790925589861680865283862080549384169383166001908101841694909417905589865261010f90945282852080546001600160e01b031916909417600160a01b429092169190910217835587018084529220805491939091166132ff5761010b5482146132ff57805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b031660008051602061516283398151915260405160405180910390a4611921565b60607fef2a0374db4a48b74209fd1a525c32d62e54c4185cbabd807193b07a40081d44613366602084018461457e565b613376604085016020860161457e565b604085013561338b608087016060880161457e565b6133986080880188614d04565b6040516133a692919061503e565b60405190819003902060a088013560c08901356133ca6101008b0160e08c0161457e565b6133dc6101208c016101008d01614f7c565b6133ee6101408d016101208e01614f7c565b60408051602081019c909c526001600160a01b039a8b16908c015297891660608b015260808a019690965293871660a089015260c088019290925260e08701526101008601529092166101208401526001600160801b039182166101408085019190915291166101608301528301356101808201526101a0016040516020818303038152906040529050919050565b6000610a1f61348a613c2c565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006134da8585613ca7565b915091506134e781613ced565b509392505050565b60008281526008602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600a60205260408120805491600191906135698385614e9d565b90915550506000928352600a6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6135c18282611cce565b60008281526008602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6136326000805160206150bb833981519152600061151d565b15801561364757506001600160a01b03841615155b801561365b57506001600160a01b03831615155b15610d9c576136786000805160206150bb8339815191528561151d565b15801561369a57506136986000805160206150bb8339815191528461151d565b155b15610d9c5760405162461bcd60e51b815260206004820152600e60248201526d215472616e736665722d526f6c6560901b6044820152606401610bc1565b806136e257610d9c565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561371157610cf98282613ea3565b610d9c84848484613f45565b606061372884611cbf565b6137835760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610bc1565b600080856001600160a01b03168560405161379e919061504e565b600060405180830381855af49150503d80600081146137d9576040519150601f19603f3d011682016040523d82523d6000602084013e6137de565b606091505b50915091506137ee828286613f9e565b9695505050505050565b6000836001600160a01b031663150b7a026138116130c5565b8786866040518563ffffffff1660e01b8152600401613833949392919061506a565b6020604051808303816000875af192505050801561386e575060408051601f3d908101601f1916820190925261386b9181019061509d565b60015b6138c9573d80801561389c576040519150601f19603f3d011682016040523d82523d6000602084013e6138a1565b606091505b5080516138c1576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b600b54610100900460ff16612e225760405162461bcd60e51b8152600401610bc190614fdc565b600b54610100900460ff166139345760405162461bcd60e51b8152600401610bc190614fdc565b60005b8151811015610c675760016071600084848151811061395857613958614eb5565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061399481614ecb565b915050613937565b600b54610100900460ff166139c35760405162461bcd60e51b8152600401610bc190614fdc565b81516139d79061010d906020850190614334565b5080516139ec9061010e906020840190614334565b50600061010b555050565b610c6782826127b1565b600b54610100900460ff16613a285760405162461bcd60e51b8152600401610bc190614fdc565b610c678282613fd7565b600b54610100900460ff16613a595760405162461bcd60e51b8152600401610bc190614fdc565b6001600c55565b61010b546001600160a01b038416613a8a57604051622e076360e81b815260040160405180910390fd5b82613aa85760405163b562e8dd60e01b815260040160405180910390fd5b613ab56000858386613619565b6001600160a01b03841660008181526101106020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b0181169092021790915585845261010f90925290912080546001600160e01b0319168317600160a01b4290931692909202919091179055819081850190613b5090611cbf565b15613bc7575b60405182906001600160a01b03881690600090600080516020615162833981519152908290a4613b8f60008784806001019550876137f8565b613bac576040516368d2bf6b60e11b815260040160405180910390fd5b808210613b56578261010b5414613bc257600080fd5b613bfa565b5b6040516001830192906001600160a01b03881690600090600080516020615162833981519152908290a4808210613bc8575b5061010b55610d9c600085838684565b6000613c15336112b6565b15613c27575060131936013560601c90565b503390565b6000611ec87f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f613c5b60a45490565b60a5546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b600080825160411415613cde5760208301516040840151606085015160001a613cd287828585614018565b94509450505050613ce6565b506000905060025b9250929050565b6000816004811115613d0157613d01614b9e565b1415613d0a5750565b6001816004811115613d1e57613d1e614b9e565b1415613d675760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610bc1565b6002816004811115613d7b57613d7b614b9e565b1415613dc95760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610bc1565b6003816004811115613ddd57613ddd614b9e565b1415613e365760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610bc1565b6004816004811115613e4a57613e4a614b9e565b1415610c065760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610bc1565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114613ef0576040519150601f19603f3d011682016040523d82523d6000602084013e613ef5565b606091505b5050905080610bd45760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610bc1565b816001600160a01b0316836001600160a01b03161415613f6457610d9c565b6001600160a01b038316301415613f8957610cf96001600160a01b03851683836140fb565b610d9c6001600160a01b038516848484614151565b60608315613fad575081611da1565b825115613fbd5782518084602001fd5b8160405162461bcd60e51b8152600401610bc19190614507565b600b54610100900460ff16613ffe5760405162461bcd60e51b8152600401610bc190614fdc565b81516020928301208151919092012060a49190915560a555565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561404557506000905060036140f2565b8460ff16601b1415801561405d57508460ff16601c14155b1561406e57506000905060046140f2565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156140c2573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166140eb576000600192509250506140f2565b9150600090505b94509492505050565b610bd48363a9059cbb60e01b848460405160240161411a92919061475e565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614189565b6040516001600160a01b0380851660248301528316604482015260648101829052610d9c9085906323b872dd60e01b9060840161411a565b60006141de826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661425b9092919063ffffffff16565b805190915015610bd457808060200190518101906141fc9190614c68565b610bd45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610bc1565b60606120e384846000858561426f85611cbf565b6142bb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bc1565b600080866001600160a01b031685876040516142d7919061504e565b60006040518083038185875af1925050503d8060008114614314576040519150601f19603f3d011682016040523d82523d6000602084013e614319565b606091505b5091509150614329828286613f9e565b979650505050505050565b82805461434090614c19565b90600052602060002090601f01602090048101928261436257600085556143a8565b82601f1061437b57805160ff19168380011785556143a8565b828001600101855582156143a8579182015b828111156143a857825182559160200191906001019061438d565b506143b49291506143b8565b5090565b5b808211156143b457600081556001016143b9565b80356001600160a01b03811681146143e457600080fd5b919050565b60008083601f8401126143fb57600080fd5b5081356001600160401b0381111561441257600080fd5b602083019150836020828501011115613ce657600080fd5b60008060006040848603121561443f57600080fd5b614448846143cd565b925060208401356001600160401b0381111561446357600080fd5b61446f868287016143e9565b9497909650939450505050565b6001600160e01b031981168114610c0657600080fd5b6000602082840312156144a457600080fd5b8135611da18161447c565b60005b838110156144ca5781810151838201526020016144b2565b83811115610d9c5750506000910152565b600081518084526144f38160208601602086016144af565b601f01601f19169290920160200192915050565b602081526000611da160208301846144db565b6001600160a01b03169052565b6001600160a01b0391909116815260200190565b60006020828403121561454d57600080fd5b5035919050565b6000806040838503121561456757600080fd5b614570836143cd565b946020939093013593505050565b60006020828403121561459057600080fd5b611da1826143cd565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156145d7576145d7614599565b604052919050565b60006001600160401b038311156145f8576145f8614599565b61460b601f8401601f19166020016145af565b905082815283838301111561461f57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261464757600080fd5b611da1838335602085016145df565b6000806040838503121561466957600080fd5b8235915060208301356001600160401b0381111561468657600080fd5b61469285828601614636565b9150509250929050565b6000806000606084860312156146b157600080fd5b6146ba846143cd565b92506146c8602085016143cd565b9150604084013590509250925092565b6000806000604084860312156146ed57600080fd5b83356001600160401b038082111561470457600080fd5b90850190610160828803121561471957600080fd5b9093506020850135908082111561472f57600080fd5b5061446f868287016143e9565b6000806040838503121561474f57600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b6000806040838503121561478a57600080fd5b8235915061479a602084016143cd565b90509250929050565b8015158114610c0657600080fd5b6000602082840312156147c357600080fd5b8135611da1816147a3565b6000602082840312156147e057600080fd5b81356001600160401b038111156147f657600080fd5b6120e384828501614636565b60008060006060848603121561481757600080fd5b833592506146c8602085016143cd565b6000806040838503121561483a57600080fd5b614843836143cd565b91506020830135614853816147a3565b809150509250929050565b6000806020838503121561487157600080fd5b82356001600160401b038082111561488857600080fd5b818501915085601f83011261489c57600080fd5b8135818111156148ab57600080fd5b8660208260051b85010111156148c057600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561492757603f198886030184526149158583516144db565b945092850192908501906001016148f9565b5092979650505050505050565b60006020828403121561494657600080fd5b813560028110611da157600080fd5b6000806000806080858703121561496b57600080fd5b614974856143cd565b9350614982602086016143cd565b92506040850135915060608501356001600160401b038111156149a457600080fd5b8501601f810187136149b557600080fd5b6149c4878235602084016145df565b91505092959194509250565b600082601f8301126149e157600080fd5b813560206001600160401b038211156149fc576149fc614599565b8160051b614a0b8282016145af565b9283528481018201928281019087851115614a2557600080fd5b83870192505b8483101561432957614a3c836143cd565b82529183019190830190614a2b565b80356001600160801b03811681146143e457600080fd5b6000806000806000806000806000806101408b8d031215614a8257600080fd5b614a8b8b6143cd565b995060208b01356001600160401b0380821115614aa757600080fd5b614ab38e838f01614636565b9a5060408d0135915080821115614ac957600080fd5b614ad58e838f01614636565b995060608d0135915080821115614aeb57600080fd5b614af78e838f01614636565b985060808d0135915080821115614b0d57600080fd5b50614b1a8d828e016149d0565b965050614b2960a08c016143cd565b9450614b3760c08c016143cd565b9350614b4560e08c01614a4b565b9250614b546101008c01614a4b565b9150614b636101208c016143cd565b90509295989b9194979a5092959850565b60008060408385031215614b8757600080fd5b614b90836143cd565b915061479a602084016143cd565b634e487b7160e01b600052602160045260246000fd5b6020810160028310614bd657634e487b7160e01b600052602160045260246000fd5b91905290565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6020815260006120e3602083018486614bdc565b600181811c90821680614c2d57607f821691505b602082108114156119b657634e487b7160e01b600052602260045260246000fd5b6001600160a01b0392831681529116602082015260400190565b600060208284031215614c7a57600080fd5b8151611da1816147a3565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615614cdd57614cdd614cad565b500290565b600082614cff57634e487b7160e01b600052601260045260246000fd5b500490565b6000808335601e19843603018112614d1b57600080fd5b8301803591506001600160401b03821115614d3557600080fd5b602001915036819003821315613ce657600080fd5b6000808335601e19843603018112614d6157600080fd5b83016020810192503590506001600160401b03811115614d8057600080fd5b803603831315613ce657600080fd5b60208152614da860208201614da3846143cd565b61451a565b6000614db6602084016143cd565b614dc3604084018261451a565b5060408301356060830152614dda606084016143cd565b614de7608084018261451a565b50614df56080840184614d4a565b6101608060a0860152614e0d61018086018385614bdc565b925060a086013560c086015260c086013560e0860152614e2f60e087016143cd565b9150610100614e408187018461451a565b614e4b818801614a4b565b925050610120614e65818701846001600160801b03169052565b614e70818801614a4b565b925050610140614e8a818701846001600160801b03169052565b9590950135939094019290925250919050565b60008219821115614eb057614eb0614cad565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415614edf57614edf614cad565b5060010190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351614f168160158501602088016144af565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351614f478160268401602088016144af565b01602601949350505050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b600060208284031215614f8e57600080fd5b611da182614a4b565b600082821015614fa957614fa9614cad565b500390565b604081526000614fc160408301856144db565b8281036020840152614fd381856144db565b95945050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008161503657615036614cad565b506000190190565b8183823760009101908152919050565b600082516150608184602087016144af565b9190910192915050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906137ee908301846144db565b6000602082840312156150af57600080fd5b8151611da18161447c56fe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c5297e68f3a27f04914f2c6db0ad63b5e5c8173cebcc1a5341df045cf6dad7adc6bd6b5318a46e5fff572d5e4258a20774aab40cc35ac7680654b9081fcc82f80416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65649f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212209c0b4382241fd8683a2cbfae83727432b9529cc1e605639ea54848c15948268364736f6c634300080c0033",
    "sourceMap": "2086:12244:350:-:0;;;3507:28;;;;;;;;;-1:-1:-1;3134:13:433;;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:433;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;;;;;:44;;:::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:433;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:433;;216:2:640;3157:201:433;;;198:21:640;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:640;;;338:44;399:19;;3157:201:433;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:433;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:433;;;;;3394:65;3483:14;3479:99;;;3513:13;:21;;-1:-1:-1;;3513:21:433;;;3553:14;;-1:-1:-1;581:36:640;;3553:14:433;;569:2:640;554:18;3553:14:433;;;;;;;3479:99;3101:483;2086:12244:350;;1186:320:459;-1:-1:-1;;;;;1476:19:459;;:23;;;1186:320::o;429:194:640:-;2086:12244:350;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "2086:12244:350:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6795:218;;;;;;;;;;-1:-1:-1;6795:218:350;;;;;:::i;:::-;;:::i;:::-;;;1181:25:640;;;1169:2;1154:18;6795:218:350;;;;;;;;5342:269;;;;;;;;;;-1:-1:-1;5342:269:350;;;;;:::i;:::-;;:::i;:::-;;;1768:14:640;;1761:22;1743:41;;1731:2;1716:18;5342:269:350;1603:187:640;6839:98:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;676:104:74:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;8336:200:26:-;;;;;;;;;;-1:-1:-1;8336:200:26;;;;;:::i;:::-;;:::i;7888:155:350:-;;;;;;;;;;-1:-1:-1;7888:155:350;;;;;:::i;:::-;;:::i;:::-;;1133:173:70;;;;;;;;;;-1:-1:-1;1133:173:70;;;;;:::i;:::-;;:::i;749:189:66:-;;;;;;;;;;-1:-1:-1;749:189:66;;;;;:::i;:::-;;:::i;2895:306:26:-;;;;;;;;;;-1:-1:-1;3154:12:26;;3138:13;;:28;2895:306;;2043:269:73;;;;;;;;;;-1:-1:-1;2043:269:73;;;;;:::i;:::-;;:::i;7320:112:350:-;;;;;;;;;;-1:-1:-1;7320:112:350;;;;;:::i;:::-;;:::i;8090:211::-;;;;;;;;;;-1:-1:-1;8090:211:350;;;;;:::i;:::-;;:::i;2740:120:71:-;;;;;;;;;;-1:-1:-1;2740:120:71;;;;;:::i;:::-;2808:7;2834:19;;;:13;:19;;;;;;;2740:120;1252:293:86;;;;;;;;;;-1:-1:-1;1252:293:86;;;;;:::i;:::-;;:::i;:::-;;;;6543:14:640;;6536:22;6518:41;;-1:-1:-1;;;;;6595:32:640;;;6590:2;6575:18;;6568:60;6491:18;1252:293:86;6350:284:640;1421:347:77;;;;;;;;;;-1:-1:-1;1421:347:77;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3255:271:71:-;;;;;;;;;;-1:-1:-1;3255:271:71;;;;;:::i;:::-;;:::i;243:208:67:-;;;;;;;;;;-1:-1:-1;243:208:67;;;;;:::i;:::-;;:::i;4466:217:71:-;;;;;;;;;;-1:-1:-1;4466:217:71;;;;;:::i;:::-;;:::i;9371:98:350:-;;;;;;;;;;-1:-1:-1;9449:13:350;;9371:98;;7069:195;;;;;;;;;;-1:-1:-1;7069:195:350;;;;;:::i;:::-;;:::i;8352:219::-;;;;;;;;;;-1:-1:-1;8352:219:350;;;;;:::i;:::-;;:::i;5890:820::-;;;;;;:::i;:::-;;:::i;2008:381:77:-;;;;;;;;;;-1:-1:-1;2008:381:77;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;7989:32:640;;;7971:51;;8070:6;8058:19;;;8053:2;8038:18;;8031:47;7944:18;2008:381:77;7799:285:640;205:31:67;;;;;;;;;;-1:-1:-1;205:31:67;;;;;;;;918:134:211;;;;;;;;;;-1:-1:-1;918:134:211;;;;;:::i;:::-;;:::i;509:199:56:-;;;;;;;;;;-1:-1:-1;509:199:56;;;;;:::i;:::-;;:::i;3087:256:77:-;;;;;;;;;;-1:-1:-1;3087:256:77;;;;;:::i;:::-;;:::i;6654:123:26:-;;;;;;;;;;-1:-1:-1;6654:123:26;;;;;:::i;:::-;;:::i;1189:228:74:-;;;;;;;;;;-1:-1:-1;1189:228:74;;;;;:::i;:::-;;:::i;4080:203:26:-;;;;;;;;;;-1:-1:-1;4080:203:26;;;;;:::i;:::-;;:::i;2821:255:73:-;;;;;;;;;;-1:-1:-1;2821:255:73;;;;;:::i;:::-;;:::i;871:86:70:-;;;;;;;;;;-1:-1:-1;944:6:70;;-1:-1:-1;;;;;944:6:70;871:86;;1643:633:72;;;;;;;;;;-1:-1:-1;1643:633:72;;;;;:::i;:::-;;:::i;1324:131:71:-;;;;;;;;;;-1:-1:-1;1324:131:71;;;;;:::i;:::-;;:::i;1003:188:54:-;;;;;;;;;;-1:-1:-1;1003:188:54;;;;;:::i;:::-;;:::i;7001:102:26:-;;;;;;;;;;;;;:::i;4281:288:77:-;;;;;;;;;;-1:-1:-1;4281:288:77;;;;;:::i;:::-;;:::i;742:49:71:-;;;;;;;;;;-1:-1:-1;742:49:71;787:4;742:49;;7673:174:350;;;;;;;;;;-1:-1:-1;7673:174:350;;;;;:::i;:::-;;:::i;2206:211:71:-;;;;;;;;;;-1:-1:-1;2206:211:71;;;;;:::i;:::-;;:::i;698:319:65:-;;;;;;;;;;-1:-1:-1;698:319:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2499:144:77:-;;;;;;;;;;-1:-1:-1;2599:16:77;;-1:-1:-1;;;;;2599:16:77;;;-1:-1:-1;;;2624:10:77;;;;2499:144;;3455:243:73;;;;;;;;;;-1:-1:-1;3455:243:73;;;;;:::i;:::-;;:::i;8622:252:350:-;;;;;;;;;;-1:-1:-1;8622:252:350;;;;;:::i;:::-;;:::i;5184:127::-;;;;;;;;;;-1:-1:-1;5184:127:350;;;;;:::i;:::-;;:::i;2683:398:72:-;;;;;;;;;;-1:-1:-1;2683:398:72;;;;;:::i;:::-;;:::i;1058:147:73:-;;;;;;;;;;;;;:::i;3897:171:71:-;;;;;;;;;;-1:-1:-1;3897:171:71;;;;;:::i;:::-;;:::i;3600:1337:350:-;;;;;;;;;;-1:-1:-1;3600:1337:350;;;;;:::i;:::-;;:::i;1268:136:73:-;;;;;;;;;;;;;:::i;565:34:54:-;;;;;;;;;;;;;:::i;8951:162:26:-;;;;;;;;;;-1:-1:-1;8951:162:26;;;;;:::i;:::-;-1:-1:-1;;;;;9071:25:26;;;9048:4;9071:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8951:162;1467:107:73;;;;;;;;;;-1:-1:-1;1552:15:73;;;;1467:107;;;;;;:::i;6795:218:350:-;6886:21;-1:-1:-1;;;;;;;;;;;931:28:71;942:4;948:10;931;:28::i;:::-;6935:18:350::1;6943:3;6948:4;;6935:7;:18::i;:::-;6919:34;;6986:13;6981:3;-1:-1:-1::0;;;;;6968:38:350::1;;7001:4;;6968:38;;;;;;;:::i;:::-;;;;;;;;6795:218:::0;;;;;;:::o;5342:269::-;5496:4;5523:36;5547:11;5523:23;:36::i;:::-;:81;;;-1:-1:-1;;;;;;;;;;5563:41:350;;;5523:81;5516:88;5342:269;-1:-1:-1;;5342:269:350:o;6839:98:26:-;6893:13;6925:5;6918:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6839:98;:::o;676:104:74:-;764:9;;-1:-1:-1;;;;;764:9:74;;676:104::o;8336:200:26:-;8404:7;8428:16;8436:7;8428;:16::i;:::-;8423:64;;8453:34;;-1:-1:-1;;;8453:34:26;;;;;;;;;;;8423:64;-1:-1:-1;8505:24:26;;;;:15;:24;;;;;;-1:-1:-1;;;;;8505:24:26;;8336:200::o;7888:155:350:-;1886:19:69;;7984:8:350;;1886:19:69;;1882:286;;;391:42;1925:45;:49;1921:237;;1999:67;;-1:-1:-1;;;1999:67:69;;391:42;;1999;;:67;;2050:4;;2057:8;;1999:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1994:150;;2116:8;2097:28;;-1:-1:-1;;;2097:28:69;;;;;;;;:::i;:::-;;;;;;;;1994:150;8004:32:350::1;8018:8;8028:7;8004:13;:32::i;:::-;7888:155:::0;;;:::o;1133:173:70:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:70;;;;;;;:::i;1198:70::-;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;749:189:66:-;841:17;:15;:17::i;:::-;833:60;;;;-1:-1:-1;;;833:60:66;;16797:2:640;833:60:66;;;16779:21:640;16836:2;16816:18;;;16809:30;16875:32;16855:18;;;16848:60;16925:18;;833:60:66;16595:354:640;833:60:66;903:28;916:8;926:4;903:12;:28::i;:::-;749:189;;:::o;2043:269:73:-;2160:24;:22;:24::i;:::-;2155:80;;2200:24;;-1:-1:-1;;;2200:24:73;;;;;;;:::i;2155:80::-;2244:61;2266:21;2289:15;2244:21;:61::i;7320:112:350:-;-1:-1:-1;;;;;;;;;;;931:28:71;942:4;948:10;931;:28::i;:::-;7411:14:350::1;7417:7;7411:5;:14::i;8090:211::-:0;1064:19:69;;8241:4:350;;1064:19:69;;1060:621;;;391:42;1103:45;:49;1099:572;;-1:-1:-1;;;;;1396:18:69;;1404:10;1396:18;1392:94;;;8257:37:350::1;8276:4;8282:2;8286:7;8257:18;:37::i;:::-;1461:7:69::0;;1392:94;1508:69;;-1:-1:-1;;;1508:69:69;;391:42;;1508;;:69;;1559:4;;1566:10;;1508:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:154;;1627:10;1608:30;;-1:-1:-1;;;1608:30:69;;;;;;;;:::i;1503:154::-;8257:37:350::1;8276:4;8282:2;8286:7;8257:18;:37::i;:::-;8090:211:::0;;;;:::o;1252:293:86:-;1384:12;1398:14;1437:33;1453:4;1459:10;;1437:15;:33::i;:::-;1498:8;;;;1491:16;;;;:6;:16;;;;;;1428:42;;-1:-1:-1;1491:16:86;;1490:17;:48;;;;;1511:27;1531:6;1511:19;:27::i;:::-;1480:58;;1252:293;;;;;;:::o;1421:347:77:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:77;;-1:-1:-1;1613:66:77;;;-1:-1:-1;1755:6:77;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;3255:271:71:-;3350:19;;;;:13;:19;;;;;;3339:43;;3371:10;3339;:43::i;:::-;3396:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3396:23:71;;;;;;;;;;;;3392:93;;;3435:39;;-1:-1:-1;;;3435:39:71;;17683:2:640;3435:39:71;;;17665:21:640;17722:2;17702:18;;;17695:30;17761:31;17741:18;;;17734:59;17810:18;;3435:39:71;17481:353:640;3392:93:71;3494:25;3505:4;3511:7;3494:10;:25::i;243:208:67:-;321:28;:26;:28::i;:::-;313:84;;;;-1:-1:-1;;;313:84:67;;18041:2:640;313:84:67;;;18023:21:640;18080:2;18060:18;;;18053:30;18119:34;18099:18;;;18092:62;-1:-1:-1;;;18170:18:640;;;18163:41;18221:19;;313:84:67;17839:407:640;313:84:67;407:37;431:12;407:23;:37::i;4466:217:71:-;4557:10;-1:-1:-1;;;;;4557:21:71;;;4553:88;;4594:36;;-1:-1:-1;;;4594:36:71;;18453:2:640;4594:36:71;;;18435:21:640;18492:2;18472:18;;;18465:30;-1:-1:-1;;;18511:18:640;;;18504:56;18577:18;;4594:36:71;18251:350:640;4553:88:71;4650:26;4662:4;4668:7;4650:11;:26::i;7069:195:350:-;7237:20;7243:7;7252:4;7237:5;:20::i;8352:219::-;1064:19:69;;8507:4:350;;1064:19:69;;1060:621;;;391:42;1103:45;:49;1099:572;;-1:-1:-1;;;;;1396:18:69;;1404:10;1396:18;1392:94;;;8523:41:350::1;8546:4;8552:2;8556:7;8523:22;:41::i;1392:94:69:-:0;1508:69;;-1:-1:-1;;;1508:69:69;;391:42;;1508;;:69;;1559:4;;1566:10;;1508:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:154;;1627:10;1608:30;;-1:-1:-1;;;1608:30:69;;;;;;;;:::i;1503:154::-;8523:41:350::1;8546:4;8552:2;8556:7;8523:22;:41::i;5890:820::-:0;6042:14;1815:1:435;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:435;;18808:2:640;2561:63:435;;;18790:21:640;18847:2;18827:18;;;18820:30;18886:33;18866:18;;;18859:61;18937:18;;2561:63:435;18606:355:640;2561:63:435;1815:1;2699:7;:18;6097:1:350::1;6080:13;::::0;::::1;;:18;6072:79;;;::::0;-1:-1:-1;;;6072:79:350;;19168:2:640;6072:79:350::1;::::0;::::1;19150:21:640::0;19207:2;19187:18;;;19180:30;19246:34;19226:18;;;19219:62;-1:-1:-1;;;19297:18:640;;;19290:46;19353:19;;6072:79:350::1;18966:412:640::0;6072:79:350::1;6171:33;6187:4;6193:10;;6171:15;:33::i;:::-;6162:42:::0;-1:-1:-1;6214:16:350::1;6233:7;;::::0;::::1;:4:::0;:7:::1;:::i;:::-;6214:26:::0;-1:-1:-1;6250:21:350::1;6274:27;6214:26:::0;6292:8:::1;;::::0;::::1;:4:::0;:8:::1;:::i;:::-;6274:7;:27::i;:::-;6250:51:::0;-1:-1:-1;6390:1:350::1;6357:21;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;6357:35:350::1;;;:59;;;;-1:-1:-1::0;6396:15:350::1;::::0;::::1;;:20:::0;::::1;6357:59;6353:170;;;6432:80;6458:13:::0;6473:21:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;6496:4;:15;;;6432:25;:80::i;:::-;6533:90;6547:25;::::0;;;::::1;::::0;::::1;;:::i;:::-;6574:13;::::0;::::1;;6589;::::0;;;::::1;::::0;::::1;;:::i;:::-;6604:4;:18;;;6533:13;:90::i;:::-;6683:13;6673:8;-1:-1:-1::0;;;;;6639:64:350::1;6665:6;-1:-1:-1::0;;;;;6639:64:350::1;;6698:4;6639:64;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;1772:1:435;2872:7;:22;5890:820:350;;-1:-1:-1;;;5890:820:350:o;2008:381:77:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:77;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;-1:-1:-1;;;;;2270:16:77;;;-1:-1:-1;;;2295:10:77;;;;2211:171;2192:190;;;;;2008:381;;;:::o;918:134:211:-;-1:-1:-1;;;;;1017:28:211;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;509:199:56:-;588:28;:26;:28::i;:::-;580:81;;;;-1:-1:-1;;;580:81:56;;22277:2:640;580:81:56;;;22259:21:640;22316:2;22296:18;;;22289:30;22355:34;22335:18;;;22328:62;-1:-1:-1;;;22406:18:640;;;22399:38;22454:19;;580:81:56;22075:404:640;580:81:56;671:30;681:13;696:4;671:9;:30::i;3087:256:77:-;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:77;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;6654:123:26:-;6718:7;6744:21;6757:7;6744:12;:21::i;:::-;:26;;6654:123;-1:-1:-1;;6654:123:26:o;1189:228:74:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:74;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;4080:203:26:-;4144:7;-1:-1:-1;;;;;4167:19:26;;4163:60;;4195:28;;-1:-1:-1;;;4195:28:26;;;;;;;;;;;4163:60;-1:-1:-1;;;;;;4248:19:26;;;;;:12;:19;;;;;:27;-1:-1:-1;;;;;4248:27:26;;4080:203::o;2821:255:73:-;2926:24;:22;:24::i;:::-;2921:80;;2966:24;;-1:-1:-1;;;2966:24:73;;;;;;;:::i;2921:80::-;3011:58;3037:21;3060:8;3011:25;:58::i;1643:633:72:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:72;:42;1893:367;;1972:5;1963;:14;1959:133;;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:72;;-1:-1:-1;2060:13:72;;-1:-1:-1;;2060:13:72;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:72;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1324:131:71:-;1402:4;1425:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1425:23:71;;;;;;;;;;;;;;;1324:131::o;1003:188:54:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:54;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;7001:102:26:-;7057:13;7089:7;7082:14;;;;;:::i;4281:288:77:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:77;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;7673:174:350:-;1886:19:69;;7777:8:350;;1886:19:69;;1882:286;;;391:42;1925:45;:49;1921:237;;1999:67;;-1:-1:-1;;;1999:67:69;;391:42;;1999;;:67;;2050:4;;2057:8;;1999:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1994:150;;2116:8;2097:28;;-1:-1:-1;;;2097:28:69;;;;;;;;:::i;1994:150::-;7797:43:350::1;7821:8;7831;7797:23;:43::i;2206:211:71:-:0;2285:4;2306:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2301:88;;-1:-1:-1;2355:14:71;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2355:23:71;;;;;;;;;;;;2348:30;;2301:88;-1:-1:-1;2406:4:71;2206:211;;;;:::o;698:319:65:-;775:22;831:4;-1:-1:-1;;;;;819:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:65;;-1:-1:-1;;;922:54:65:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;:::o;3455:243:73:-;3533:24;:22;:24::i;:::-;3528:80;;3573:24;;-1:-1:-1;;;3573:24:73;;;;;;;:::i;3528:80::-;3617:15;:26;;3635:8;;3617:15;-1:-1:-1;;3617:26:73;;3635:8;3617:26;;;;;;;;:::i;:::-;;;;;;3659:32;3682:8;3659:32;;;;;;:::i;:::-;;;;;;;;3455:243;:::o;8622:252:350:-;1064:19:69;;8804:4:350;;1064:19:69;;1060:621;;;391:42;1103:45;:49;1099:572;;-1:-1:-1;;;;;1396:18:69;;1404:10;1396:18;1392:94;;;8820:47:350::1;8843:4;8849:2;8853:7;8862:4;8820:22;:47::i;:::-;1461:7:69::0;;1392:94;1508:69;;-1:-1:-1;;;1508:69:69;;391:42;;1508;;:69;;1559:4;;1566:10;;1508:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:154;;1627:10;1608:30;;-1:-1:-1;;;1608:30:69;;;;;;;;:::i;1503:154::-;8820:47:350::1;8843:4;8849:2;8853:7;8862:4;8820:22;:47::i;:::-;8622:252:::0;;;;;:::o;5184:127::-;5250:13;5282:22;5295:8;5282:12;:22::i;2683:398:72:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:72;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;1058:147:73:-;1153:20;;-1:-1:-1;;;;;1153:20:73;;;-1:-1:-1;;;1182:14:73;;;;;;1058:147::o;3897:171:71:-;3993:19;;;;:13;:19;;;;;;3982:43;;4014:10;3982;:43::i;3600:1337:350:-;3134:13:433;;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:433;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:433;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:433;;23617:2:640;3157:201:433;;;23599:21:640;23656:2;23636:18;;;23629:30;23695:34;23675:18;;;23668:62;-1:-1:-1;;;23746:18:640;;;23739:44;23800:19;;3157:201:433;23415:410:640;3157:201:433;3368:12;:16;;-1:-1:-1;;3368:16:433;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:433;;;;;3394:65;4072:41:350::1;4094:18;4072:21;:41::i;:::-;4123:30;4138:5;4145:7;4123:14;:30::i;:::-;4163:32;:30;:32::i;:::-;4205:28;:26;:28::i;:::-;4243:24;:22;:24::i;:::-;4278:31;4296:12;4278:17;:31::i;:::-;4319:26;4331:13;4319:11;:26::i;:::-;4355:29;4379:4;4355:23;:29::i;:::-;4395:45;787:4:71;4426:13:350::0;4395:10:::1;:45::i;:::-;4450:38;-1:-1:-1::0;;;;;;;;;;;4474:13:350::1;4450:10;:38::i;:::-;4498:40;-1:-1:-1::0;;;;;;;;;;;4524:13:350::1;4498:10;:40::i;:::-;4549;-1:-1:-1::0;;;;;;;;;;;4575:13:350::1;4549:10;:40::i;:::-;4599:43;-1:-1:-1::0;;;;;;;;;;;3057:26:350;4599:13:::1;:43::i;:::-;4653:38;-1:-1:-1::0;;;;;;;;;;;4677:13:350::1;4653:10;:38::i;:::-;4701:39;-1:-1:-1::0;;;;;;;;;;;3193:24:350;4701:13:::1;:39::i;:::-;4751:61;4773:21;4796:15;-1:-1:-1::0;;;;;4751:61:350::1;:21;:61::i;:::-;4822:56;4847:17;4866:11;-1:-1:-1::0;;;;;4822:56:350::1;:24;:56::i;:::-;4888:42;4915:14;4888:26;:42::i;:::-;3483:14:433::0;3479:99;;;3513:13;:21;;-1:-1:-1;;3513:21:433;;;3553:14;;-1:-1:-1;23982:36:640;;3553:14:433;;23970:2:640;23955:18;3553:14:433;;;;;;;3479:99;3101:483;3600:1337:350;;;;;;;;;;:::o;1268:136:73:-;1359:20;;1381:15;;-1:-1:-1;;;;;1359:20:73;;;;1268:136::o;565:34:54:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1186:320:459:-;-1:-1:-1;;;;;1476:19:459;;:23;;;1186:320::o;5557:495:71:-;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:71;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:71;5867:2;5827:21;:43::i;:::-;5941:40;5971:4;5978:2;5941:21;:40::i;:::-;5736:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5736:267:71;;;;;;;;;;-1:-1:-1;;;5684:351:71;;;;;;;:::i;11195:210:350:-;11265:21;11314:13;;11298:29;;11338:33;11351:13;11366:4;;11338:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11338:12:350;;-1:-1:-1;;;11338:33:350:i;:::-;11381:17;11391:3;11396:1;11381:9;:17::i;:::-;11195:210;;;;;:::o;3633:388:26:-;3797:4;-1:-1:-1;;;;;;3836:51:26;;-1:-1:-1;;;3836:51:26;;:126;;-1:-1:-1;;;;;;;3903:59:26;;-1:-1:-1;;;3903:59:26;3836:126;:178;;;-1:-1:-1;;;;;;;;;;1168:51:468;;;3978:36:26;1060:166:468;10277:172:26;10334:4;10397:13;;10387:7;:23;10357:85;;;;-1:-1:-1;;10415:20:26;;;;:11;:20;;;;;:27;-1:-1:-1;;;10415:27:26;;;;10414:28;;10277:172::o;7872:403::-;7952:13;7968:35;7995:7;7968:26;:35::i;:::-;7952:51;;8023:5;-1:-1:-1;;;;;8017:11:26;:2;-1:-1:-1;;;;;8017:11:26;;8013:48;;;8037:24;;-1:-1:-1;;;8037:24:26;;;;;;;;;;;8013:48;8092:5;-1:-1:-1;;;;;8076:21:26;:12;:10;:12::i;:::-;-1:-1:-1;;;;;8076:21:26;;8072:158;;8116:37;8133:5;8140:12;:10;:12::i;8116:37::-;8111:119;;8180:35;;-1:-1:-1;;;8180:35:26;;;;;;;;;;;8111:119;8240:28;8249:2;8253:7;8262:5;8240:8;:28::i;12592:127:350:-;12648:4;12671:41;12648:4;12699:12;:10;:12::i;12671:41::-;12664:48;;12592:127;:::o;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;13482:133:350:-;13549:4;13572:36;-1:-1:-1;;;;;;;;;;;13595:12:350;:10;:12::i;455:233:66:-;571:1;556:4;550:18;:22;542:63;;;;-1:-1:-1;;;542:63:66;;25020:2:640;542:63:66;;;25002:21:640;25059:2;25039:18;;;25032:30;-1:-1:-1;;;25078:18:640;;;25071:58;25146:18;;542:63:66;24818:352:640;542:63:66;615:19;;;;:9;:19;;;;;;;;:26;;;;;;;;:::i;:::-;-1:-1:-1;657:24:66;;1181:25:640;;;657:24:66;;1169:2:640;1154:18;657:24:66;;;;;;;;455:233;;:::o;2371:375:73:-;2499:6;2481:15;:24;2477:80;;;2521:25;;-1:-1:-1;;;2521:25:73;;;;;;;:::i;2477:80::-;2567:14;:40;;-1:-1:-1;;;;;;2617:44:73;-1:-1:-1;;;2567:40:73;;;;-1:-1:-1;;;;;;2617:44:73;;-1:-1:-1;;;;;2617:44:73;;;;;;;;2677:62;;1181:25:640;;;2677:62:73;;1169:2:640;1154:18;2677:62:73;;;;;;;;2371:375;;:::o;16488:87:26:-;16547:21;16553:7;16562:5;16547;:21::i;9175:164::-;9304:28;9314:4;9320:2;9324:7;9304:9;:28::i;2428:204:86:-;2530:7;2556:69;2614:10;;2556:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2556:49:86;;-1:-1:-1;2583:20:86;;-1:-1:-1;2598:4:86;;-1:-1:-1;2583:14:86;:20::i;:::-;2573:31;;;;;;2556:16;:49::i;:::-;:57;;:69::i;:::-;2549:76;2428:204;-1:-1:-1;;;;2428:204:86:o;13258:137:350:-;13336:4;13359:29;-1:-1:-1;;;;;;;;;;;13380:7:350;13359;:29::i;3475:152:72:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;457:160:67:-;528:19;:34;;-1:-1:-1;;528:34:67;;;;;;;;;;577:33;;1743:41:640;;;577:33:67;;1731:2:640;1716:18;577:33:67;1603:187:640;3205:157:72;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:72;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:72;;;4197:34;;;;4190:41;749:189:66;;:::o;16792:2355:26:-;16871:35;16909:21;16922:7;16909:12;:21::i;:::-;16956:18;;16871:59;;-1:-1:-1;16985:284:26;;;;17018:22;17060:4;-1:-1:-1;;;;;17044:20:26;:12;:10;:12::i;:::-;-1:-1:-1;;;;;17044:20:26;;:76;;;;17084:36;17101:4;17107:12;:10;:12::i;17084:36::-;17044:132;;;;17164:12;:10;:12::i;:::-;-1:-1:-1;;;;;17140:36:26;:20;17152:7;17140:11;:20::i;:::-;-1:-1:-1;;;;;17140:36:26;;17044:132;17018:159;;17197:17;17192:66;;17223:35;;-1:-1:-1;;;17223:35:26;;;;;;;;;;;17192:66;17004:265;16985:284;17279:51;17301:4;17315:1;17319:7;17328:1;17279:21;:51::i;:::-;17392:35;17409:1;17413:7;17422:4;17392:8;:35::i;:::-;-1:-1:-1;;;;;17751:18:26;;;17717:31;17751:18;;;:12;:18;;;;;;;;17783:24;;-1:-1:-1;;;;;;;;;;17783:24:26;;;;;;;;;-1:-1:-1;;;;;;17783:24:26;;;;17821:29;;;;;17806:1;17821:29;;;;;;;;-1:-1:-1;;;;;;17821:29:26;;;;;;;;;;17980:20;;;:11;:20;;;;;;18014;;-1:-1:-1;;;;18081:15:26;18048:49;;;-1:-1:-1;;;18048:49:26;-1:-1:-1;;;;;;18048:49:26;;;;;;;;;;18111:22;-1:-1:-1;;;18111:22:26;;;18399:11;;;18458:24;;;;;18500:13;;17751:18;;18458:24;;18500:13;18496:377;;18707:13;;18692:11;:28;18688:171;;18744:20;;18812:28;;;;-1:-1:-1;;;;;18786:54:26;-1:-1:-1;;;18786:54:26;-1:-1:-1;;;;;;18786:54:26;;;-1:-1:-1;;;;;18744:20:26;;18786:54;;;;18688:171;-1:-1:-1;;18898:35:26;;18925:7;;-1:-1:-1;18921:1:26;;-1:-1:-1;;;;;;18898:35:26;;;-1:-1:-1;;;;;;;;;;;18898:35:26;18921:1;;18898:35;-1:-1:-1;;19116:12:26;:14;;;;;;-1:-1:-1;;16792:2355:26:o;9405:179::-;9538:39;9555:4;9561:2;9565:7;9538:39;;;;;;;;;;;;:16;:39::i;1792:562:86:-;1889:14;1915:12;1957:24;1964:4;1970:10;;1957:6;:24::i;:::-;1937:44;-1:-1:-1;1937:44:86;-1:-1:-1;1937:44:86;1992:60;;2020:21;;-1:-1:-1;;;2020:21:86;;25721:2:640;2020:21:86;;;25703::640;25760:2;25740:18;;;25733:30;-1:-1:-1;;;25779:18:640;;;25772:41;25830:18;;2020:21:86;25519:335:640;1992:60:86;2096:15;2066:27;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2066:45:86;;:92;;;-1:-1:-1;2133:25:86;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2115:43:86;:15;:43;2066:92;2062:144;;;2174:21;;-1:-1:-1;;;2174:21:86;;26252:2:640;2174:21:86;;;26234::640;26291:2;26271:18;;;26264:30;-1:-1:-1;;;26310:18:640;;;26303:41;26361:18;;2174:21:86;26050:335:640;2062:144:86;2242:1;2223:7;;;;:4;:7;:::i;:::-;-1:-1:-1;;;;;2223:21:86;;;2215:53;;;;-1:-1:-1;;;2215:53:86;;26592:2:640;2215:53:86;;;26574:21:640;26631:2;26611:18;;;26604:30;-1:-1:-1;;;26650:18:640;;;26643:49;26709:18;;2215:53:86;26390:343:640;2215:53:86;2302:1;2286:4;:13;;;:17;2278:35;;;;-1:-1:-1;;;2278:35:86;;26940:2:640;2278:35:86;;;26922:21:640;26979:1;26959:18;;;26952:29;-1:-1:-1;;;26997:18:640;;;26990:35;27042:18;;2278:35:86;26738:328:640;2278:35:86;-1:-1:-1;2331:8:86;;;;;2324:16;;;;:6;:16;;;;;:23;;-1:-1:-1;;2324:23:86;2343:4;2324:23;;;-1:-1:-1;1792:562:86;;;-1:-1:-1;1792:562:86:o;4671:362:77:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:77;;;;;;;:::i;4807:69::-;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:77;;;;;;;;;;;;;-1:-1:-1;4886:29:77;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:77;;;;;;;;;;;-1:-1:-1;4886:81:77;;;;;;;4983:43;;1181:25:640;;;4918:49:77;;4886:29;;4983:43;;1154:18:640;4983:43:77;;;;;;;4671:362;;;:::o;9746:1409:350:-;9930:19;9926:103;;9973:9;:14;9965:33;;;;-1:-1:-1;;;9965:33:350;;27273:2:640;9965:33:350;;;27255:21:640;27312:1;27292:18;;;27285:29;-1:-1:-1;;;27330:18:640;;;27323:36;27376:18;;9965:33:350;27071:329:640;9926:103:350;10039:18;10060:33;10079:14;10060:16;:33;:::i;:::-;10039:54;-1:-1:-1;10104:18:350;-1:-1:-1;;;;;10136:45:350;;408:42:286;10136:45:350;10132:176;;;-1:-1:-1;10213:9:350;:23;;10132:176;;;-1:-1:-1;10283:9:350;:14;10132:176;10325:13;10317:43;;;;-1:-1:-1;;;10317:43:350;;27607:2:640;10317:43:350;;;27589:21:640;27646:2;27626:18;;;27619:30;-1:-1:-1;;;27665:18:640;;;27658:47;27722:18;;10317:43:350;27405:341:640;10317:43:350;10371:21;-1:-1:-1;;;;;10395:35:350;;;:84;;10458:21;10395:84;;;10433:22;:20;:22::i;:::-;10371:108;;10490:12;10512:20;10543:23;10569:20;1552:15:73;;;;;1467:107;10569:20:350;10543:46;-1:-1:-1;10614:20:350;10603:7;:31;;;;;;;;:::i;:::-;;10599:288;;;10673:24;:22;:24::i;:::-;10650:47;-1:-1:-1;10650:47:350;-1:-1:-1;10599:288:350;;;10728:21;10796:20;:18;:20::i;:::-;10763:53;;-1:-1:-1;10763:53:350;-1:-1:-1;3304:6:350;10838:27;;;;:10;:27;:::i;:::-;10837:39;;;;:::i;:::-;10830:46;;10714:173;10599:288;10919:4;10905:10;:18;;10897:54;;;;-1:-1:-1;;;10897:54:350;;27953:2:640;10897:54:350;;;27935:21:640;27992:2;27972:18;;;27965:30;-1:-1:-1;;;28011:18:640;;;28004:53;28074:18;;10897:54:350;27751:347:640;10897:54:350;10962:81;10999:9;11010:12;:10;:12::i;:::-;11024;11038:4;10962:36;:81::i;:::-;11053:95;11090:9;11101:12;:10;:12::i;:::-;11115:13;11130:17;11143:4;11130:10;:17;:::i;:::-;11053:36;:95::i;:::-;9916:1239;;;;;;9746:1409;;;;:::o;2191:783:69:-;391:42;2326:45;:49;2322:646;;-1:-1:-1;;;;;2449:51:69;;;:55;2445:513;;2572:9;2568:289;;;2605:92;;-1:-1:-1;;;2605:92:69;;391:42;;2605:45;;:92;;2659:4;;2666:30;;2605:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;749:189:66;;:::o;2568:289:69:-;2744:94;;-1:-1:-1;;;2744:94:69;;391:42;;2744:47;;:94;;2800:4;;2807:30;;2744:94;;;:::i;2445:513::-;2895:48;;-1:-1:-1;;;2895:48:69;;391:42;;2895:33;;:48;;2937:4;;2895:48;;;:::i;3430:334:77:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:77;;;;;;;:::i;3531:76::-;3617:16;:36;;-1:-1:-1;;;;;3617:36:77;;-1:-1:-1;;;;;;3663:32:77;;;;;-1:-1:-1;;;3663:32:77;;;;;;;;3711:46;;1181:25:640;;;3711:46:77;;1169:2:640;1154:18;3711:46:77;1035:177:640;5423:1174:26;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;5533:7:26;5631:13;;5624:4;:20;5620:913;;;5668:31;5702:17;;;:11;:17;;;;;;;;;5668:51;;;;;;;;;-1:-1:-1;;;;;5668:51:26;;;;-1:-1:-1;;;5668:51:26;;-1:-1:-1;;;;;5668:51:26;;;;;;;;-1:-1:-1;;;5668:51:26;;;;;;;;;;;;;;5741:774;;5794:14;;-1:-1:-1;;;;;5794:28:26;;5790:107;;5861:9;5423:1174;-1:-1:-1;;;5423:1174:26:o;5790:107::-;-1:-1:-1;;;6257:6:26;6305:17;;;;:11;:17;;;;;;;;;6293:29;;;;;;;;;-1:-1:-1;;;;;6293:29:26;;;;;-1:-1:-1;;;6293:29:26;;-1:-1:-1;;;;;6293:29:26;;;;;;;;-1:-1:-1;;;6293:29:26;;;;;;;;;;;;;6356:28;6352:115;;6427:9;5423:1174;-1:-1:-1;;;5423:1174:26:o;6352:115::-;6214:279;;;5646:887;5620:913;6559:31;;-1:-1:-1;;;6559:31:26;;;;;;;;;;;1499:170:74;1578:9;:26;;-1:-1:-1;;;;;;1578:26:74;-1:-1:-1;;;;;1578:26:74;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:74;1499:170;:::o;3129:261:73:-;3232:15;:26;;;3268:20;:44;;-1:-1:-1;;;;;;3268:44:73;-1:-1:-1;;;;;3268:44:73;;;;;3328:55;;;;;;3268:44;;3232:26;;3328:55;:::i;1273:185:54:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:54;;1339:35;;-1:-1:-1;1384:18:54;;:11;;-1:-1:-1;1384:18:54;;;;-1:-1:-1;1384:18:54;-1:-1:-1;1384:18:54;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;8603:282:26:-;8713:12;:10;:12::i;:::-;-1:-1:-1;;;;;8701:24:26;:8;-1:-1:-1;;;;;8701:24:26;;8697:54;;;8734:17;;-1:-1:-1;;;8734:17:26;;;;;;;;;;;8697:54;8807:8;8762:18;:32;8781:12;:10;:12::i;:::-;-1:-1:-1;;;;;8762:32:26;;;;;;;;;;;;;;;;;-1:-1:-1;8762:32:26;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;8762:53:26;;;;;;;;;;;8845:12;:10;:12::i;:::-;-1:-1:-1;;;;;8830:48:26;;8869:8;8830:48;;;;1768:14:640;1761:22;1743:41;;1731:2;1716:18;;1603:187;8830:48:26;;;;;;;;8603:282;;:::o;6538:198:290:-;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;9650:381:26:-;9811:28;9821:4;9827:2;9831:7;9811:9;:28::i;:::-;9853:15;:2;-1:-1:-1;;;;;9853:13:26;;:15::i;:::-;9849:176;;;9887:56;9918:4;9924:2;9928:7;9937:5;9887:30;:56::i;:::-;9882:143;;9970:40;;-1:-1:-1;;;9970:40:26;;;;;;;;;;;265:129:66;368:19;;;;:9;:19;;;;;361:26;;336:13;;368:19;361:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;265:129;;;:::o;470:194:211:-;4910:13:433;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:433;;;;;;;:::i;:::-;572:26:211::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;2225:151:26:-:0;4910:13:433;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:433;;;;;;;:::i;:::-;2329:40:26::1;2354:5;2361:7;2329:24;:40::i;356:147:56:-:0;417:79;306:42;491:4;417:51;:79::i;:::-;356:147::o;920:122:86:-;4910:13:433;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:433;;;;;;;:::i;:::-;994:41:86::1;;;;;;;;;;;;;;-1:-1:-1::0;;;994:41:86::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;994:41:86::1;;::::0;:13:::1;:41::i;1853:111:435:-:0;4910:13:433;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:433;;;;;;;:::i;:::-;1923:34:435::1;:32;:34::i;4743:245:71:-:0;4826:25;4854:19;;;:13;:19;;;;;;;;4883:31;;;;4929:52;;4854:19;;4905:9;;4854:19;;4868:4;;4929:52;;4826:25;4929:52;4816:172;4743:245;;:::o;1565:441:294:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:294;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:294;;1665:47;;-1:-1:-1;;;1722:6:294;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:294;;;;;;;;;-1:-1:-1;;;1747:6:294;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:294;;;;;;;;-1:-1:-1;1777:9:294;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:294;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:294;;;;;;;;-1:-1:-1;1892:1:294;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:294;;1913:55;;;;-1:-1:-1;;;1913:55:294;;29376:2:640;1913:55:294;;;29358:21:640;;;29395:18;;;29388:30;29454:34;29434:18;;;29427:62;29506:18;;1913:55:294;29174:356:640;10528:102:26;10596:27;10606:2;10610:8;10596:27;;;;;;;;;;;;:9;:27::i;13864:231:350:-;14013:14;14050:38;:36;:38::i;19258:189:26:-;19368:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;19368:29:26;-1:-1:-1;;;;;19368:29:26;;;;;;;;;19412:28;;19368:24;;19412:28;;;;;;;19258:189;;;:::o;14333:2082::-;14443:35;14481:21;14494:7;14481:12;:21::i;:::-;14443:59;;14539:4;-1:-1:-1;;;;;14517:26:26;:13;:18;;;-1:-1:-1;;;;;14517:26:26;;14513:67;;14552:28;;-1:-1:-1;;;14552:28:26;;;;;;;;;;;14513:67;14591:22;14633:4;-1:-1:-1;;;;;14617:20:26;:12;:10;:12::i;:::-;-1:-1:-1;;;;;14617:20:26;;:72;;;;14653:36;14670:4;14676:12;:10;:12::i;14653:36::-;14617:124;;;;14729:12;:10;:12::i;:::-;-1:-1:-1;;;;;14705:36:26;:20;14717:7;14705:11;:20::i;:::-;-1:-1:-1;;;;;14705:36:26;;14617:124;14591:151;;14758:17;14753:66;;14784:35;;-1:-1:-1;;;14784:35:26;;;;;;;;;;;14753:66;-1:-1:-1;;;;;14833:16:26;;14829:52;;14858:23;;-1:-1:-1;;;14858:23:26;;;;;;;;;;;14829:52;14892:43;14914:4;14920:2;14924:7;14933:1;14892:21;:43::i;:::-;14997:35;15014:1;15018:7;15027:4;14997:8;:35::i;:::-;-1:-1:-1;;;;;15322:18:26;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;;;;;15322:31:26;;;-1:-1:-1;;;;;15322:31:26;;;-1:-1:-1;;15322:31:26;;;;;;;15367:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;15367:29:26;;;;;;;;;;;15445:20;;;:11;:20;;;;;;15479:18;;-1:-1:-1;;;;;;15511:49:26;;;;-1:-1:-1;;;15544:15:26;15511:49;;;;;;;;;;15830:11;;15889:24;;;;;15931:13;;15445:20;;15889:24;;15931:13;15927:377;;16138:13;;16123:11;:28;16119:171;;16175:20;;16243:28;;;;-1:-1:-1;;;;;16217:54:26;-1:-1:-1;;;16217:54:26;-1:-1:-1;;;;;;16217:54:26;;;-1:-1:-1;;;;;16175:20:26;;16217:54;;;;16119:171;15298:1016;;;16348:7;16344:2;-1:-1:-1;;;;;16329:27:26;16338:4;-1:-1:-1;;;;;16329:27:26;-1:-1:-1;;;;;;;;;;;16329:27:26;;;;;;;;;16366:42;8090:211:350;2704:570:86;2778:12;512:270;2875:7;;;;:4;:7;:::i;:::-;2900:21;;;;;;;;:::i;:::-;2939:15;;;;2972:25;;;;;;;;:::i;:::-;3031:8;;;;:4;:8;:::i;:::-;3015:26;;;;;;;:::i;:::-;;;;;;;;;3059:13;;;;3090:18;;;;3126:13;;;;;;;;:::i;:::-;3157:27;;;;;;;;:::i;:::-;3202:25;;;;;;;;:::i;:::-;2821:446;;;;;;30268:25:640;;;;-1:-1:-1;;;;;30367:15:640;;;30347:18;;;30340:43;30419:15;;;30399:18;;;30392:43;30451:18;;;30444:34;;;;30515:15;;;30494:19;;;30487:44;30547:19;;;30540:35;;;;30591:19;;;30584:35;30635:19;;;30628:35;30700:15;;;30679:19;;;30672:44;-1:-1:-1;;;;;30791:15:640;;;3245:8:86;30770:19:640;;;30763:44;;;;30844:16;;30823:19;;;30816:45;3245:8:86;;;30877:19:640;;;30870:36;30240:19;;2821:446:86;;;;;;;;;;;;2802:465;;2704:570;;;:::o;3890:176:467:-;3967:7;3993:66;4026:20;:18;:20::i;:::-;4048:10;8710:57:466;;-1:-1:-1;;;8710:57:466;;;32952:27:640;32995:11;;;32988:27;;;33031:12;;;33024:28;;;8674:7:466;;33068:12:640;;8710:57:466;;;;;;;;;;;;8700:68;;;;;;8693:75;;8581:194;;;;;3781:227;3859:7;3879:17;3898:18;3920:27;3931:4;3937:9;3920:10;:27::i;:::-;3878:69;;;;3957:18;3969:5;3957:11;:18::i;:::-;-1:-1:-1;3992:9:466;3781:227;-1:-1:-1;;;3781:227:466:o;5036:168:71:-;5114:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5114:23:71;;;;;;;;;;:30;;-1:-1:-1;;5114:30:71;5140:4;5114:30;;;5159:38;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;3690:253:72:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:72;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:72;;;-1:-1:-1;;;;;;3846:40:72;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5253:204:71:-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:71;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:71;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;11459:576:350:-;11804:34;-1:-1:-1;;;;;;;;;;;11835:1:350;11804:7;:34::i;:::-;11803:35;:57;;;;-1:-1:-1;;;;;;11842:18:350;;;;11803:57;:77;;;;-1:-1:-1;;;;;;11864:16:350;;;;11803:77;11799:230;;;11901:28;-1:-1:-1;;;;;;;;;;;11924:4:350;11901:7;:28::i;:::-;11900:29;:60;;;;;11934:26;-1:-1:-1;;;;;;;;;;;11957:2:350;11934:7;:26::i;:::-;11933:27;11900:60;11896:123;;;11980:24;;-1:-1:-1;;;11980:24:350;;31119:2:640;11980:24:350;;;31101:21:640;31158:2;31138:18;;;31131:30;-1:-1:-1;;;31177:18:640;;;31170:44;31231:18;;11980:24:350;30917:338:640;508:385:286;659:12;655:49;;687:7;;655:49;-1:-1:-1;;;;;718:25:286;;408:42;718:25;714:173;;;759:37;783:3;788:7;759:23;:37::i;714:173::-;827:49;845:9;856:5;863:3;868:7;827:17;:49::i;6922:387:290:-;7063:12;7095:18;7106:6;7095:10;:18::i;:::-;7087:69;;;;-1:-1:-1;;;7087:69:290;;31462:2:640;7087:69:290;;;31444:21:640;31501:2;31481:18;;;31474:30;31540:34;31520:18;;;31513:62;-1:-1:-1;;;31591:18:640;;;31584:36;31637:19;;7087:69:290;31260:402:640;7087:69:290;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:290;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:290:o;19928:694:26:-;20086:4;20133:2;-1:-1:-1;;;;;20106:47:26;;20154:12;:10;:12::i;:::-;20168:4;20174:7;20183:5;20106:83;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20106:83:26;;;;;;;;-1:-1:-1;;20106:83:26;;;;;;;;;;;;:::i;:::-;;;20102:514;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20381:13:26;;20377:229;;20426:40;;-1:-1:-1;;;20426:40:26;;;;;;;;;;;20377:229;20566:6;20560:13;20551:6;20547:2;20543:15;20536:38;20102:514;-1:-1:-1;;;;;;20257:66:26;-1:-1:-1;;;20257:66:26;;-1:-1:-1;19928:694:26;;;;;;:::o;776:69:461:-;4910:13:433;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:433;;;;;;;:::i;670:242:211:-;4910:13:433;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:433;;;;;;;:::i;:::-;787:9:211::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:211::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:211;:45;;-1:-1:-1;;850:45:211::1;::::0;::::1;;::::0;;;::::1;::::0;;831:3;::::1;::::0;::::1;:::i;:::-;;;;782:124;;2382:202:26::0;4910:13:433;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:433;;;;;;;:::i;:::-;2496:13:26;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2519:17:26;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2732:7:26;2546:13:::1;:31:::0;-1:-1:-1;;2382:202:26:o;441:447:69:-;829:52;839:30;871:9;829;:52::i;2306:147:467:-;4910:13:433;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:433;;;;;;;:::i;:::-;2408:38:467::1;2432:4;2438:7;2408:23;:38::i;1970:109:435:-:0;4910:13:433;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:433;;;;;;;:::i;:::-;1772:1:435::1;2050:7;:22:::0;1970:109::o;10990:1708:26:-;11131:13;;-1:-1:-1;;;;;11158:16:26;;11154:48;;11183:19;;-1:-1:-1;;;11183:19:26;;;;;;;;;;;11154:48;11216:13;11212:44;;11238:18;;-1:-1:-1;;;11238:18:26;;;;;;;;;;;11212:44;11267:61;11297:1;11301:2;11305:12;11319:8;11267:21;:61::i;:::-;-1:-1:-1;;;;;11599:16:26;;;;;;:12;:16;;;;;;;;:44;;-1:-1:-1;;;;;;11657:49:26;;-1:-1:-1;;;;;11599:44:26;;;;;;;11657:49;;;-1:-1:-1;;;;;;;;;11599:44:26;;;;;;11657:49;;;;;;;;;;;;;;;;11721:25;;;:11;:25;;;;;;:35;;-1:-1:-1;;;;;;11770:66:26;;;-1:-1:-1;;;11820:15:26;11770:66;;;;;;;;;;;;;11721:25;;11914:23;;;;11956:15;;:13;:15::i;:::-;11952:618;;;11991:308;12021:38;;12046:12;;-1:-1:-1;;;;;12021:38:26;;;12038:1;;-1:-1:-1;;;;;;;;;;;12021:38:26;12038:1;;12021:38;12086:69;12125:1;12129:2;12133:14;;;;;;12149:5;12086:30;:69::i;:::-;12081:172;;12190:40;;-1:-1:-1;;;12190:40:26;;;;;;;;;;;12081:172;12294:3;12279:12;:18;11991:308;;12378:12;12361:13;;:29;12357:43;;12392:8;;;12357:43;11952:618;;;12439:117;12469:40;;12494:14;;;;;-1:-1:-1;;;;;12469:40:26;;;12486:1;;-1:-1:-1;;;;;;;;;;;12469:40:26;12486:1;;12469:40;12551:3;12536:12;:18;12439:117;;11952:618;-1:-1:-1;12583:13:26;:28;12631:60;12660:1;12664:2;12668:12;12682:8;12631:60;:::i;1058:401:211:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:211;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:461;;12592:127:350:o;2842:160:467:-;2895:7;2921:74;1595:95;2955:17;4386:12;;;4302:103;2955:17;4731:15;;3184:73;;;;;;35436:25:640;;;35477:18;;;35470:34;;;35520:18;;;35513:34;;;3228:13:467;35563:18:640;;;35556:34;3251:4:467;35606:19:640;;;35599:61;3148:7:467;;35408:19:640;;3184:73:467;;;;;;;;;;;;3174:84;;;;;;3167:91;;3008:257;;;;;;2265:730:466;2346:7;2355:12;2383:9;:16;2403:2;2383:22;2379:610;;;2719:4;2704:20;;2698:27;2768:4;2753:20;;2747:27;2825:4;2810:20;;2804:27;2421:9;2796:36;2866:25;2877:4;2796:36;2698:27;2747;2866:10;:25::i;:::-;2859:32;;;;;;;;;2379:610;-1:-1:-1;2938:1:466;;-1:-1:-1;2942:35:466;2379:610;2265:730;;;;;:::o;570:631::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:561;;;570:631;:::o;634:561::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:465;;;788:34;;-1:-1:-1;;;788:34:466;;33293:2:640;788:34:466;;;33275:21:640;33332:2;33312:18;;;33305:30;-1:-1:-1;;;33351:18:640;;;33344:54;33415:18;;788:34:466;33091:348:640;730:465:466;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:356;;;903:41;;-1:-1:-1;;;903:41:466;;33646:2:640;903:41:466;;;33628:21:640;33685:2;33665:18;;;33658:30;33724:33;33704:18;;;33697:61;33775:18;;903:41:466;33444:355:640;839:356:466;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:234;;;1020:44;;-1:-1:-1;;;1020:44:466;;34006:2:640;1020:44:466;;;33988:21:640;34045:2;34025:18;;;34018:30;34084:34;34064:18;;;34057:62;-1:-1:-1;;;34135:18:640;;;34128:32;34177:19;;1020:44:466;33804:398:640;961:234:466;1094:30;1085:5;:39;;;;;;;;:::i;:::-;;1081:114;;;1140:44;;-1:-1:-1;;;1140:44:466;;34409:2:640;1140:44:466;;;34391:21:640;34448:2;34428:18;;;34421:30;34487:34;34467:18;;;34460:62;-1:-1:-1;;;34538:18:640;;;34531:32;34580:19;;1140:44:466;34207:398:640;2532:292:286;2714:12;2732:2;-1:-1:-1;;;;;2732:7:286;2748:5;2732:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:46;;;2777:7;2769:48;;;;-1:-1:-1;;;2769:48:286;;35022:2:640;2769:48:286;;;35004:21:640;35061:2;35041:18;;;35034:30;-1:-1:-1;;;35080:18:640;;;35073:58;35148:18;;2769:48:286;34820:352:640;2073:396:286;2234:3;-1:-1:-1;;;;;2225:12:286;:5;-1:-1:-1;;;;;2225:12:286;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:286;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:286;;2353:3;2358:7;2322:30;:44::i;2280:183::-;2397:55;-1:-1:-1;;;;;2397:34:286;;2432:5;2439:3;2444:7;2397:34;:55::i;7529:692:290:-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:290;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:290;;;;;;;;:::i;2459:297:467:-;4910:13:433;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:433;;;;;;;:::i;:::-;2592:22:467;;::::1;::::0;;::::1;::::0;2648:25;;;;;::::1;::::0;2683:12:::1;:25:::0;;;;2718:15:::1;:31:::0;2459:297::o;5189:1603:466:-;5315:7;;-1:-1:-1;;;;;6226:79:466;;6222:161;;;-1:-1:-1;6337:1:466;;-1:-1:-1;6341:30:466;6321:51;;6222:161;6396:1;:7;;6401:2;6396:7;;:18;;;;;6407:1;:7;;6412:2;6407:7;;6396:18;6392:100;;;-1:-1:-1;6446:1:466;;-1:-1:-1;6450:30:466;6430:51;;6392:100;6603:24;;;6586:14;6603:24;;;;;;;;;35898:25:640;;;35971:4;35959:17;;35939:18;;;35932:45;;;;35993:18;;;35986:34;;;36036:18;;;36029:34;;;6603:24:466;;35870:19:640;;6603:24:466;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6603:24:466;;-1:-1:-1;;6603:24:466;;;-1:-1:-1;;;;;;;6641:20:466;;6637:101;;6693:1;6697:29;6677:50;;;;;;;6637:101;6756:6;-1:-1:-1;6764:20:466;;-1:-1:-1;5189:1603:466;;;;;;;;:::o;735:205:228:-;847:86;867:5;897:23;;;922:2;926:5;874:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;874:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:228;-1:-1:-1;;;;;;874:58:228;;;;;;;;;;847:19;:86::i;946:241::-;1111:68;;-1:-1:-1;;;;;36332:15:640;;;1111:68:228;;;36314:34:640;36384:15;;36364:18;;;36357:43;36416:18;;;36409:34;;;1084:96:228;;1104:5;;-1:-1:-1;;;1134:27:228;36249:18:640;;1111:68:228;36074:375:640;3241:706:228;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:228;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:228;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:228;;36656:2:640;3845:85:228;;;36638:21:640;36695:2;36675:18;;;36668:30;36734:34;36714:18;;;36707:62;-1:-1:-1;;;36785:18:640;;;36778:40;36835:19;;3845:85:228;36454:406:640;3827:223:290;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:290;;37474:2:640;5194:60:290;;;37456:21:640;37513:2;37493:18;;;37486:30;37552:31;37532:18;;;37525:59;37601:18;;5194:60:290;37272:353:640;5194:60:290;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:290;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:290:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:640;82:20;;-1:-1:-1;;;;;131:31:640;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:348::-;244:8;254:6;308:3;301:4;293:6;289:17;285:27;275:55;;326:1;323;316:12;275:55;-1:-1:-1;349:20:640;;-1:-1:-1;;;;;381:30:640;;378:50;;;424:1;421;414:12;378:50;461:4;453:6;449:17;437:29;;513:3;506:4;497:6;489;485:19;481:30;478:39;475:59;;;530:1;527;520:12;545:485;625:6;633;641;694:2;682:9;673:7;669:23;665:32;662:52;;;710:1;707;700:12;662:52;733:29;752:9;733:29;:::i;:::-;723:39;;813:2;802:9;798:18;785:32;-1:-1:-1;;;;;832:6:640;829:30;826:50;;;872:1;869;862:12;826:50;911:59;962:7;953:6;942:9;938:22;911:59;:::i;:::-;545:485;;989:8;;-1:-1:-1;885:85:640;;-1:-1:-1;;;;545:485:640:o;1217:131::-;-1:-1:-1;;;;;;1291:32:640;;1281:43;;1271:71;;1338:1;1335;1328:12;1353:245;1411:6;1464:2;1452:9;1443:7;1439:23;1435:32;1432:52;;;1480:1;1477;1470:12;1432:52;1519:9;1506:23;1538:30;1562:5;1538:30;:::i;1795:258::-;1867:1;1877:113;1891:6;1888:1;1885:13;1877:113;;;1967:11;;;1961:18;1948:11;;;1941:39;1913:2;1906:10;1877:113;;;2008:6;2005:1;2002:13;1999:48;;;-1:-1:-1;;2043:1:640;2025:16;;2018:27;1795:258::o;2058:::-;2100:3;2138:5;2132:12;2165:6;2160:3;2153:19;2181:63;2237:6;2230:4;2225:3;2221:14;2214:4;2207:5;2203:16;2181:63;:::i;:::-;2298:2;2277:15;-1:-1:-1;;2273:29:640;2264:39;;;;2305:4;2260:50;;2058:258;-1:-1:-1;;2058:258:640:o;2321:220::-;2470:2;2459:9;2452:21;2433:4;2490:45;2531:2;2520:9;2516:18;2508:6;2490:45;:::i;2546:104::-;-1:-1:-1;;;;;2612:31:640;2600:44;;2546:104::o;2655:203::-;-1:-1:-1;;;;;2819:32:640;;;;2801:51;;2789:2;2774:18;;2655:203::o;2863:180::-;2922:6;2975:2;2963:9;2954:7;2950:23;2946:32;2943:52;;;2991:1;2988;2981:12;2943:52;-1:-1:-1;3014:23:640;;2863:180;-1:-1:-1;2863:180:640:o;3048:254::-;3116:6;3124;3177:2;3165:9;3156:7;3152:23;3148:32;3145:52;;;3193:1;3190;3183:12;3145:52;3216:29;3235:9;3216:29;:::i;:::-;3206:39;3292:2;3277:18;;;;3264:32;;-1:-1:-1;;;3048:254:640:o;3307:186::-;3366:6;3419:2;3407:9;3398:7;3394:23;3390:32;3387:52;;;3435:1;3432;3425:12;3387:52;3458:29;3477:9;3458:29;:::i;3498:127::-;3559:10;3554:3;3550:20;3547:1;3540:31;3590:4;3587:1;3580:15;3614:4;3611:1;3604:15;3630:275;3701:2;3695:9;3766:2;3747:13;;-1:-1:-1;;3743:27:640;3731:40;;-1:-1:-1;;;;;3786:34:640;;3822:22;;;3783:62;3780:88;;;3848:18;;:::i;:::-;3884:2;3877:22;3630:275;;-1:-1:-1;3630:275:640:o;3910:407::-;3975:5;-1:-1:-1;;;;;4001:6:640;3998:30;3995:56;;;4031:18;;:::i;:::-;4069:57;4114:2;4093:15;;-1:-1:-1;;4089:29:640;4120:4;4085:40;4069:57;:::i;:::-;4060:66;;4149:6;4142:5;4135:21;4189:3;4180:6;4175:3;4171:16;4168:25;4165:45;;;4206:1;4203;4196:12;4165:45;4255:6;4250:3;4243:4;4236:5;4232:16;4219:43;4309:1;4302:4;4293:6;4286:5;4282:18;4278:29;4271:40;3910:407;;;;;:::o;4322:222::-;4365:5;4418:3;4411:4;4403:6;4399:17;4395:27;4385:55;;4436:1;4433;4426:12;4385:55;4458:80;4534:3;4525:6;4512:20;4505:4;4497:6;4493:17;4458:80;:::i;4549:390::-;4627:6;4635;4688:2;4676:9;4667:7;4663:23;4659:32;4656:52;;;4704:1;4701;4694:12;4656:52;4740:9;4727:23;4717:33;;4801:2;4790:9;4786:18;4773:32;-1:-1:-1;;;;;4820:6:640;4817:30;4814:50;;;4860:1;4857;4850:12;4814:50;4883;4925:7;4916:6;4905:9;4901:22;4883:50;:::i;:::-;4873:60;;;4549:390;;;;;:::o;4944:328::-;5021:6;5029;5037;5090:2;5078:9;5069:7;5065:23;5061:32;5058:52;;;5106:1;5103;5096:12;5058:52;5129:29;5148:9;5129:29;:::i;:::-;5119:39;;5177:38;5211:2;5200:9;5196:18;5177:38;:::i;:::-;5167:48;;5262:2;5251:9;5247:18;5234:32;5224:42;;4944:328;;;;;:::o;5644:701::-;5755:6;5763;5771;5824:2;5812:9;5803:7;5799:23;5795:32;5792:52;;;5840:1;5837;5830:12;5792:52;5880:9;5867:23;-1:-1:-1;;;;;5950:2:640;5942:6;5939:14;5936:34;;;5966:1;5963;5956:12;5936:34;5989:22;;;;6045:3;6027:16;;;6023:26;6020:46;;;6062:1;6059;6052:12;6020:46;6085:2;;-1:-1:-1;6140:2:640;6125:18;;6112:32;;6156:16;;;6153:36;;;6185:1;6182;6175:12;6153:36;;6224:61;6277:7;6266:8;6255:9;6251:24;6224:61;:::i;6639:248::-;6707:6;6715;6768:2;6756:9;6747:7;6743:23;6739:32;6736:52;;;6784:1;6781;6774:12;6736:52;-1:-1:-1;;6807:23:640;;;6877:2;6862:18;;;6849:32;;-1:-1:-1;6639:248:640:o;6892:274::-;-1:-1:-1;;;;;7084:32:640;;;;7066:51;;7148:2;7133:18;;7126:34;7054:2;7039:18;;6892:274::o;7171:254::-;7239:6;7247;7300:2;7288:9;7279:7;7275:23;7271:32;7268:52;;;7316:1;7313;7306:12;7268:52;7352:9;7339:23;7329:33;;7381:38;7415:2;7404:9;7400:18;7381:38;:::i;:::-;7371:48;;7171:254;;;;;:::o;7430:118::-;7516:5;7509:13;7502:21;7495:5;7492:32;7482:60;;7538:1;7535;7528:12;7553:241;7609:6;7662:2;7650:9;7641:7;7637:23;7633:32;7630:52;;;7678:1;7675;7668:12;7630:52;7717:9;7704:23;7736:28;7758:5;7736:28;:::i;8342:322::-;8411:6;8464:2;8452:9;8443:7;8439:23;8435:32;8432:52;;;8480:1;8477;8470:12;8432:52;8520:9;8507:23;-1:-1:-1;;;;;8545:6:640;8542:30;8539:50;;;8585:1;8582;8575:12;8539:50;8608;8650:7;8641:6;8630:9;8626:22;8608:50;:::i;8669:322::-;8746:6;8754;8762;8815:2;8803:9;8794:7;8790:23;8786:32;8783:52;;;8831:1;8828;8821:12;8783:52;8867:9;8854:23;8844:33;;8896:38;8930:2;8919:9;8915:18;8896:38;:::i;8996:315::-;9061:6;9069;9122:2;9110:9;9101:7;9097:23;9093:32;9090:52;;;9138:1;9135;9128:12;9090:52;9161:29;9180:9;9161:29;:::i;:::-;9151:39;;9240:2;9229:9;9225:18;9212:32;9253:28;9275:5;9253:28;:::i;:::-;9300:5;9290:15;;;8996:315;;;;;:::o;9316:626::-;9413:6;9421;9474:2;9462:9;9453:7;9449:23;9445:32;9442:52;;;9490:1;9487;9480:12;9442:52;9530:9;9517:23;-1:-1:-1;;;;;9600:2:640;9592:6;9589:14;9586:34;;;9616:1;9613;9606:12;9586:34;9654:6;9643:9;9639:22;9629:32;;9699:7;9692:4;9688:2;9684:13;9680:27;9670:55;;9721:1;9718;9711:12;9670:55;9761:2;9748:16;9787:2;9779:6;9776:14;9773:34;;;9803:1;9800;9793:12;9773:34;9856:7;9851:2;9841:6;9838:1;9834:14;9830:2;9826:23;9822:32;9819:45;9816:65;;;9877:1;9874;9867:12;9816:65;9908:2;9900:11;;;;;9930:6;;-1:-1:-1;9316:626:640;;-1:-1:-1;;;;9316:626:640:o;9947:801::-;10107:4;10136:2;10176;10165:9;10161:18;10206:2;10195:9;10188:21;10229:6;10264;10258:13;10295:6;10287;10280:22;10333:2;10322:9;10318:18;10311:25;;10395:2;10385:6;10382:1;10378:14;10367:9;10363:30;10359:39;10345:53;;10433:2;10425:6;10421:15;10454:1;10464:255;10478:6;10475:1;10472:13;10464:255;;;10571:2;10567:7;10555:9;10547:6;10543:22;10539:36;10534:3;10527:49;10599:40;10632:6;10623;10617:13;10599:40;:::i;:::-;10589:50;-1:-1:-1;10697:12:640;;;;10662:15;;;;10500:1;10493:9;10464:255;;;-1:-1:-1;10736:6:640;;9947:801;-1:-1:-1;;;;;;;9947:801:640:o;10753:277::-;10833:6;10886:2;10874:9;10865:7;10861:23;10857:32;10854:52;;;10902:1;10899;10892:12;10854:52;10941:9;10928:23;10980:1;10973:5;10970:12;10960:40;;10996:1;10993;10986:12;11035:667;11130:6;11138;11146;11154;11207:3;11195:9;11186:7;11182:23;11178:33;11175:53;;;11224:1;11221;11214:12;11175:53;11247:29;11266:9;11247:29;:::i;:::-;11237:39;;11295:38;11329:2;11318:9;11314:18;11295:38;:::i;:::-;11285:48;;11380:2;11369:9;11365:18;11352:32;11342:42;;11435:2;11424:9;11420:18;11407:32;-1:-1:-1;;;;;11454:6:640;11451:30;11448:50;;;11494:1;11491;11484:12;11448:50;11517:22;;11570:4;11562:13;;11558:27;-1:-1:-1;11548:55:640;;11599:1;11596;11589:12;11548:55;11622:74;11688:7;11683:2;11670:16;11665:2;11661;11657:11;11622:74;:::i;:::-;11612:84;;;11035:667;;;;;;;:::o;11707:718::-;11761:5;11814:3;11807:4;11799:6;11795:17;11791:27;11781:55;;11832:1;11829;11822:12;11781:55;11868:6;11855:20;11894:4;-1:-1:-1;;;;;11913:2:640;11910:26;11907:52;;;11939:18;;:::i;:::-;11985:2;11982:1;11978:10;12008:28;12032:2;12028;12024:11;12008:28;:::i;:::-;12070:15;;;12140;;;12136:24;;;12101:12;;;;12172:15;;;12169:35;;;12200:1;12197;12190:12;12169:35;12236:2;12228:6;12224:15;12213:26;;12248:148;12264:6;12259:3;12256:15;12248:148;;;12330:23;12349:3;12330:23;:::i;:::-;12318:36;;12281:12;;;;12374;;;;12248:148;;12430:173;12498:20;;-1:-1:-1;;;;;12547:31:640;;12537:42;;12527:70;;12593:1;12590;12583:12;12608:1420;12803:6;12811;12819;12827;12835;12843;12851;12859;12867;12875;12928:3;12916:9;12907:7;12903:23;12899:33;12896:53;;;12945:1;12942;12935:12;12896:53;12968:29;12987:9;12968:29;:::i;:::-;12958:39;;13048:2;13037:9;13033:18;13020:32;-1:-1:-1;;;;;13112:2:640;13104:6;13101:14;13098:34;;;13128:1;13125;13118:12;13098:34;13151:50;13193:7;13184:6;13173:9;13169:22;13151:50;:::i;:::-;13141:60;;13254:2;13243:9;13239:18;13226:32;13210:48;;13283:2;13273:8;13270:16;13267:36;;;13299:1;13296;13289:12;13267:36;13322:52;13366:7;13355:8;13344:9;13340:24;13322:52;:::i;:::-;13312:62;;13427:2;13416:9;13412:18;13399:32;13383:48;;13456:2;13446:8;13443:16;13440:36;;;13472:1;13469;13462:12;13440:36;13495:52;13539:7;13528:8;13517:9;13513:24;13495:52;:::i;:::-;13485:62;;13600:3;13589:9;13585:19;13572:33;13556:49;;13630:2;13620:8;13617:16;13614:36;;;13646:1;13643;13636:12;13614:36;;13669:63;13724:7;13713:8;13702:9;13698:24;13669:63;:::i;:::-;13659:73;;;13751:39;13785:3;13774:9;13770:19;13751:39;:::i;:::-;13741:49;;13809:39;13843:3;13832:9;13828:19;13809:39;:::i;:::-;13799:49;;13867:39;13901:3;13890:9;13886:19;13867:39;:::i;:::-;13857:49;;13925:39;13959:3;13948:9;13944:19;13925:39;:::i;:::-;13915:49;;13983:39;14017:3;14006:9;14002:19;13983:39;:::i;:::-;13973:49;;12608:1420;;;;;;;;;;;;;:::o;14033:260::-;14101:6;14109;14162:2;14150:9;14141:7;14137:23;14133:32;14130:52;;;14178:1;14175;14168:12;14130:52;14201:29;14220:9;14201:29;:::i;:::-;14191:39;;14249:38;14283:2;14272:9;14268:18;14249:38;:::i;14298:127::-;14359:10;14354:3;14350:20;14347:1;14340:31;14390:4;14387:1;14380:15;14414:4;14411:1;14404:15;14430:349;14583:2;14568:18;;14616:1;14605:13;;14595:144;;14661:10;14656:3;14652:20;14649:1;14642:31;14696:4;14693:1;14686:15;14724:4;14721:1;14714:15;14595:144;14748:25;;;14430:349;:::o;14784:267::-;14873:6;14868:3;14861:19;14925:6;14918:5;14911:4;14906:3;14902:14;14889:43;-1:-1:-1;14977:1:640;14952:16;;;14970:4;14948:27;;;14941:38;;;;15033:2;15012:15;;;-1:-1:-1;;15008:29:640;14999:39;;;14995:50;;14784:267::o;15056:247::-;15215:2;15204:9;15197:21;15178:4;15235:62;15293:2;15282:9;15278:18;15270:6;15262;15235:62;:::i;15308:380::-;15387:1;15383:12;;;;15430;;;15451:61;;15505:4;15497:6;15493:17;15483:27;;15451:61;15558:2;15550:6;15547:14;15527:18;15524:38;15521:161;;;15604:10;15599:3;15595:20;15592:1;15585:31;15639:4;15636:1;15629:15;15667:4;15664:1;15657:15;15693:304;-1:-1:-1;;;;;15923:15:640;;;15905:34;;15975:15;;15970:2;15955:18;;15948:43;15855:2;15840:18;;15693:304::o;16002:245::-;16069:6;16122:2;16110:9;16101:7;16097:23;16093:32;16090:52;;;16138:1;16135;16128:12;16090:52;16170:9;16164:16;16189:28;16211:5;16189:28;:::i;16252:338::-;16454:2;16436:21;;;16493:2;16473:18;;;16466:30;-1:-1:-1;;;16527:2:640;16512:18;;16505:44;16581:2;16566:18;;16252:338::o;16954:127::-;17015:10;17010:3;17006:20;17003:1;16996:31;17046:4;17043:1;17036:15;17070:4;17067:1;17060:15;17086:168;17126:7;17192:1;17188;17184:6;17180:14;17177:1;17174:21;17169:1;17162:9;17155:17;17151:45;17148:71;;;17199:18;;:::i;:::-;-1:-1:-1;17239:9:640;;17086:168::o;17259:217::-;17299:1;17325;17315:132;;17369:10;17364:3;17360:20;17357:1;17350:31;17404:4;17401:1;17394:15;17432:4;17429:1;17422:15;17315:132;-1:-1:-1;17461:9:640;;17259:217::o;19383:522::-;19461:4;19467:6;19527:11;19514:25;19621:2;19617:7;19606:8;19590:14;19586:29;19582:43;19562:18;19558:68;19548:96;;19640:1;19637;19630:12;19548:96;19667:33;;19719:20;;;-1:-1:-1;;;;;;19751:30:640;;19748:50;;;19794:1;19791;19784:12;19748:50;19827:4;19815:17;;-1:-1:-1;19858:14:640;19854:27;;;19844:38;;19841:58;;;19895:1;19892;19885:12;19910:504;19969:5;19976:6;20036:3;20023:17;20122:2;20118:7;20107:8;20091:14;20087:29;20083:43;20063:18;20059:68;20049:96;;20141:1;20138;20131:12;20049:96;20169:33;;20273:4;20260:18;;;-1:-1:-1;20221:21:640;;-1:-1:-1;;;;;;20290:30:640;;20287:50;;;20333:1;20330;20323:12;20287:50;20383:6;20367:14;20363:27;20353:8;20349:42;20346:62;;;20404:1;20401;20394:12;20528:1542;20719:2;20708:9;20701:21;20731:66;20793:2;20782:9;20778:18;20750:26;20769:6;20750:26;:::i;:::-;20731:66;:::i;:::-;20682:4;20826:35;20857:2;20849:6;20845:15;20826:35;:::i;:::-;20870:52;20918:2;20907:9;20903:18;20889:12;20870:52;:::i;:::-;;20983:2;20975:6;20971:15;20958:29;20953:2;20942:9;20938:18;20931:57;21019:35;21050:2;21042:6;21038:15;21019:35;:::i;:::-;21063:55;21113:3;21102:9;21098:19;21082:14;21063:55;:::i;:::-;;21163:57;21215:3;21207:6;21203:16;21195:6;21163:57;:::i;:::-;21239:6;21282:2;21276:3;21265:9;21261:19;21254:31;21308:77;21380:3;21369:9;21365:19;21351:12;21335:14;21308:77;:::i;:::-;21294:91;;21447:3;21439:6;21435:16;21422:30;21416:3;21405:9;21401:19;21394:59;21515:3;21507:6;21503:16;21490:30;21484:3;21473:9;21469:19;21462:59;21552:36;21583:3;21575:6;21571:16;21552:36;:::i;:::-;21530:58;;21607:3;21619:54;21669:2;21658:9;21654:18;21638:14;21619:54;:::i;:::-;21704:35;21735:2;21727:6;21723:15;21704:35;:::i;:::-;21682:57;;;21758:3;21770:54;21820:2;21809:9;21805:18;21789:14;-1:-1:-1;;;;;20485:31:640;20473:44;;20419:104;21770:54;21855:35;21886:2;21878:6;21874:15;21855:35;:::i;:::-;21833:57;;;21909:3;21921:54;21971:2;21960:9;21956:18;21940:14;-1:-1:-1;;;;;20485:31:640;20473:44;;20419:104;21921:54;22024:15;;;;22011:29;21991:18;;;;21984:57;;;;-1:-1:-1;22058:6:640;20528:1542;-1:-1:-1;20528:1542:640:o;22484:128::-;22524:3;22555:1;22551:6;22548:1;22545:13;22542:39;;;22561:18;;:::i;:::-;-1:-1:-1;22597:9:640;;22484:128::o;22617:127::-;22678:10;22673:3;22669:20;22666:1;22659:31;22709:4;22706:1;22699:15;22733:4;22730:1;22723:15;23275:135;23314:3;-1:-1:-1;;23335:17:640;;23332:43;;;23355:18;;:::i;:::-;-1:-1:-1;23402:1:640;23391:13;;23275:135::o;24029:784::-;-1:-1:-1;;;24435:3:640;24428:36;24410:3;24493:6;24487:13;24509:62;24564:6;24559:2;24554:3;24550:12;24543:4;24535:6;24531:17;24509:62;:::i;:::-;-1:-1:-1;;;24630:2:640;24590:16;;;24622:11;;;24615:40;24680:13;;24702:63;24680:13;24751:2;24743:11;;24736:4;24724:17;;24702:63;:::i;:::-;24785:17;24804:2;24781:26;;24029:784;-1:-1:-1;;;;24029:784:640:o;25175:339::-;25377:2;25359:21;;;25416:2;25396:18;;;25389:30;-1:-1:-1;;;25450:2:640;25435:18;;25428:45;25505:2;25490:18;;25175:339::o;25859:186::-;25918:6;25971:2;25959:9;25950:7;25946:23;25942:32;25939:52;;;25987:1;25984;25977:12;25939:52;26010:29;26029:9;26010:29;:::i;28103:125::-;28143:4;28171:1;28168;28165:8;28162:34;;;28176:18;;:::i;:::-;-1:-1:-1;28213:9:640;;28103:125::o;28233:383::-;28430:2;28419:9;28412:21;28393:4;28456:45;28497:2;28486:9;28482:18;28474:6;28456:45;:::i;:::-;28549:9;28541:6;28537:22;28532:2;28521:9;28517:18;28510:50;28577:33;28603:6;28595;28577:33;:::i;:::-;28569:41;28233:383;-1:-1:-1;;;;;28233:383:640:o;28621:407::-;28823:2;28805:21;;;28862:2;28842:18;;;28835:30;28901:34;28896:2;28881:18;;28874:62;-1:-1:-1;;;28967:2:640;28952:18;;28945:41;29018:3;29003:19;;28621:407::o;29033:136::-;29072:3;29100:5;29090:39;;29109:18;;:::i;:::-;-1:-1:-1;;;29145:18:640;;29033:136::o;29535:271::-;29718:6;29710;29705:3;29692:33;29674:3;29744:16;;29769:13;;;29744:16;29535:271;-1:-1:-1;29535:271:640:o;31667:274::-;31796:3;31834:6;31828:13;31850:53;31896:6;31891:3;31884:4;31876:6;31872:17;31850:53;:::i;:::-;31919:16;;;;;31667:274;-1:-1:-1;;31667:274:640:o;31946:489::-;-1:-1:-1;;;;;32215:15:640;;;32197:34;;32267:15;;32262:2;32247:18;;32240:43;32314:2;32299:18;;32292:34;;;32362:3;32357:2;32342:18;;32335:31;;;32140:4;;32383:46;;32409:19;;32401:6;32383:46;:::i;32440:249::-;32509:6;32562:2;32550:9;32541:7;32537:23;32533:32;32530:52;;;32578:1;32575;32568:12;32530:52;32610:9;32604:16;32629:30;32653:5;32629:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "cancel(uint256)": "40e58ee5",
    "contractURI()": "e8a3d485",
    "getApproved(uint256)": "081812fc",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getFlatPlatformFeeInfo()": "e57553da",
    "getPlatformFeeInfo()": "d45573f6",
    "getPlatformFeeType()": "f28083c3",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": "e1591634",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isTrustedForwarder(address)": "572b6c05",
    "mintTo(address,string)": "0075a317",
    "mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "439c7be5",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "operatorRestriction()": "504c6e01",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "renounceRole(bytes32,address)": "36568abe",
    "revoke(uint256)": "20c5429b",
    "revokeRole(bytes32,address)": "d547741f",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setFlatPlatformFeeInfo(address,uint256)": "7e54523c",
    "setOperatorRestriction(bool)": "32f0cd64",
    "setOwner(address)": "13af4035",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPlatformFeeType(uint8)": "b6f10c79",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "setTokenURI(uint256,string)": "162094c4",
    "subscribeToRegistry(address)": "57fd8455",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalMinted()": "a2309ff8",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "252e82e8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restriction\",\"type\":\"bool\"}],\"name\":\"OperatorRestriction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdMinted\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdMinted\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"mintRequest\",\"type\":\"tuple\"}],\"name\":\"TokensMintedWithSignature\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlatPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeType\",\"outputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_platformFeeBps\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenIdMinted\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"mintWithSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorRestriction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_flatFee\",\"type\":\"uint256\"}],\"name\":\"setFlatPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_restriction\",\"type\":\"bool\"}],\"name\":\"setOperatorRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"_feeType\",\"type\":\"uint8\"}],\"name\":\"setPlatformFeeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_subscription\",\"type\":\"address\"}],\"name\":\"subscribeToRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:description\":\"This contract is a loyalty card NFT collection. Each NFT represents a loyalty card, and the NFT's metadata                      contains the loyalty card's information. A loyalty card's metadata can be updated by an admin of the contract.                      A loyalty card can be cancelled (i.e. 'burned') by its owner or an approved operator. A loyalty card can be revoked                      (i.e. 'burned') without its owner's approval, by an admin of the contract.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {ERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"cancel(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getFlatPlatformFeeInfo()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getPlatformFeeType()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,string,string,address[],address,address,uint128,uint128,address)\":{\"details\":\"Initiliazes the contract, like a constructor.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mintTo(address,string)\":{\"details\":\"Lets an account with MINTER_ROLE mint an NFT. Always mints 1 NFT.\"},\"mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Mints an NFT according to the provided mint request. Always mints 1 NFT.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revoke(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {ERC721-setApprovalForAll}.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"totalMinted()\":{\"details\":\"Returns the total amount of tokens minted in the contract.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_transferFrom}.\"},\"verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call).\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"METADATA_ROLE\":{\"details\":\"Only METADATA_ROLE holders can update NFT metadata.\"},\"MINTER_ROLE\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s.\"},\"REVOKE_ROLE\":{\"details\":\"Only REVOKE_ROLE holders can revoke a loyalty card.\"},\"TRANSFER_ROLE\":{\"details\":\"Only TRANSFER_ROLE holders can have tokens transferred from or to them, during restricted transfers.\"}},\"title\":\"LoyaltyCard\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setFlatPlatformFeeInfo(address,uint256)\":{\"notice\":\"Lets a module admin set a flat fee on primary sales.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"},\"setPlatformFeeType(uint8)\":{\"notice\":\"Lets a module admin set platform fee type.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"setTokenURI(uint256,string)\":{\"notice\":\"Sets the metadata URI for a given NFT.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/loyalty/LoyaltyCard.sol\":\"LoyaltyCard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/eip/ERC721AVirtualApproveUpgradeable.sol\":{\"keccak256\":\"0xf644dda26330df06c005afaa856130ca1717813da3801c295a8684d1d185dfbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c3c26d8e93ae85fe8c955cab7b6eb4ab8e624fe3ace08e497cd8d077c0b53eb\",\"dweb:/ipfs/QmPrwqtYsrvW35ZWhWFhzBWQD24EUGoRdd6cGhgTPE7Fag\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/eip/interface/IERC4906.sol\":{\"keccak256\":\"0xa31c36a97c9133c8a451aaec1aa585537cacd71760eb6c5ce402155313efb392\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f3d6fee0ee338d9d0041e7a094efe2f0cd1d4a05b8b127e4f8928f5d3bac8fc4\",\"dweb:/ipfs/Qmcrgw6xMNvsFBfYh51FmFnRP14EEThSSp4n6F6QeKLhy3\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/DefaultOperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0xbc4433257d90e055dbc4ae1d1e7c08e9ffd37a8ef45a5b9b81b22ae8ca603f29\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://791826c7fcdeccbdfcf5812363d2e239c116bc2f3eaf710820d36f76fb847e49\",\"dweb:/ipfs/QmeSyE4Z5ZAyo9t92YWd69pmAp1riyA35JDY4SmNuLVX9U\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/NFTMetadata.sol\":{\"keccak256\":\"0x73e464d670214f9d1c458d7b1860ab28d2597ca384aba128679e961ccc21b727\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://aa8563a01e173b65e3bf983d813235353b9194af691b7299644e9cc9a00ddcde\",\"dweb:/ipfs/QmdLqMwZPvwmsrydALqrdhDcFFMmfSMVsNZQpDcVRTnhqs\"]},\"contracts/extension/OperatorFilterToggle.sol\":{\"keccak256\":\"0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac\",\"dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA\"]},\"contracts/extension/OperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0xfad890de90b24aeba9ae86cf09ff09b08a6517bdc290b46703bd05b7298ec638\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://9261a7c5d33b1b97a4a470f8d3df7033c2da163e9a5c990746c52ea3af6b763b\",\"dweb:/ipfs/QmXuHJSNnmidTy4HfdK3SeiHni2xLVe8KaR5CdtuhHXDub\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PlatformFee.sol\":{\"keccak256\":\"0x1549722107cf053d4a7fa35f6738b3cff237712a378c7341268512104dea9341\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6da70c4ae6b60e151a5cb20c7c29a464c9a47cb61a228d5b0c8e84c5eac78c80\",\"dweb:/ipfs/QmfHrcdPGkkE9yvYqvm4sHqiKaR1FwXwWCyYM5m9Mqu3zq\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7\",\"dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"contracts/extension/SignatureMintERC721Upgradeable.sol\":{\"keccak256\":\"0x1f9f0cdf37800f14e331b01721130d503d55e60ff86cd3faae15d75e9cb4c8f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a1dce41c6e7522b39c8648742e70867f6ef9ebbadf01249f4d47f850af653a3\",\"dweb:/ipfs/QmX3znQxZSiA9GFvGkCeEHPrA1dy1pAo6tFyAoa2GtKAKM\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/INFTMetadata.sol\":{\"keccak256\":\"0x8f20c212a4388cad101340a8c5642715c8fdeeff9ae1ead00b35ef600dbfe7f8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c2810c812a4d83269b1183f33c4caa5156ceddb559e8a039fe62deaa2897386e\",\"dweb:/ipfs/QmWLyVMsgVrTfNKT6SBKnaEFp4qyKNvD1fTnduJL8WLFuP\"]},\"contracts/extension/interface/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34\",\"dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg\"]},\"contracts/extension/interface/IOperatorFilterToggle.sol\":{\"keccak256\":\"0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674\",\"dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/extension/interface/ISignatureMintERC721.sol\":{\"keccak256\":\"0xc1142e0742252123cff0b0c45ede1e70d43cf01d677abc32d4a16064d5161822\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b8f0a32af882458e1c2b040ebe1bc399bdd765e8a29c35fb881494d414c95cb2\",\"dweb:/ipfs/QmR4Z1N29sPXstFaQrubGjNiQhf26VztyVFHjpDjFLfFAi\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/prebuilts/interface/ILoyaltyCard.sol\":{\"keccak256\":\"0xc06c5e877821127439906a062207c15b94677a154184fd3500bf3d2fd14057b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3b105a63abfb1dfdcf14003583a3bfada3d880e5c438e36e0c31657b3c5f2b56\",\"dweb:/ipfs/QmZEBwkpcbFNj8tg8dDbc5EuqYtL79dChjqPeQfNCM97VA\"]},\"contracts/prebuilts/loyalty/LoyaltyCard.sol\":{\"keccak256\":\"0xf006bd5059961ead8c6406b138df54e8175c69fdaed68f0d9cb74a1d379fba07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed8c0ff13d647f162175ccb9380e37a695a76333c862247361d434e39b233d75\",\"dweb:/ipfs/QmWKm4vbTzALWcZ64CdDPyDYgE8w8TEgAp5DL9jGV73jDA\"]},\"lib/ERC721A-Upgradeable/contracts/IERC721AUpgradeable.sol\":{\"keccak256\":\"0x89447bfc4f1417953e3664234d896b42ebc7d68b3cc27f86f7cdd7addfdd5c1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3916917efc838814adb1e459c968d442d26e304f28af181ff35cffb5ca3ec0be\",\"dweb:/ipfs/QmcVwcrhenj31MCbDn6yvaYsFNkyJmA3isWaJiGhgQeEmQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x016298e66a5810253c6c905e61966bb31c8775c3f3517bf946ff56ee31d6c005\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1723de5ae414f210db039b19e6487c19c2d643483c9be7c445cf481a80c199d2\",\"dweb:/ipfs/QmcBLbmPdZsNngYhA1KDadNUqQZoGACytFWuUH74RC4AXC\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OperatorNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchMetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "restriction",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRestriction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdMinted",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdMinted",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "mintRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMintedWithSignature",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlatPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeType",
          "outputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "_platformFeeBps",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenIdMinted",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintWithSignature",
          "outputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorRestriction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revoke"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_flatFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlatPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_restriction",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorRestriction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "_feeType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeType"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTokenURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_subscription",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "subscribeToRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalMinted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {ERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "cancel(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getFlatPlatformFeeInfo()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getPlatformFeeType()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": {
            "details": "Initiliazes the contract, like a constructor."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "mintTo(address,string)": {
            "details": "Lets an account with MINTER_ROLE mint an NFT. Always mints 1 NFT."
          },
          "mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Mints an NFT according to the provided mint request. Always mints 1 NFT."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revoke(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {ERC721-setApprovalForAll}."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.",
            "params": {
              "_platformFeeBps": "Updated platformFeeBps.",
              "_platformFeeRecipient": "Address to be set as new platformFeeRecipient."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "totalMinted()": {
            "details": "Returns the total amount of tokens minted in the contract."
          },
          "totalSupply()": {
            "details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {ERC721-_transferFrom}."
          },
          "verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call)."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setFlatPlatformFeeInfo(address,uint256)": {
            "notice": "Lets a module admin set a flat fee on primary sales."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "notice": "Updates the platform fee recipient and bps."
          },
          "setPlatformFeeType(uint8)": {
            "notice": "Lets a module admin set platform fee type."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "setTokenURI(uint256,string)": {
            "notice": "Sets the metadata URI for a given NFT."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/loyalty/LoyaltyCard.sol": "LoyaltyCard"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/ERC721AVirtualApproveUpgradeable.sol": {
        "keccak256": "0xf644dda26330df06c005afaa856130ca1717813da3801c295a8684d1d185dfbf",
        "urls": [
          "bzz-raw://9c3c26d8e93ae85fe8c955cab7b6eb4ab8e624fe3ace08e497cd8d077c0b53eb",
          "dweb:/ipfs/QmPrwqtYsrvW35ZWhWFhzBWQD24EUGoRdd6cGhgTPE7Fag"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC4906.sol": {
        "keccak256": "0xa31c36a97c9133c8a451aaec1aa585537cacd71760eb6c5ce402155313efb392",
        "urls": [
          "bzz-raw://f3d6fee0ee338d9d0041e7a094efe2f0cd1d4a05b8b127e4f8928f5d3bac8fc4",
          "dweb:/ipfs/Qmcrgw6xMNvsFBfYh51FmFnRP14EEThSSp4n6F6QeKLhy3"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/DefaultOperatorFiltererUpgradeable.sol": {
        "keccak256": "0xbc4433257d90e055dbc4ae1d1e7c08e9ffd37a8ef45a5b9b81b22ae8ca603f29",
        "urls": [
          "bzz-raw://791826c7fcdeccbdfcf5812363d2e239c116bc2f3eaf710820d36f76fb847e49",
          "dweb:/ipfs/QmeSyE4Z5ZAyo9t92YWd69pmAp1riyA35JDY4SmNuLVX9U"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/NFTMetadata.sol": {
        "keccak256": "0x73e464d670214f9d1c458d7b1860ab28d2597ca384aba128679e961ccc21b727",
        "urls": [
          "bzz-raw://aa8563a01e173b65e3bf983d813235353b9194af691b7299644e9cc9a00ddcde",
          "dweb:/ipfs/QmdLqMwZPvwmsrydALqrdhDcFFMmfSMVsNZQpDcVRTnhqs"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/OperatorFilterToggle.sol": {
        "keccak256": "0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329",
        "urls": [
          "bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac",
          "dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFiltererUpgradeable.sol": {
        "keccak256": "0xfad890de90b24aeba9ae86cf09ff09b08a6517bdc290b46703bd05b7298ec638",
        "urls": [
          "bzz-raw://9261a7c5d33b1b97a4a470f8d3df7033c2da163e9a5c990746c52ea3af6b763b",
          "dweb:/ipfs/QmXuHJSNnmidTy4HfdK3SeiHni2xLVe8KaR5CdtuhHXDub"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PlatformFee.sol": {
        "keccak256": "0x1549722107cf053d4a7fa35f6738b3cff237712a378c7341268512104dea9341",
        "urls": [
          "bzz-raw://6da70c4ae6b60e151a5cb20c7c29a464c9a47cb61a228d5b0c8e84c5eac78c80",
          "dweb:/ipfs/QmfHrcdPGkkE9yvYqvm4sHqiKaR1FwXwWCyYM5m9Mqu3zq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42",
        "urls": [
          "bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7",
          "dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350",
        "urls": [
          "bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485",
          "dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SignatureMintERC721Upgradeable.sol": {
        "keccak256": "0x1f9f0cdf37800f14e331b01721130d503d55e60ff86cd3faae15d75e9cb4c8f3",
        "urls": [
          "bzz-raw://7a1dce41c6e7522b39c8648742e70867f6ef9ebbadf01249f4d47f850af653a3",
          "dweb:/ipfs/QmX3znQxZSiA9GFvGkCeEHPrA1dy1pAo6tFyAoa2GtKAKM"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/INFTMetadata.sol": {
        "keccak256": "0x8f20c212a4388cad101340a8c5642715c8fdeeff9ae1ead00b35ef600dbfe7f8",
        "urls": [
          "bzz-raw://c2810c812a4d83269b1183f33c4caa5156ceddb559e8a039fe62deaa2897386e",
          "dweb:/ipfs/QmWLyVMsgVrTfNKT6SBKnaEFp4qyKNvD1fTnduJL8WLFuP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IOperatorFilterRegistry.sol": {
        "keccak256": "0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da",
        "urls": [
          "bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34",
          "dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOperatorFilterToggle.sol": {
        "keccak256": "0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1",
        "urls": [
          "bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674",
          "dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISignatureMintERC721.sol": {
        "keccak256": "0xc1142e0742252123cff0b0c45ede1e70d43cf01d677abc32d4a16064d5161822",
        "urls": [
          "bzz-raw://b8f0a32af882458e1c2b040ebe1bc399bdd765e8a29c35fb881494d414c95cb2",
          "dweb:/ipfs/QmR4Z1N29sPXstFaQrubGjNiQhf26VztyVFHjpDjFLfFAi"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/interface/ILoyaltyCard.sol": {
        "keccak256": "0xc06c5e877821127439906a062207c15b94677a154184fd3500bf3d2fd14057b5",
        "urls": [
          "bzz-raw://3b105a63abfb1dfdcf14003583a3bfada3d880e5c438e36e0c31657b3c5f2b56",
          "dweb:/ipfs/QmZEBwkpcbFNj8tg8dDbc5EuqYtL79dChjqPeQfNCM97VA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/loyalty/LoyaltyCard.sol": {
        "keccak256": "0xf006bd5059961ead8c6406b138df54e8175c69fdaed68f0d9cb74a1d379fba07",
        "urls": [
          "bzz-raw://ed8c0ff13d647f162175ccb9380e37a695a76333c862247361d434e39b233d75",
          "dweb:/ipfs/QmWKm4vbTzALWcZ64CdDPyDYgE8w8TEgAp5DL9jGV73jDA"
        ],
        "license": "Apache-2.0"
      },
      "lib/ERC721A-Upgradeable/contracts/IERC721AUpgradeable.sol": {
        "keccak256": "0x89447bfc4f1417953e3664234d896b42ebc7d68b3cc27f86f7cdd7addfdd5c1c",
        "urls": [
          "bzz-raw://3916917efc838814adb1e459c968d442d26e304f28af181ff35cffb5ca3ec0be",
          "dweb:/ipfs/QmcVwcrhenj31MCbDn6yvaYsFNkyJmA3isWaJiGhgQeEmQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
        "urls": [
          "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
          "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0x016298e66a5810253c6c905e61966bb31c8775c3f3517bf946ff56ee31d6c005",
        "urls": [
          "bzz-raw://1723de5ae414f210db039b19e6487c19c2d643483c9be7c445cf481a80c199d2",
          "dweb:/ipfs/QmcBLbmPdZsNngYhA1KDadNUqQZoGACytFWuUH74RC4AXC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
        "keccak256": "0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70",
        "urls": [
          "bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3",
          "dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc",
        "urls": [
          "bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb",
          "dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol": {
        "keccak256": "0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc",
        "urls": [
          "bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94",
          "dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/loyalty/LoyaltyCard.sol",
    "id": 77535,
    "exportedSymbols": {
      "AddressUpgradeable": [
        157008
      ],
      "ContextUpgradeable": [
        157284
      ],
      "ContractMetadata": [
        18264
      ],
      "CurrencyTransferLib": [
        64276
      ],
      "DefaultOperatorFiltererUpgradeable": [
        18344
      ],
      "ECDSAUpgradeable": [
        158295
      ],
      "EIP712Upgradeable": [
        158445
      ],
      "ERC165Upgradeable": [
        158489
      ],
      "ERC2771ContextUpgradeable": [
        46243
      ],
      "ERC721AUpgradeable": [
        14481
      ],
      "IContractMetadata": [
        33220
      ],
      "IERC165": [
        14687
      ],
      "IERC165Upgradeable": [
        158501
      ],
      "IERC20": [
        14757
      ],
      "IERC2981": [
        14831
      ],
      "IERC4906": [
        14850
      ],
      "IERC721": [
        14963
      ],
      "IERC721AUpgradeable": [
        104038
      ],
      "IERC721MetadataUpgradeable": [
        156718
      ],
      "IERC721ReceiverUpgradeable": [
        156186
      ],
      "IERC721Upgradeable": [
        156302
      ],
      "ILoyaltyCard": [
        75316
      ],
      "IMulticall": [
        33709
      ],
      "INFTMetadata": [
        33723
      ],
      "IOwnable": [
        33959
      ],
      "IPermissions": [
        34032
      ],
      "IPermissionsEnumerable": [
        34057
      ],
      "IPlatformFee": [
        34100
      ],
      "IPrimarySale": [
        34121
      ],
      "IRoyalty": [
        34185
      ],
      "ISignatureMintERC721": [
        34679
      ],
      "IWETH": [
        55953
      ],
      "Initializable": [
        151439
      ],
      "LoyaltyCard": [
        77534
      ],
      "Multicall": [
        21413
      ],
      "NFTMetadata": [
        21492
      ],
      "OperatorFiltererUpgradeable": [
        21859
      ],
      "Ownable": [
        21941
      ],
      "Permissions": [
        22288
      ],
      "PermissionsEnumerable": [
        22587
      ],
      "PlatformFee": [
        22797
      ],
      "PrimarySale": [
        22859
      ],
      "ReentrancyGuardUpgradeable": [
        151625
      ],
      "Royalty": [
        23187
      ],
      "SafeERC20": [
        49005
      ],
      "SignatureMintERC721Upgradeable": [
        24935
      ],
      "StringsUpgradeable": [
        157693
      ],
      "TWAddress": [
        64850
      ],
      "TWStrings": [
        65550
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:14292:350",
    "nodes": [
      {
        "id": 76659,
        "nodeType": "PragmaDirective",
        "src": "39:24:350",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 76660,
        "nodeType": "ImportDirective",
        "src": "740:39:350",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/interface/ILoyaltyCard.sol",
        "file": "../interface/ILoyaltyCard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77535,
        "sourceUnit": 75317,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76661,
        "nodeType": "ImportDirective",
        "src": "789:56:350",
        "nodes": [],
        "absolutePath": "contracts/eip/ERC721AVirtualApproveUpgradeable.sol",
        "file": "../../eip/ERC721AVirtualApproveUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77535,
        "sourceUnit": 14482,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76662,
        "nodeType": "ImportDirective",
        "src": "854:43:350",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77535,
        "sourceUnit": 64277,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76663,
        "nodeType": "ImportDirective",
        "src": "913:41:350",
        "nodes": [],
        "absolutePath": "contracts/extension/NFTMetadata.sol",
        "file": "../../extension/NFTMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77535,
        "sourceUnit": 21493,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76664,
        "nodeType": "ImportDirective",
        "src": "955:60:350",
        "nodes": [],
        "absolutePath": "contracts/extension/SignatureMintERC721Upgradeable.sol",
        "file": "../../extension/SignatureMintERC721Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77535,
        "sourceUnit": 24936,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76665,
        "nodeType": "ImportDirective",
        "src": "1016:46:350",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77535,
        "sourceUnit": 18265,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76666,
        "nodeType": "ImportDirective",
        "src": "1063:37:350",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77535,
        "sourceUnit": 21942,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76667,
        "nodeType": "ImportDirective",
        "src": "1101:37:350",
        "nodes": [],
        "absolutePath": "contracts/extension/Royalty.sol",
        "file": "../../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77535,
        "sourceUnit": 23188,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76668,
        "nodeType": "ImportDirective",
        "src": "1139:41:350",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77535,
        "sourceUnit": 22860,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76669,
        "nodeType": "ImportDirective",
        "src": "1181:41:350",
        "nodes": [],
        "absolutePath": "contracts/extension/PlatformFee.sol",
        "file": "../../extension/PlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77535,
        "sourceUnit": 22798,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76670,
        "nodeType": "ImportDirective",
        "src": "1223:39:350",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77535,
        "sourceUnit": 21414,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76671,
        "nodeType": "ImportDirective",
        "src": "1263:51:350",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77535,
        "sourceUnit": 22588,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76672,
        "nodeType": "ImportDirective",
        "src": "1315:64:350",
        "nodes": [],
        "absolutePath": "contracts/extension/DefaultOperatorFiltererUpgradeable.sol",
        "file": "../../extension/DefaultOperatorFiltererUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77535,
        "sourceUnit": 18345,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76673,
        "nodeType": "ImportDirective",
        "src": "1380:79:350",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77535,
        "sourceUnit": 46244,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76674,
        "nodeType": "ImportDirective",
        "src": "1460:85:350",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77535,
        "sourceUnit": 151626,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 77534,
        "nodeType": "ContractDefinition",
        "src": "2086:12244:350",
        "nodes": [
          {
            "id": 76709,
            "nodeType": "VariableDeclaration",
            "src": "2739:67:350",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 76704,
              "nodeType": "StructuredDocumentation",
              "src": "2625:109:350",
              "text": "@dev Only TRANSFER_ROLE holders can have tokens transferred from or to them, during restricted transfers."
            },
            "mutability": "constant",
            "name": "TRANSFER_ROLE",
            "nameLocation": "2764:13:350",
            "scope": 77534,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 76705,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2739:7:350",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5452414e534645525f524f4c45",
                  "id": 76707,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2790:15:350",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  },
                  "value": "TRANSFER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  }
                ],
                "id": 76706,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2780:9:350",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 76708,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2780:26:350",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 76715,
            "nodeType": "VariableDeclaration",
            "src": "2882:63:350",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 76710,
              "nodeType": "StructuredDocumentation",
              "src": "2812:65:350",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s."
            },
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "2907:11:350",
            "scope": 77534,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 76711,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2882:7:350",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 76713,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2931:13:350",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 76712,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2921:9:350",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 76714,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2921:24:350",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 76721,
            "nodeType": "VariableDeclaration",
            "src": "3016:67:350",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 76716,
              "nodeType": "StructuredDocumentation",
              "src": "2951:60:350",
              "text": "@dev Only METADATA_ROLE holders can update NFT metadata."
            },
            "mutability": "constant",
            "name": "METADATA_ROLE",
            "nameLocation": "3041:13:350",
            "scope": 77534,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 76717,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3016:7:350",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d455441444154415f524f4c45",
                  "id": 76719,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3067:15:350",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_6bd6b5318a46e5fff572d5e4258a20774aab40cc35ac7680654b9081fcc82f80",
                    "typeString": "literal_string \"METADATA_ROLE\""
                  },
                  "value": "METADATA_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_6bd6b5318a46e5fff572d5e4258a20774aab40cc35ac7680654b9081fcc82f80",
                    "typeString": "literal_string \"METADATA_ROLE\""
                  }
                ],
                "id": 76718,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "3057:9:350",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 76720,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3057:26:350",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 76727,
            "nodeType": "VariableDeclaration",
            "src": "3154:63:350",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 76722,
              "nodeType": "StructuredDocumentation",
              "src": "3089:60:350",
              "text": "@dev Only REVOKE_ROLE holders can revoke a loyalty card."
            },
            "mutability": "constant",
            "name": "REVOKE_ROLE",
            "nameLocation": "3179:11:350",
            "scope": 77534,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 76723,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3154:7:350",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5245564f4b455f524f4c45",
                  "id": 76725,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3203:13:350",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_5297e68f3a27f04914f2c6db0ad63b5e5c8173cebcc1a5341df045cf6dad7adc",
                    "typeString": "literal_string \"REVOKE_ROLE\""
                  },
                  "value": "REVOKE_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_5297e68f3a27f04914f2c6db0ad63b5e5c8173cebcc1a5341df045cf6dad7adc",
                    "typeString": "literal_string \"REVOKE_ROLE\""
                  }
                ],
                "id": 76724,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "3193:9:350",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 76726,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3193:24:350",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 76731,
            "nodeType": "VariableDeclaration",
            "src": "3269:41:350",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 76728,
              "nodeType": "StructuredDocumentation",
              "src": "3224:40:350",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "3294:7:350",
            "scope": 77534,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76729,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3269:7:350",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 76730,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3304:6:350",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 76737,
            "nodeType": "FunctionDefinition",
            "src": "3507:28:350",
            "nodes": [],
            "body": {
              "id": 76736,
              "nodeType": "Block",
              "src": "3533:2:350",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 76734,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 76733,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151359,
                  "src": "3521:11:350"
                },
                "nodeType": "ModifierInvocation",
                "src": "3521:11:350"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 76732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3518:2:350"
            },
            "returnParameters": {
              "id": 76735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3533:0:350"
            },
            "scope": 77534,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 76844,
            "nodeType": "FunctionDefinition",
            "src": "3600:1337:350",
            "nodes": [],
            "body": {
              "id": 76843,
              "nodeType": "Block",
              "src": "3987:950:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76765,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76749,
                        "src": "4094:18:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 76764,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46150,
                      "src": "4072:21:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 76766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4072:41:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76767,
                  "nodeType": "ExpressionStatement",
                  "src": "4072:41:350"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76769,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76742,
                        "src": "4138:5:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 76770,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76744,
                        "src": "4145:7:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 76768,
                      "name": "__ERC721A_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13149,
                      "src": "4123:14:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 76771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4123:30:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76772,
                  "nodeType": "ExpressionStatement",
                  "src": "4123:30:350"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 76773,
                      "name": "__DefaultOperatorFilterer_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18326,
                      "src": "4163:30:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 76774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4163:32:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76775,
                  "nodeType": "ExpressionStatement",
                  "src": "4163:32:350"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 76776,
                      "name": "__SignatureMintERC721_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24746,
                      "src": "4205:26:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 76777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4205:28:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76778,
                  "nodeType": "ExpressionStatement",
                  "src": "4205:28:350"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 76779,
                      "name": "__ReentrancyGuard_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151589,
                      "src": "4243:22:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 76780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4243:24:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76781,
                  "nodeType": "ExpressionStatement",
                  "src": "4243:24:350"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76783,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76746,
                        "src": "4296:12:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 76782,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18257,
                      "src": "4278:17:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 76784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4278:31:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76785,
                  "nodeType": "ExpressionStatement",
                  "src": "4278:31:350"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76787,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76740,
                        "src": "4331:13:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 76786,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21934,
                      "src": "4319:11:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 76788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4319:26:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76789,
                  "nodeType": "ExpressionStatement",
                  "src": "4319:26:350"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 76791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4379:4:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 76790,
                      "name": "_setOperatorRestriction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21529,
                      "src": "4355:23:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 76792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4355:29:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76793,
                  "nodeType": "ExpressionStatement",
                  "src": "4355:29:350"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76795,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "4406:18:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 76796,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76740,
                        "src": "4426:13:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 76794,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22511
                      ],
                      "referencedDeclaration": 22511,
                      "src": "4395:10:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 76797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4395:45:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76798,
                  "nodeType": "ExpressionStatement",
                  "src": "4395:45:350"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76800,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76715,
                        "src": "4461:11:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 76801,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76740,
                        "src": "4474:13:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 76799,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22511
                      ],
                      "referencedDeclaration": 22511,
                      "src": "4450:10:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 76802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4450:38:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76803,
                  "nodeType": "ExpressionStatement",
                  "src": "4450:38:350"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76805,
                        "name": "TRANSFER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76709,
                        "src": "4509:13:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 76806,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76740,
                        "src": "4524:13:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 76804,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22511
                      ],
                      "referencedDeclaration": 22511,
                      "src": "4498:10:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 76807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4498:40:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76808,
                  "nodeType": "ExpressionStatement",
                  "src": "4498:40:350"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76810,
                        "name": "METADATA_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76721,
                        "src": "4560:13:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 76811,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76740,
                        "src": "4575:13:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 76809,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22511
                      ],
                      "referencedDeclaration": 22511,
                      "src": "4549:10:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 76812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4549:40:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76813,
                  "nodeType": "ExpressionStatement",
                  "src": "4549:40:350"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76815,
                        "name": "METADATA_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76721,
                        "src": "4613:13:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 76816,
                        "name": "METADATA_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76721,
                        "src": "4628:13:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 76814,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22148,
                      "src": "4599:13:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 76817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4599:43:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76818,
                  "nodeType": "ExpressionStatement",
                  "src": "4599:43:350"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76820,
                        "name": "REVOKE_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76727,
                        "src": "4664:11:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 76821,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76740,
                        "src": "4677:13:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 76819,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22511
                      ],
                      "referencedDeclaration": 22511,
                      "src": "4653:10:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 76822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4653:38:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76823,
                  "nodeType": "ExpressionStatement",
                  "src": "4653:38:350"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76825,
                        "name": "REVOKE_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76727,
                        "src": "4715:11:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 76826,
                        "name": "REVOKE_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76727,
                        "src": "4728:11:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 76824,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22148,
                      "src": "4701:13:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 76827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4701:39:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76828,
                  "nodeType": "ExpressionStatement",
                  "src": "4701:39:350"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76830,
                        "name": "_platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76759,
                        "src": "4773:21:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76831,
                        "name": "_platformFeeBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76757,
                        "src": "4796:15:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 76829,
                      "name": "_setupPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22704,
                      "src": "4751:21:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 76832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4751:61:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76833,
                  "nodeType": "ExpressionStatement",
                  "src": "4751:61:350"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76835,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76753,
                        "src": "4847:17:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76836,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76755,
                        "src": "4866:11:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 76834,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23118,
                      "src": "4822:24:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 76837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4822:56:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76838,
                  "nodeType": "ExpressionStatement",
                  "src": "4822:56:350"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76840,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76751,
                        "src": "4915:14:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 76839,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22852,
                      "src": "4888:26:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 76841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4888:42:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76842,
                  "nodeType": "ExpressionStatement",
                  "src": "4888:42:350"
                }
              ]
            },
            "documentation": {
              "id": 76738,
              "nodeType": "StructuredDocumentation",
              "src": "3541:54:350",
              "text": "@dev Initiliazes the contract, like a constructor."
            },
            "functionSelector": "e1591634",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 76762,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 76761,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151359,
                  "src": "3975:11:350"
                },
                "nodeType": "ModifierInvocation",
                "src": "3975:11:350"
              }
            ],
            "name": "initialize",
            "nameLocation": "3609:10:350",
            "parameters": {
              "id": 76760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76740,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "3637:13:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 76844,
                  "src": "3629:21:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3629:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76742,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3674:5:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 76844,
                  "src": "3660:19:350",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76741,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3660:6:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76744,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "3703:7:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 76844,
                  "src": "3689:21:350",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76743,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3689:6:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76746,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "3734:12:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 76844,
                  "src": "3720:26:350",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76745,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3720:6:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76749,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "3773:18:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 76844,
                  "src": "3756:35:350",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 76747,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3756:7:350",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 76748,
                    "nodeType": "ArrayTypeName",
                    "src": "3756:9:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76751,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "3809:14:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 76844,
                  "src": "3801:22:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3801:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76753,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "3841:17:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 76844,
                  "src": "3833:25:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3833:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76755,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "3876:11:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 76844,
                  "src": "3868:19:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 76754,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3868:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76757,
                  "mutability": "mutable",
                  "name": "_platformFeeBps",
                  "nameLocation": "3905:15:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 76844,
                  "src": "3897:23:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 76756,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3897:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76759,
                  "mutability": "mutable",
                  "name": "_platformFeeRecipient",
                  "nameLocation": "3938:21:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 76844,
                  "src": "3930:29:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3930:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3619:346:350"
            },
            "returnParameters": {
              "id": 76763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3987:0:350"
            },
            "scope": 77534,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76858,
            "nodeType": "FunctionDefinition",
            "src": "5184:127:350",
            "nodes": [],
            "body": {
              "id": 76857,
              "nodeType": "Block",
              "src": "5265:46:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76854,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76847,
                        "src": "5295:8:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76853,
                      "name": "_getTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21435,
                      "src": "5282:12:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 76855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5282:22:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 76852,
                  "id": 76856,
                  "nodeType": "Return",
                  "src": "5275:29:350"
                }
              ]
            },
            "baseFunctions": [
              13485
            ],
            "documentation": {
              "id": 76845,
              "nodeType": "StructuredDocumentation",
              "src": "5134:45:350",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "5193:8:350",
            "overrides": {
              "id": 76849,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5232:8:350"
            },
            "parameters": {
              "id": 76848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76847,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5210:8:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 76858,
                  "src": "5202:16:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5202:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5201:18:350"
            },
            "returnParameters": {
              "id": 76852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76851,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76858,
                  "src": "5250:13:350",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76850,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5250:6:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5249:15:350"
            },
            "scope": 77534,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 76882,
            "nodeType": "FunctionDefinition",
            "src": "5342:269:350",
            "nodes": [],
            "body": {
              "id": 76881,
              "nodeType": "Block",
              "src": "5506:105:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 76879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 76871,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76861,
                          "src": "5547:11:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 76869,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "5523:5:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_LoyaltyCard_$77534_$",
                            "typeString": "type(contract super LoyaltyCard)"
                          }
                        },
                        "id": 76870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13241,
                        "src": "5523:23:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 76872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5523:36:350",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 76878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 76874,
                              "name": "IERC2981",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14831,
                              "src": "5568:8:350",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$14831_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$14831_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            ],
                            "id": 76873,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "5563:4:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 76875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5563:14:350",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981_$14831",
                            "typeString": "type(contract IERC2981)"
                          }
                        },
                        "id": 76876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "5563:26:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 76877,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76861,
                        "src": "5593:11:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "5563:41:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5523:81:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 76868,
                  "id": 76880,
                  "nodeType": "Return",
                  "src": "5516:88:350"
                }
              ]
            },
            "baseFunctions": [
              13241,
              14686
            ],
            "documentation": {
              "id": 76859,
              "nodeType": "StructuredDocumentation",
              "src": "5317:20:350",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "5351:17:350",
            "overrides": {
              "id": 76865,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 76863,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14481,
                  "src": "5450:18:350"
                },
                {
                  "id": 76864,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14687,
                  "src": "5470:7:350"
                }
              ],
              "src": "5441:37:350"
            },
            "parameters": {
              "id": 76862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76861,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "5376:11:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 76882,
                  "src": "5369:18:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 76860,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5369:6:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5368:20:350"
            },
            "returnParameters": {
              "id": 76868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76867,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76882,
                  "src": "5496:4:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 76866,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5496:4:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5495:6:350"
            },
            "scope": 77534,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 76964,
            "nodeType": "FunctionDefinition",
            "src": "5890:820:350",
            "nodes": [],
            "body": {
              "id": 76963,
              "nodeType": "Block",
              "src": "6062:648:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 76899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 76896,
                            "name": "_req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76886,
                            "src": "6080:4:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MintRequest_$34642_calldata_ptr",
                              "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                            }
                          },
                          "id": 76897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "quantity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34631,
                          "src": "6080:13:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 76898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6097:1:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6080:18:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f79616c7479436172643a206f6e6c792031204e46542063616e206265206d696e74656420617420612074696d652e",
                        "id": 76900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6100:50:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c72bf067baf14b911ac4accf767bf2651ab7577f317b202b4aa30817420f5db",
                          "typeString": "literal_string \"LoyaltyCard: only 1 NFT can be minted at a time.\""
                        },
                        "value": "LoyaltyCard: only 1 NFT can be minted at a time."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c72bf067baf14b911ac4accf767bf2651ab7577f317b202b4aa30817420f5db",
                          "typeString": "literal_string \"LoyaltyCard: only 1 NFT can be minted at a time.\""
                        }
                      ],
                      "id": 76895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6072:7:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 76901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6072:79:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76902,
                  "nodeType": "ExpressionStatement",
                  "src": "6072:79:350"
                },
                {
                  "expression": {
                    "id": 76908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76903,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76893,
                      "src": "6162:6:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 76905,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76886,
                          "src": "6187:4:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34642_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        {
                          "id": 76906,
                          "name": "_signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76888,
                          "src": "6193:10:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_MintRequest_$34642_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 76904,
                        "name": "_processRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24869,
                        "src": "6171:15:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MintRequest_$34642_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                          "typeString": "function (struct ISignatureMintERC721.MintRequest calldata,bytes calldata) returns (address)"
                        }
                      },
                      "id": 76907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6171:33:350",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6162:42:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 76909,
                  "nodeType": "ExpressionStatement",
                  "src": "6162:42:350"
                },
                {
                  "assignments": [
                    76911
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76911,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "6222:8:350",
                      "nodeType": "VariableDeclaration",
                      "scope": 76963,
                      "src": "6214:16:350",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 76910,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6214:7:350",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76914,
                  "initialValue": {
                    "expression": {
                      "id": 76912,
                      "name": "_req",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76886,
                      "src": "6233:4:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintRequest_$34642_calldata_ptr",
                        "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                      }
                    },
                    "id": 76913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "to",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 34621,
                    "src": "6233:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6214:26:350"
                },
                {
                  "assignments": [
                    76916
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76916,
                      "mutability": "mutable",
                      "name": "tokenIdMinted",
                      "nameLocation": "6258:13:350",
                      "nodeType": "VariableDeclaration",
                      "scope": 76963,
                      "src": "6250:21:350",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76915,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6250:7:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76922,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 76918,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76911,
                        "src": "6282:8:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 76919,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76886,
                          "src": "6292:4:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34642_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 76920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "uri",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34629,
                        "src": "6292:8:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 76917,
                      "name": "_mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77330,
                      "src": "6274:7:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_calldata_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,string calldata) returns (uint256)"
                      }
                    },
                    "id": 76921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6274:27:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6250:51:350"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 76934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 76929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 76923,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76886,
                          "src": "6357:4:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34642_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 76924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34623,
                        "src": "6357:21:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 76927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6390:1:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 76926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6382:7:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 76925,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6382:7:350",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 76928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6382:10:350",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "6357:35:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 76933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 76930,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76886,
                          "src": "6396:4:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34642_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 76931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyBps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34625,
                        "src": "6396:15:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 76932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6415:1:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6396:20:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6357:59:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76944,
                  "nodeType": "IfStatement",
                  "src": "6353:170:350",
                  "trueBody": {
                    "id": 76943,
                    "nodeType": "Block",
                    "src": "6418:105:350",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 76936,
                              "name": "tokenIdMinted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76916,
                              "src": "6458:13:350",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 76937,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76886,
                                "src": "6473:4:350",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$34642_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                                }
                              },
                              "id": 76938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "royaltyRecipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34623,
                              "src": "6473:21:350",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 76939,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76886,
                                "src": "6496:4:350",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$34642_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                                }
                              },
                              "id": 76940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "royaltyBps",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34625,
                              "src": "6496:15:350",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 76935,
                            "name": "_setupRoyaltyInfoForToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23180,
                            "src": "6432:25:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256)"
                            }
                          },
                          "id": 76941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6432:80:350",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 76942,
                        "nodeType": "ExpressionStatement",
                        "src": "6432:80:350"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 76946,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76886,
                          "src": "6547:4:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34642_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 76947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "primarySaleRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34627,
                        "src": "6547:25:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 76948,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76886,
                          "src": "6574:4:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34642_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 76949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34631,
                        "src": "6574:13:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 76950,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76886,
                          "src": "6589:4:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34642_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 76951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34635,
                        "src": "6589:13:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 76952,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76886,
                          "src": "6604:4:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34642_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 76953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pricePerToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34633,
                        "src": "6604:18:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76945,
                      "name": "_collectPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77305,
                      "src": "6533:13:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 76954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6533:90:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76955,
                  "nodeType": "ExpressionStatement",
                  "src": "6533:90:350"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 76957,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76893,
                        "src": "6665:6:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76958,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76911,
                        "src": "6673:8:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76959,
                        "name": "tokenIdMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76916,
                        "src": "6683:13:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 76960,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76886,
                        "src": "6698:4:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$34642_calldata_ptr",
                          "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_MintRequest_$34642_calldata_ptr",
                          "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                        }
                      ],
                      "id": 76956,
                      "name": "TokensMintedWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34654,
                      "src": "6639:25:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_MintRequest_$34642_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,struct ISignatureMintERC721.MintRequest memory)"
                      }
                    },
                    "id": 76961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6639:64:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76962,
                  "nodeType": "EmitStatement",
                  "src": "6634:69:350"
                }
              ]
            },
            "baseFunctions": [
              34678
            ],
            "documentation": {
              "id": 76883,
              "nodeType": "StructuredDocumentation",
              "src": "5804:81:350",
              "text": "@dev Mints an NFT according to the provided mint request. Always mints 1 NFT."
            },
            "functionSelector": "439c7be5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 76891,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 76890,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151619,
                  "src": "6012:12:350"
                },
                "nodeType": "ModifierInvocation",
                "src": "6012:12:350"
              }
            ],
            "name": "mintWithSignature",
            "nameLocation": "5899:17:350",
            "parameters": {
              "id": 76889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76886,
                  "mutability": "mutable",
                  "name": "_req",
                  "nameLocation": "5938:4:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 76964,
                  "src": "5917:25:350",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MintRequest_$34642_calldata_ptr",
                    "typeString": "struct ISignatureMintERC721.MintRequest"
                  },
                  "typeName": {
                    "id": 76885,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76884,
                      "name": "MintRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34642,
                      "src": "5917:11:350"
                    },
                    "referencedDeclaration": 34642,
                    "src": "5917:11:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintRequest_$34642_storage_ptr",
                      "typeString": "struct ISignatureMintERC721.MintRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76888,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5959:10:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 76964,
                  "src": "5944:25:350",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 76887,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5944:5:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5916:54:350"
            },
            "returnParameters": {
              "id": 76894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76893,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "6050:6:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 76964,
                  "src": "6042:14:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76892,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6042:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6041:16:350"
            },
            "scope": 77534,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76991,
            "nodeType": "FunctionDefinition",
            "src": "6795:218:350",
            "nodes": [],
            "body": {
              "id": 76990,
              "nodeType": "Block",
              "src": "6909:104:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 76982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76977,
                      "name": "tokenIdMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76975,
                      "src": "6919:13:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 76979,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76967,
                          "src": "6943:3:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 76980,
                          "name": "_uri",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76969,
                          "src": "6948:4:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        ],
                        "id": 76978,
                        "name": "_mintTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77330,
                        "src": "6935:7:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_calldata_ptr_$returns$_t_uint256_$",
                          "typeString": "function (address,string calldata) returns (uint256)"
                        }
                      },
                      "id": 76981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6935:18:350",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6919:34:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 76983,
                  "nodeType": "ExpressionStatement",
                  "src": "6919:34:350"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 76985,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76967,
                        "src": "6981:3:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76986,
                        "name": "tokenIdMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76975,
                        "src": "6986:13:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 76987,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76969,
                        "src": "7001:4:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 76984,
                      "name": "TokensMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75293,
                      "src": "6968:12:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string memory)"
                      }
                    },
                    "id": 76988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6968:38:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76989,
                  "nodeType": "EmitStatement",
                  "src": "6963:43:350"
                }
              ]
            },
            "baseFunctions": [
              75303
            ],
            "documentation": {
              "id": 76965,
              "nodeType": "StructuredDocumentation",
              "src": "6716:74:350",
              "text": "@dev Lets an account with MINTER_ROLE mint an NFT. Always mints 1 NFT."
            },
            "functionSelector": "0075a317",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 76972,
                    "name": "MINTER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 76715,
                    "src": "6864:11:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 76973,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 76971,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21977,
                  "src": "6855:8:350"
                },
                "nodeType": "ModifierInvocation",
                "src": "6855:21:350"
              }
            ],
            "name": "mintTo",
            "nameLocation": "6804:6:350",
            "parameters": {
              "id": 76970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76967,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6819:3:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 76991,
                  "src": "6811:11:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76966,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6811:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76969,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "6840:4:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 76991,
                  "src": "6824:20:350",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76968,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6824:6:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6810:35:350"
            },
            "returnParameters": {
              "id": 76976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76975,
                  "mutability": "mutable",
                  "name": "tokenIdMinted",
                  "nameLocation": "6894:13:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 76991,
                  "src": "6886:21:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76974,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6886:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6885:23:350"
            },
            "scope": 77534,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 77004,
            "nodeType": "FunctionDefinition",
            "src": "7069:195:350",
            "nodes": [],
            "body": {
              "id": 77003,
              "nodeType": "Block",
              "src": "7128:136:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76999,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76994,
                        "src": "7243:7:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 77000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7252:4:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 76998,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14189,
                        14371
                      ],
                      "referencedDeclaration": 14371,
                      "src": "7237:5:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 77001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7237:20:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77002,
                  "nodeType": "ExpressionStatement",
                  "src": "7237:20:350"
                }
              ]
            },
            "baseFunctions": [
              75309
            ],
            "documentation": {
              "id": 76992,
              "nodeType": "StructuredDocumentation",
              "src": "7019:45:350",
              "text": "@dev Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "40e58ee5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancel",
            "nameLocation": "7078:6:350",
            "overrides": {
              "id": 76996,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7119:8:350"
            },
            "parameters": {
              "id": 76995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76994,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7093:7:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77004,
                  "src": "7085:15:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7085:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7084:17:350"
            },
            "returnParameters": {
              "id": 76997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7128:0:350"
            },
            "scope": 77534,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 77019,
            "nodeType": "FunctionDefinition",
            "src": "7320:112:350",
            "nodes": [],
            "body": {
              "id": 77018,
              "nodeType": "Block",
              "src": "7401:31:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77015,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77007,
                        "src": "7417:7:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77014,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14189,
                        14371
                      ],
                      "referencedDeclaration": 14189,
                      "src": "7411:5:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 77016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7411:14:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77017,
                  "nodeType": "ExpressionStatement",
                  "src": "7411:14:350"
                }
              ]
            },
            "baseFunctions": [
              75315
            ],
            "documentation": {
              "id": 77005,
              "nodeType": "StructuredDocumentation",
              "src": "7270:45:350",
              "text": "@dev Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "20c5429b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 77011,
                    "name": "REVOKE_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 76727,
                    "src": "7388:11:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 77012,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 77010,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21977,
                  "src": "7379:8:350"
                },
                "nodeType": "ModifierInvocation",
                "src": "7379:21:350"
              }
            ],
            "name": "revoke",
            "nameLocation": "7329:6:350",
            "overrides": {
              "id": 77009,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7370:8:350"
            },
            "parameters": {
              "id": 77008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77007,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7344:7:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77019,
                  "src": "7336:15:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77006,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7336:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7335:17:350"
            },
            "returnParameters": {
              "id": 77013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7401:0:350"
            },
            "scope": 77534,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 77039,
            "nodeType": "FunctionDefinition",
            "src": "7673:174:350",
            "nodes": [],
            "body": {
              "id": 77038,
              "nodeType": "Block",
              "src": "7787:60:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77034,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77022,
                        "src": "7821:8:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77035,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77024,
                        "src": "7831:8:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 77031,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7797:5:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LoyaltyCard_$77534_$",
                          "typeString": "type(contract super LoyaltyCard)"
                        }
                      },
                      "id": 77033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13596,
                      "src": "7797:23:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 77036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7797:43:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77037,
                  "nodeType": "ExpressionStatement",
                  "src": "7797:43:350"
                }
              ]
            },
            "baseFunctions": [
              13596
            ],
            "documentation": {
              "id": 77020,
              "nodeType": "StructuredDocumentation",
              "src": "7628:40:350",
              "text": "@dev See {ERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 77028,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 77022,
                    "src": "7777:8:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 77029,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 77027,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21796,
                  "src": "7749:27:350"
                },
                "nodeType": "ModifierInvocation",
                "src": "7749:37:350"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "7682:17:350",
            "overrides": {
              "id": 77026,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7740:8:350"
            },
            "parameters": {
              "id": 77025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77022,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7708:8:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77039,
                  "src": "7700:16:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7700:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77024,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "7723:8:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77039,
                  "src": "7718:13:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77023,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7718:4:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7699:33:350"
            },
            "returnParameters": {
              "id": 77030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7787:0:350"
            },
            "scope": 77534,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77059,
            "nodeType": "FunctionDefinition",
            "src": "7888:155:350",
            "nodes": [],
            "body": {
              "id": 77058,
              "nodeType": "Block",
              "src": "7994:49:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77054,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77042,
                        "src": "8018:8:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77055,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77044,
                        "src": "8028:7:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77051,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8004:5:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LoyaltyCard_$77534_$",
                          "typeString": "type(contract super LoyaltyCard)"
                        }
                      },
                      "id": 77053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13540,
                      "src": "8004:13:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 77056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8004:32:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77057,
                  "nodeType": "ExpressionStatement",
                  "src": "8004:32:350"
                }
              ]
            },
            "baseFunctions": [
              13540
            ],
            "documentation": {
              "id": 77040,
              "nodeType": "StructuredDocumentation",
              "src": "7853:30:350",
              "text": "@dev See {ERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 77048,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 77042,
                    "src": "7984:8:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 77049,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 77047,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21796,
                  "src": "7956:27:350"
                },
                "nodeType": "ModifierInvocation",
                "src": "7956:37:350"
              }
            ],
            "name": "approve",
            "nameLocation": "7897:7:350",
            "overrides": {
              "id": 77046,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7947:8:350"
            },
            "parameters": {
              "id": 77045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77042,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7913:8:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77059,
                  "src": "7905:16:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7905:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77044,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7931:7:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77059,
                  "src": "7923:15:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7923:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7904:35:350"
            },
            "returnParameters": {
              "id": 77050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7994:0:350"
            },
            "scope": 77534,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77083,
            "nodeType": "FunctionDefinition",
            "src": "8090:211:350",
            "nodes": [],
            "body": {
              "id": 77082,
              "nodeType": "Block",
              "src": "8247:54:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77077,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77062,
                        "src": "8276:4:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77078,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77064,
                        "src": "8282:2:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77079,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77066,
                        "src": "8286:7:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77074,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8257:5:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LoyaltyCard_$77534_$",
                          "typeString": "type(contract super LoyaltyCard)"
                        }
                      },
                      "id": 77076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13632,
                      "src": "8257:18:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 77080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8257:37:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77081,
                  "nodeType": "ExpressionStatement",
                  "src": "8257:37:350"
                }
              ]
            },
            "baseFunctions": [
              13632
            ],
            "documentation": {
              "id": 77060,
              "nodeType": "StructuredDocumentation",
              "src": "8049:36:350",
              "text": "@dev See {ERC721-_transferFrom}."
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 77071,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 77062,
                    "src": "8241:4:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 77072,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 77070,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21762,
                  "src": "8221:19:350"
                },
                "nodeType": "ModifierInvocation",
                "src": "8221:25:350"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "8099:12:350",
            "overrides": {
              "id": 77069,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 77068,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14481,
                  "src": "8201:18:350"
                }
              ],
              "src": "8192:28:350"
            },
            "parameters": {
              "id": 77067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77062,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8129:4:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77083,
                  "src": "8121:12:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77061,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8121:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77064,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8151:2:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77083,
                  "src": "8143:10:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8143:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77066,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8171:7:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77083,
                  "src": "8163:15:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77065,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8163:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8111:73:350"
            },
            "returnParameters": {
              "id": 77073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8247:0:350"
            },
            "scope": 77534,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77107,
            "nodeType": "FunctionDefinition",
            "src": "8352:219:350",
            "nodes": [],
            "body": {
              "id": 77106,
              "nodeType": "Block",
              "src": "8513:58:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77101,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77086,
                        "src": "8546:4:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77102,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77088,
                        "src": "8552:2:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77103,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77090,
                        "src": "8556:7:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77098,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8523:5:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LoyaltyCard_$77534_$",
                          "typeString": "type(contract super LoyaltyCard)"
                        }
                      },
                      "id": 77100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13651,
                      "src": "8523:22:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 77104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8523:41:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77105,
                  "nodeType": "ExpressionStatement",
                  "src": "8523:41:350"
                }
              ]
            },
            "baseFunctions": [
              13651
            ],
            "documentation": {
              "id": 77084,
              "nodeType": "StructuredDocumentation",
              "src": "8307:40:350",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 77095,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 77086,
                    "src": "8507:4:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 77096,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 77094,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21762,
                  "src": "8487:19:350"
                },
                "nodeType": "ModifierInvocation",
                "src": "8487:25:350"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "8361:16:350",
            "overrides": {
              "id": 77093,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 77092,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14481,
                  "src": "8467:18:350"
                }
              ],
              "src": "8458:28:350"
            },
            "parameters": {
              "id": 77091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77086,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8395:4:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77107,
                  "src": "8387:12:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8387:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77088,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8417:2:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77107,
                  "src": "8409:10:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8409:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77090,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8437:7:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77107,
                  "src": "8429:15:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8429:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8377:73:350"
            },
            "returnParameters": {
              "id": 77097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8513:0:350"
            },
            "scope": 77534,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77134,
            "nodeType": "FunctionDefinition",
            "src": "8622:252:350",
            "nodes": [],
            "body": {
              "id": 77133,
              "nodeType": "Block",
              "src": "8810:64:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77127,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77110,
                        "src": "8843:4:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77128,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77112,
                        "src": "8849:2:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77129,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77114,
                        "src": "8853:7:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77130,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77116,
                        "src": "8862:4:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 77124,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8820:5:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LoyaltyCard_$77534_$",
                          "typeString": "type(contract super LoyaltyCard)"
                        }
                      },
                      "id": 77126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13687,
                      "src": "8820:22:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 77131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8820:47:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77132,
                  "nodeType": "ExpressionStatement",
                  "src": "8820:47:350"
                }
              ]
            },
            "baseFunctions": [
              13687
            ],
            "documentation": {
              "id": 77108,
              "nodeType": "StructuredDocumentation",
              "src": "8577:40:350",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 77121,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 77110,
                    "src": "8804:4:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 77122,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 77120,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21762,
                  "src": "8784:19:350"
                },
                "nodeType": "ModifierInvocation",
                "src": "8784:25:350"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "8631:16:350",
            "overrides": {
              "id": 77119,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 77118,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14481,
                  "src": "8764:18:350"
                }
              ],
              "src": "8755:28:350"
            },
            "parameters": {
              "id": 77117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77110,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8665:4:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77134,
                  "src": "8657:12:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8657:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77112,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8687:2:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77134,
                  "src": "8679:10:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8679:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77114,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8707:7:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77134,
                  "src": "8699:15:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8699:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77116,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8737:4:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77134,
                  "src": "8724:17:350",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77115,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8724:5:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8647:100:350"
            },
            "returnParameters": {
              "id": 77123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8810:0:350"
            },
            "scope": 77534,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77147,
            "nodeType": "FunctionDefinition",
            "src": "9145:144:350",
            "nodes": [],
            "body": {
              "id": 77146,
              "nodeType": "Block",
              "src": "9200:89:350",
              "nodes": [],
              "statements": [
                {
                  "id": 77145,
                  "nodeType": "UncheckedBlock",
                  "src": "9210:73:350",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77140,
                          "name": "_currentIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13108,
                          "src": "9241:13:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 77141,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13181,
                            "src": "9257:13:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 77142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9257:15:350",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9241:31:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 77139,
                      "id": 77144,
                      "nodeType": "Return",
                      "src": "9234:38:350"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 77135,
              "nodeType": "StructuredDocumentation",
              "src": "9058:82:350",
              "text": " @dev Returns the total amount of tokens minted in the contract."
            },
            "functionSelector": "a2309ff8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMinted",
            "nameLocation": "9154:11:350",
            "parameters": {
              "id": 77136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9165:2:350"
            },
            "returnParameters": {
              "id": 77139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77138,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77147,
                  "src": "9191:7:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9191:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9190:9:350"
            },
            "scope": 77534,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 77156,
            "nodeType": "FunctionDefinition",
            "src": "9371:98:350",
            "nodes": [],
            "body": {
              "id": 77155,
              "nodeType": "Block",
              "src": "9432:37:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 77153,
                    "name": "_currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13108,
                    "src": "9449:13:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 77152,
                  "id": 77154,
                  "nodeType": "Return",
                  "src": "9442:20:350"
                }
              ]
            },
            "documentation": {
              "id": 77148,
              "nodeType": "StructuredDocumentation",
              "src": "9295:71:350",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "9380:17:350",
            "parameters": {
              "id": 77149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9397:2:350"
            },
            "returnParameters": {
              "id": 77152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77151,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77156,
                  "src": "9423:7:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9423:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9422:9:350"
            },
            "scope": 77534,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 77305,
            "nodeType": "FunctionDefinition",
            "src": "9746:1409:350",
            "nodes": [],
            "body": {
              "id": 77304,
              "nodeType": "Block",
              "src": "9916:1239:350",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 77170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 77168,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77165,
                      "src": "9930:14:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 77169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9948:1:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9930:19:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 77181,
                  "nodeType": "IfStatement",
                  "src": "9926:103:350",
                  "trueBody": {
                    "id": 77180,
                    "nodeType": "Block",
                    "src": "9951:78:350",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 77175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 77172,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9973:3:350",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 77173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "9973:9:350",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 77174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9986:1:350",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9973:14:350",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 77176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9989:8:350",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 77171,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9965:7:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 77177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9965:33:350",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 77178,
                        "nodeType": "ExpressionStatement",
                        "src": "9965:33:350"
                      },
                      {
                        "functionReturnParameters": 77167,
                        "id": 77179,
                        "nodeType": "Return",
                        "src": "10012:7:350"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    77183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77183,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "10047:10:350",
                      "nodeType": "VariableDeclaration",
                      "scope": 77304,
                      "src": "10039:18:350",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77182,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10039:7:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77187,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 77186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 77184,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77161,
                      "src": "10060:16:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 77185,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77165,
                      "src": "10079:14:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10060:33:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10039:54:350"
                },
                {
                  "assignments": [
                    77189
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77189,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "10109:13:350",
                      "nodeType": "VariableDeclaration",
                      "scope": 77304,
                      "src": "10104:18:350",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 77188,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10104:4:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77190,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10104:18:350"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 77194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 77191,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77163,
                      "src": "10136:9:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 77192,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64276,
                        "src": "10149:19:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64276_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 77193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64044,
                      "src": "10149:32:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10136:45:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 77210,
                    "nodeType": "Block",
                    "src": "10253:55:350",
                    "statements": [
                      {
                        "expression": {
                          "id": 77208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 77203,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77189,
                            "src": "10267:13:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 77207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 77204,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10283:3:350",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 77205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "10283:9:350",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 77206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10296:1:350",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "10283:14:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10267:30:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 77209,
                        "nodeType": "ExpressionStatement",
                        "src": "10267:30:350"
                      }
                    ]
                  },
                  "id": 77211,
                  "nodeType": "IfStatement",
                  "src": "10132:176:350",
                  "trueBody": {
                    "id": 77202,
                    "nodeType": "Block",
                    "src": "10183:64:350",
                    "statements": [
                      {
                        "expression": {
                          "id": 77200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 77195,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77189,
                            "src": "10197:13:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 77199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 77196,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10213:3:350",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 77197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "10213:9:350",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 77198,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77183,
                              "src": "10226:10:350",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10213:23:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10197:39:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 77201,
                        "nodeType": "ExpressionStatement",
                        "src": "10197:39:350"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77213,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77189,
                        "src": "10325:13:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d73672076616c7565",
                        "id": 77214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10340:19:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        },
                        "value": "Invalid msg value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        }
                      ],
                      "id": 77212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10317:7:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10317:43:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77216,
                  "nodeType": "ExpressionStatement",
                  "src": "10317:43:350"
                },
                {
                  "assignments": [
                    77218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77218,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "10379:13:350",
                      "nodeType": "VariableDeclaration",
                      "scope": 77304,
                      "src": "10371:21:350",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 77217,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10371:7:350",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77229,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 77224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 77219,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77159,
                        "src": "10395:21:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 77222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10428:1:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 77221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10420:7:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77220,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10420:7:350",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10420:10:350",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "10395:35:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 77227,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77159,
                      "src": "10458:21:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 77228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "10395:84:350",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 77225,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22816,
                        "src": "10433:20:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 77226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10433:22:350",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10371:108:350"
                },
                {
                  "assignments": [
                    77231
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77231,
                      "mutability": "mutable",
                      "name": "fees",
                      "nameLocation": "10498:4:350",
                      "nodeType": "VariableDeclaration",
                      "scope": 77304,
                      "src": "10490:12:350",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77230,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10490:7:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77232,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10490:12:350"
                },
                {
                  "assignments": [
                    77234
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77234,
                      "mutability": "mutable",
                      "name": "feeRecipient",
                      "nameLocation": "10520:12:350",
                      "nodeType": "VariableDeclaration",
                      "scope": 77304,
                      "src": "10512:20:350",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 77233,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10512:7:350",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77235,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10512:20:350"
                },
                {
                  "assignments": [
                    77238
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77238,
                      "mutability": "mutable",
                      "name": "feeType",
                      "nameLocation": "10559:7:350",
                      "nodeType": "VariableDeclaration",
                      "scope": 77304,
                      "src": "10543:23:350",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PlatformFeeType_$34063",
                        "typeString": "enum IPlatformFee.PlatformFeeType"
                      },
                      "typeName": {
                        "id": 77237,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77236,
                          "name": "PlatformFeeType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34063,
                          "src": "10543:15:350"
                        },
                        "referencedDeclaration": 34063,
                        "src": "10543:15:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PlatformFeeType_$34063",
                          "typeString": "enum IPlatformFee.PlatformFeeType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77241,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 77239,
                      "name": "getPlatformFeeType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22646,
                      "src": "10569:18:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_PlatformFeeType_$34063_$",
                        "typeString": "function () view returns (enum IPlatformFee.PlatformFeeType)"
                      }
                    },
                    "id": 77240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10569:20:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PlatformFeeType_$34063",
                      "typeString": "enum IPlatformFee.PlatformFeeType"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10543:46:350"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_PlatformFeeType_$34063",
                      "typeString": "enum IPlatformFee.PlatformFeeType"
                    },
                    "id": 77245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 77242,
                      "name": "feeType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77238,
                      "src": "10603:7:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PlatformFeeType_$34063",
                        "typeString": "enum IPlatformFee.PlatformFeeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 77243,
                        "name": "PlatformFeeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34063,
                        "src": "10614:15:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PlatformFeeType_$34063_$",
                          "typeString": "type(enum IPlatformFee.PlatformFeeType)"
                        }
                      },
                      "id": 77244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Flat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34062,
                      "src": "10614:20:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PlatformFeeType_$34063",
                        "typeString": "enum IPlatformFee.PlatformFeeType"
                      }
                    },
                    "src": "10603:31:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 77273,
                    "nodeType": "Block",
                    "src": "10714:173:350",
                    "statements": [
                      {
                        "assignments": [
                          77255
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 77255,
                            "mutability": "mutable",
                            "name": "platformFeeBps",
                            "nameLocation": "10735:14:350",
                            "nodeType": "VariableDeclaration",
                            "scope": 77273,
                            "src": "10728:21:350",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "typeName": {
                              "id": 77254,
                              "name": "uint16",
                              "nodeType": "ElementaryTypeName",
                              "src": "10728:6:350",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 77256,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10728:21:350"
                      },
                      {
                        "expression": {
                          "id": 77262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 77257,
                                "name": "feeRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77234,
                                "src": "10764:12:350",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 77258,
                                "name": "platformFeeBps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77255,
                                "src": "10778:14:350",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              }
                            ],
                            "id": 77259,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "10763:30:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                              "typeString": "tuple(address,uint16)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 77260,
                              "name": "getPlatformFeeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22623,
                              "src": "10796:18:350",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint16_$",
                                "typeString": "function () view returns (address,uint16)"
                              }
                            },
                            "id": 77261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10796:20:350",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                              "typeString": "tuple(address,uint16)"
                            }
                          },
                          "src": "10763:53:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 77263,
                        "nodeType": "ExpressionStatement",
                        "src": "10763:53:350"
                      },
                      {
                        "expression": {
                          "id": 77271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 77264,
                            "name": "fees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77231,
                            "src": "10830:4:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 77270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 77267,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 77265,
                                    "name": "totalPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 77183,
                                    "src": "10838:10:350",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 77266,
                                    "name": "platformFeeBps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 77255,
                                    "src": "10851:14:350",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "src": "10838:27:350",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 77268,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10837:29:350",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 77269,
                              "name": "MAX_BPS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76731,
                              "src": "10869:7:350",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10837:39:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10830:46:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 77272,
                        "nodeType": "ExpressionStatement",
                        "src": "10830:46:350"
                      }
                    ]
                  },
                  "id": 77274,
                  "nodeType": "IfStatement",
                  "src": "10599:288:350",
                  "trueBody": {
                    "id": 77253,
                    "nodeType": "Block",
                    "src": "10636:72:350",
                    "statements": [
                      {
                        "expression": {
                          "id": 77251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 77246,
                                "name": "feeRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77234,
                                "src": "10651:12:350",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 77247,
                                "name": "fees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77231,
                                "src": "10665:4:350",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 77248,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "10650:20:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                              "typeString": "tuple(address,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 77249,
                              "name": "getFlatPlatformFeeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22636,
                              "src": "10673:22:350",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint256_$",
                                "typeString": "function () view returns (address,uint256)"
                              }
                            },
                            "id": 77250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10673:24:350",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                              "typeString": "tuple(address,uint256)"
                            }
                          },
                          "src": "10650:47:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 77252,
                        "nodeType": "ExpressionStatement",
                        "src": "10650:47:350"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77276,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77183,
                          "src": "10905:10:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 77277,
                          "name": "fees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77231,
                          "src": "10919:4:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10905:18:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565732067726561746572207468616e207072696365",
                        "id": 77279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10925:25:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d55f709a5efe1a6fca97f3309a92039d75dd7d70b6ea87d836b06bc4b1f3db5b",
                          "typeString": "literal_string \"Fees greater than price\""
                        },
                        "value": "Fees greater than price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d55f709a5efe1a6fca97f3309a92039d75dd7d70b6ea87d836b06bc4b1f3db5b",
                          "typeString": "literal_string \"Fees greater than price\""
                        }
                      ],
                      "id": 77275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10897:7:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10897:54:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77281,
                  "nodeType": "ExpressionStatement",
                  "src": "10897:54:350"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77285,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77163,
                        "src": "10999:9:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 77286,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            77520
                          ],
                          "referencedDeclaration": 77520,
                          "src": "11010:10:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 77287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11010:12:350",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77288,
                        "name": "feeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77234,
                        "src": "11024:12:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77289,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77231,
                        "src": "11038:4:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77282,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64276,
                        "src": "10962:19:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64276_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 77284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64081,
                      "src": "10962:36:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 77290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10962:81:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77291,
                  "nodeType": "ExpressionStatement",
                  "src": "10962:81:350"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77295,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77163,
                        "src": "11090:9:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 77296,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            77520
                          ],
                          "referencedDeclaration": 77520,
                          "src": "11101:10:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 77297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11101:12:350",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77298,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77218,
                        "src": "11115:13:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77299,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77183,
                          "src": "11130:10:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 77300,
                          "name": "fees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77231,
                          "src": "11143:4:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11130:17:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77292,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64276,
                        "src": "11053:19:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64276_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 77294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64081,
                      "src": "11053:36:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 77302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11053:95:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77303,
                  "nodeType": "ExpressionStatement",
                  "src": "11053:95:350"
                }
              ]
            },
            "documentation": {
              "id": 77157,
              "nodeType": "StructuredDocumentation",
              "src": "9662:79:350",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPrice",
            "nameLocation": "9755:13:350",
            "parameters": {
              "id": 77166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77159,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "9786:21:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77305,
                  "src": "9778:29:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9778:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77161,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "9825:16:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77305,
                  "src": "9817:24:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9817:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77163,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "9859:9:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77305,
                  "src": "9851:17:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9851:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77165,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "9886:14:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77305,
                  "src": "9878:22:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9878:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9768:138:350"
            },
            "returnParameters": {
              "id": 77167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9916:0:350"
            },
            "scope": 77534,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77330,
            "nodeType": "FunctionDefinition",
            "src": "11195:210:350",
            "nodes": [],
            "body": {
              "id": 77329,
              "nodeType": "Block",
              "src": "11288:117:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 77317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77315,
                      "name": "tokenIdToMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77313,
                      "src": "11298:13:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 77316,
                      "name": "_currentIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13108,
                      "src": "11314:13:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11298:29:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77318,
                  "nodeType": "ExpressionStatement",
                  "src": "11298:29:350"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77320,
                        "name": "tokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77313,
                        "src": "11351:13:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77321,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77310,
                        "src": "11366:4:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 77319,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21465,
                      "src": "11338:12:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 77322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11338:33:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77323,
                  "nodeType": "ExpressionStatement",
                  "src": "11338:33:350"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77325,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77308,
                        "src": "11391:3:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 77326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11396:1:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 77324,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13726,
                        13889
                      ],
                      "referencedDeclaration": 13726,
                      "src": "11381:9:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 77327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11381:17:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77328,
                  "nodeType": "ExpressionStatement",
                  "src": "11381:17:350"
                }
              ]
            },
            "documentation": {
              "id": 77306,
              "nodeType": "StructuredDocumentation",
              "src": "11161:29:350",
              "text": "@dev Mints an NFT to `to`"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintTo",
            "nameLocation": "11204:7:350",
            "parameters": {
              "id": 77311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77308,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "11220:3:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77330,
                  "src": "11212:11:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11212:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77310,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "11241:4:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77330,
                  "src": "11225:20:350",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 77309,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11225:6:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11211:35:350"
            },
            "returnParameters": {
              "id": 77314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77313,
                  "mutability": "mutable",
                  "name": "tokenIdToMint",
                  "nameLocation": "11273:13:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77330,
                  "src": "11265:21:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11265:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11264:23:350"
            },
            "scope": 77534,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77394,
            "nodeType": "FunctionDefinition",
            "src": "11459:576:350",
            "nodes": [],
            "body": {
              "id": 77393,
              "nodeType": "Block",
              "src": "11620:415:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77346,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77333,
                        "src": "11658:4:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77347,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77335,
                        "src": "11664:2:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77348,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77337,
                        "src": "11668:12:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77349,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77339,
                        "src": "11682:8:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77343,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "11630:5:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LoyaltyCard_$77534_$",
                          "typeString": "type(contract super LoyaltyCard)"
                        }
                      },
                      "id": 77345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14462,
                      "src": "11630:27:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 77350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11630:61:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77351,
                  "nodeType": "ExpressionStatement",
                  "src": "11630:61:350"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 77373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 77366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 77359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "11803:35:350",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 77353,
                              "name": "TRANSFER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76709,
                              "src": "11812:13:350",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 77356,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11835:1:350",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 77355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11827:7:350",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 77354,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11827:7:350",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 77357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11827:10:350",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 77352,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21995,
                            "src": "11804:7:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 77358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11804:34:350",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 77365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77360,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77333,
                          "src": "11842:4:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 77363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11858:1:350",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 77362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11850:7:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 77361,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11850:7:350",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 77364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11850:10:350",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11842:18:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "11803:57:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 77372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 77367,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77335,
                        "src": "11864:2:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 77370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11878:1:350",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 77369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11870:7:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77368,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11870:7:350",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11870:10:350",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "11864:16:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11803:77:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 77392,
                  "nodeType": "IfStatement",
                  "src": "11799:230:350",
                  "trueBody": {
                    "id": 77391,
                    "nodeType": "Block",
                    "src": "11882:147:350",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 77384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 77378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "11900:29:350",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 77375,
                                  "name": "TRANSFER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76709,
                                  "src": "11909:13:350",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 77376,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77333,
                                  "src": "11924:4:350",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 77374,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21995,
                                "src": "11901:7:350",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 77377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11901:28:350",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 77383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "11933:27:350",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 77380,
                                  "name": "TRANSFER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76709,
                                  "src": "11942:13:350",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 77381,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77335,
                                  "src": "11957:2:350",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 77379,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21995,
                                "src": "11934:7:350",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 77382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11934:26:350",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11900:60:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 77390,
                        "nodeType": "IfStatement",
                        "src": "11896:123:350",
                        "trueBody": {
                          "id": 77389,
                          "nodeType": "Block",
                          "src": "11962:57:350",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "215472616e736665722d526f6c65",
                                    "id": 77386,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11987:16:350",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    },
                                    "value": "!Transfer-Role"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    }
                                  ],
                                  "id": 77385,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "11980:6:350",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 77387,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11980:24:350",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 77388,
                              "nodeType": "ExpressionStatement",
                              "src": "11980:24:350"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              14462
            ],
            "documentation": {
              "id": 77331,
              "nodeType": "StructuredDocumentation",
              "src": "11411:43:350",
              "text": "@dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "11468:21:350",
            "overrides": {
              "id": 77341,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11611:8:350"
            },
            "parameters": {
              "id": 77340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77333,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11507:4:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77394,
                  "src": "11499:12:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11499:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77335,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11529:2:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77394,
                  "src": "11521:10:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11521:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77337,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "11549:12:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77394,
                  "src": "11541:20:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11541:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77339,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "11579:8:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77394,
                  "src": "11571:16:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11571:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11489:104:350"
            },
            "returnParameters": {
              "id": 77342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11620:0:350"
            },
            "scope": 77534,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 77408,
            "nodeType": "FunctionDefinition",
            "src": "12130:137:350",
            "nodes": [],
            "body": {
              "id": 77407,
              "nodeType": "Block",
              "src": "12202:65:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77402,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "12227:18:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 77403,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            77520
                          ],
                          "referencedDeclaration": 77520,
                          "src": "12247:10:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 77404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12247:12:350",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 77401,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "12219:7:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 77405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12219:41:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 77400,
                  "id": 77406,
                  "nodeType": "Return",
                  "src": "12212:48:350"
                }
              ]
            },
            "baseFunctions": [
              22796
            ],
            "documentation": {
              "id": 77395,
              "nodeType": "StructuredDocumentation",
              "src": "12041:84:350",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPlatformFeeInfo",
            "nameLocation": "12139:22:350",
            "overrides": {
              "id": 77397,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12178:8:350"
            },
            "parameters": {
              "id": 77396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12161:2:350"
            },
            "returnParameters": {
              "id": 77400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77399,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77408,
                  "src": "12196:4:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77398,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12196:4:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12195:6:350"
            },
            "scope": 77534,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77422,
            "nodeType": "FunctionDefinition",
            "src": "12367:142:350",
            "nodes": [],
            "body": {
              "id": 77421,
              "nodeType": "Block",
              "src": "12444:65:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77416,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "12469:18:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 77417,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            77520
                          ],
                          "referencedDeclaration": 77520,
                          "src": "12489:10:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 77418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12489:12:350",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 77415,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "12461:7:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 77419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12461:41:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 77414,
                  "id": 77420,
                  "nodeType": "Return",
                  "src": "12454:48:350"
                }
              ]
            },
            "baseFunctions": [
              22858
            ],
            "documentation": {
              "id": 77409,
              "nodeType": "StructuredDocumentation",
              "src": "12273:89:350",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "12376:27:350",
            "overrides": {
              "id": 77411,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12420:8:350"
            },
            "parameters": {
              "id": 77410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12403:2:350"
            },
            "returnParameters": {
              "id": 77414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77413,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77422,
                  "src": "12438:4:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77412,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12438:4:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12437:6:350"
            },
            "scope": 77534,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77436,
            "nodeType": "FunctionDefinition",
            "src": "12592:127:350",
            "nodes": [],
            "body": {
              "id": 77435,
              "nodeType": "Block",
              "src": "12654:65:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77430,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "12679:18:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 77431,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            77520
                          ],
                          "referencedDeclaration": 77520,
                          "src": "12699:10:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 77432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12699:12:350",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 77429,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "12671:7:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 77433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12671:41:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 77428,
                  "id": 77434,
                  "nodeType": "Return",
                  "src": "12664:48:350"
                }
              ]
            },
            "baseFunctions": [
              21940
            ],
            "documentation": {
              "id": 77423,
              "nodeType": "StructuredDocumentation",
              "src": "12515:72:350",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "12601:12:350",
            "overrides": {
              "id": 77425,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12630:8:350"
            },
            "parameters": {
              "id": 77424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12613:2:350"
            },
            "returnParameters": {
              "id": 77428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77427,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77436,
                  "src": "12648:4:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77426,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12648:4:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12647:6:350"
            },
            "scope": 77534,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77450,
            "nodeType": "FunctionDefinition",
            "src": "12809:133:350",
            "nodes": [],
            "body": {
              "id": 77449,
              "nodeType": "Block",
              "src": "12877:65:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77444,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "12902:18:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 77445,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            77520
                          ],
                          "referencedDeclaration": 77520,
                          "src": "12922:10:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 77446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12922:12:350",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 77443,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "12894:7:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 77447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12894:41:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 77442,
                  "id": 77448,
                  "nodeType": "Return",
                  "src": "12887:48:350"
                }
              ]
            },
            "baseFunctions": [
              23186
            ],
            "documentation": {
              "id": 77437,
              "nodeType": "StructuredDocumentation",
              "src": "12725:79:350",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "12818:18:350",
            "overrides": {
              "id": 77439,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12853:8:350"
            },
            "parameters": {
              "id": 77438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12836:2:350"
            },
            "returnParameters": {
              "id": 77442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77441,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77450,
                  "src": "12871:4:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77440,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12871:4:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12870:6:350"
            },
            "scope": 77534,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77464,
            "nodeType": "FunctionDefinition",
            "src": "13037:133:350",
            "nodes": [],
            "body": {
              "id": 77463,
              "nodeType": "Block",
              "src": "13105:65:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77458,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "13130:18:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 77459,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            77520
                          ],
                          "referencedDeclaration": 77520,
                          "src": "13150:10:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 77460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13150:12:350",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 77457,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "13122:7:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 77461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13122:41:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 77456,
                  "id": 77462,
                  "nodeType": "Return",
                  "src": "13115:48:350"
                }
              ]
            },
            "baseFunctions": [
              18263
            ],
            "documentation": {
              "id": 77451,
              "nodeType": "StructuredDocumentation",
              "src": "12948:84:350",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "13046:18:350",
            "overrides": {
              "id": 77453,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13081:8:350"
            },
            "parameters": {
              "id": 77452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13064:2:350"
            },
            "returnParameters": {
              "id": 77456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77455,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77464,
                  "src": "13099:4:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77454,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13099:4:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13098:6:350"
            },
            "scope": 77534,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77479,
            "nodeType": "FunctionDefinition",
            "src": "13258:137:350",
            "nodes": [],
            "body": {
              "id": 77478,
              "nodeType": "Block",
              "src": "13342:53:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77474,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76715,
                        "src": "13367:11:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 77475,
                        "name": "_signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77467,
                        "src": "13380:7:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 77473,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "13359:7:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 77476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13359:29:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 77472,
                  "id": 77477,
                  "nodeType": "Return",
                  "src": "13352:36:350"
                }
              ]
            },
            "baseFunctions": [
              24794
            ],
            "documentation": {
              "id": 77465,
              "nodeType": "StructuredDocumentation",
              "src": "13176:77:350",
              "text": "@dev Returns whether a given address is authorized to sign mint requests."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isAuthorizedSigner",
            "nameLocation": "13267:19:350",
            "overrides": {
              "id": 77469,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13318:8:350"
            },
            "parameters": {
              "id": 77468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77467,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "13295:7:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77479,
                  "src": "13287:15:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13287:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13286:17:350"
            },
            "returnParameters": {
              "id": 77472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77471,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77479,
                  "src": "13336:4:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77470,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13336:4:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13335:6:350"
            },
            "scope": 77534,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77493,
            "nodeType": "FunctionDefinition",
            "src": "13482:133:350",
            "nodes": [],
            "body": {
              "id": 77492,
              "nodeType": "Block",
              "src": "13555:60:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77487,
                        "name": "METADATA_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76721,
                        "src": "13580:13:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 77488,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            77520
                          ],
                          "referencedDeclaration": 77520,
                          "src": "13595:10:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 77489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13595:12:350",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 77486,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "13572:7:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 77490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13572:36:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 77485,
                  "id": 77491,
                  "nodeType": "Return",
                  "src": "13565:43:350"
                }
              ]
            },
            "baseFunctions": [
              21491
            ],
            "documentation": {
              "id": 77480,
              "nodeType": "StructuredDocumentation",
              "src": "13401:76:350",
              "text": "@dev Returns whether metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetMetadata",
            "nameLocation": "13491:15:350",
            "overrides": {
              "id": 77482,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13531:8:350"
            },
            "parameters": {
              "id": 77481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13506:2:350"
            },
            "returnParameters": {
              "id": 77485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77484,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77493,
                  "src": "13549:4:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77483,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13549:4:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13548:6:350"
            },
            "scope": 77534,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 77507,
            "nodeType": "FunctionDefinition",
            "src": "13714:144:350",
            "nodes": [],
            "body": {
              "id": 77506,
              "nodeType": "Block",
              "src": "13793:65:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77501,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "13818:18:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 77502,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            77520
                          ],
                          "referencedDeclaration": 77520,
                          "src": "13838:10:350",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 77503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13838:12:350",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 77500,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21995,
                      "src": "13810:7:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 77504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13810:41:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 77499,
                  "id": 77505,
                  "nodeType": "Return",
                  "src": "13803:48:350"
                }
              ]
            },
            "baseFunctions": [
              21534
            ],
            "documentation": {
              "id": 77494,
              "nodeType": "StructuredDocumentation",
              "src": "13621:88:350",
              "text": "@dev Returns whether operator restriction can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOperatorRestriction",
            "nameLocation": "13723:26:350",
            "overrides": {
              "id": 77496,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13769:8:350"
            },
            "parameters": {
              "id": 77495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13749:2:350"
            },
            "returnParameters": {
              "id": 77499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77498,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77507,
                  "src": "13787:4:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77497,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13787:4:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13786:6:350"
            },
            "scope": 77534,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 77520,
            "nodeType": "FunctionDefinition",
            "src": "13864:231:350",
            "nodes": [],
            "body": {
              "id": 77519,
              "nodeType": "Block",
              "src": "14033:62:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 77515,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46243,
                        "src": "14050:25:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46243_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 77516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46211,
                      "src": "14050:36:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 77517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14050:38:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 77514,
                  "id": 77518,
                  "nodeType": "Return",
                  "src": "14043:45:350"
                }
              ]
            },
            "baseFunctions": [
              46211,
              157269
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "13873:10:350",
            "overrides": {
              "id": 77511,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 77509,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157284,
                  "src": "13949:18:350"
                },
                {
                  "id": 77510,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46243,
                  "src": "13969:25:350"
                }
              ],
              "src": "13940:55:350"
            },
            "parameters": {
              "id": 77508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13883:2:350"
            },
            "returnParameters": {
              "id": 77514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77513,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "14021:6:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 77520,
                  "src": "14013:14:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77512,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14013:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14012:16:350"
            },
            "scope": 77534,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 77533,
            "nodeType": "FunctionDefinition",
            "src": "14101:227:350",
            "nodes": [],
            "body": {
              "id": 77532,
              "nodeType": "Block",
              "src": "14268:60:350",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 77528,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46243,
                        "src": "14285:25:350",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46243_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 77529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46238,
                      "src": "14285:34:350",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 77530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14285:36:350",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 77527,
                  "id": 77531,
                  "nodeType": "Return",
                  "src": "14278:43:350"
                }
              ]
            },
            "baseFunctions": [
              46238,
              157278
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "14110:8:350",
            "overrides": {
              "id": 77524,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 77522,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157284,
                  "src": "14184:18:350"
                },
                {
                  "id": 77523,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46243,
                  "src": "14204:25:350"
                }
              ],
              "src": "14175:55:350"
            },
            "parameters": {
              "id": 77521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14118:2:350"
            },
            "returnParameters": {
              "id": 77527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77526,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77533,
                  "src": "14248:14:350",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77525,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14248:5:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14247:16:350"
            },
            "scope": 77534,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 76676,
              "name": "ILoyaltyCard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75316,
              "src": "2114:12:350"
            },
            "id": 76677,
            "nodeType": "InheritanceSpecifier",
            "src": "2114:12:350"
          },
          {
            "baseName": {
              "id": 76678,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18264,
              "src": "2132:16:350"
            },
            "id": 76679,
            "nodeType": "InheritanceSpecifier",
            "src": "2132:16:350"
          },
          {
            "baseName": {
              "id": 76680,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21941,
              "src": "2154:7:350"
            },
            "id": 76681,
            "nodeType": "InheritanceSpecifier",
            "src": "2154:7:350"
          },
          {
            "baseName": {
              "id": 76682,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23187,
              "src": "2167:7:350"
            },
            "id": 76683,
            "nodeType": "InheritanceSpecifier",
            "src": "2167:7:350"
          },
          {
            "baseName": {
              "id": 76684,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22859,
              "src": "2180:11:350"
            },
            "id": 76685,
            "nodeType": "InheritanceSpecifier",
            "src": "2180:11:350"
          },
          {
            "baseName": {
              "id": 76686,
              "name": "PlatformFee",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22797,
              "src": "2197:11:350"
            },
            "id": 76687,
            "nodeType": "InheritanceSpecifier",
            "src": "2197:11:350"
          },
          {
            "baseName": {
              "id": 76688,
              "name": "Multicall",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21413,
              "src": "2214:9:350"
            },
            "id": 76689,
            "nodeType": "InheritanceSpecifier",
            "src": "2214:9:350"
          },
          {
            "baseName": {
              "id": 76690,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22587,
              "src": "2229:21:350"
            },
            "id": 76691,
            "nodeType": "InheritanceSpecifier",
            "src": "2229:21:350"
          },
          {
            "baseName": {
              "id": 76692,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 151625,
              "src": "2256:26:350"
            },
            "id": 76693,
            "nodeType": "InheritanceSpecifier",
            "src": "2256:26:350"
          },
          {
            "baseName": {
              "id": 76694,
              "name": "DefaultOperatorFiltererUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18344,
              "src": "2288:34:350"
            },
            "id": 76695,
            "nodeType": "InheritanceSpecifier",
            "src": "2288:34:350"
          },
          {
            "baseName": {
              "id": 76696,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46243,
              "src": "2328:25:350"
            },
            "id": 76697,
            "nodeType": "InheritanceSpecifier",
            "src": "2328:25:350"
          },
          {
            "baseName": {
              "id": 76698,
              "name": "NFTMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21492,
              "src": "2359:11:350"
            },
            "id": 76699,
            "nodeType": "InheritanceSpecifier",
            "src": "2359:11:350"
          },
          {
            "baseName": {
              "id": 76700,
              "name": "SignatureMintERC721Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24935,
              "src": "2376:30:350"
            },
            "id": 76701,
            "nodeType": "InheritanceSpecifier",
            "src": "2376:30:350"
          },
          {
            "baseName": {
              "id": 76702,
              "name": "ERC721AUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14481,
              "src": "2412:18:350"
            },
            "id": 76703,
            "nodeType": "InheritanceSpecifier",
            "src": "2412:18:350"
          }
        ],
        "canonicalName": "LoyaltyCard",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 76675,
          "nodeType": "StructuredDocumentation",
          "src": "1547:538:350",
          "text": "  @title LoyaltyCard\n  @custom:description This contract is a loyalty card NFT collection. Each NFT represents a loyalty card, and the NFT's metadata\n                      contains the loyalty card's information. A loyalty card's metadata can be updated by an admin of the contract.\n                      A loyalty card can be cancelled (i.e. 'burned') by its owner or an approved operator. A loyalty card can be revoked\n                      (i.e. 'burned') without its owner's approval, by an admin of the contract."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          77534,
          14481,
          104038,
          156718,
          156302,
          158489,
          158501,
          24935,
          34679,
          158445,
          21492,
          33723,
          14850,
          46243,
          157284,
          18344,
          21859,
          21535,
          33936,
          151625,
          151439,
          22587,
          22288,
          34057,
          34032,
          21413,
          33709,
          22797,
          34100,
          22859,
          34121,
          23187,
          34185,
          14831,
          14687,
          21941,
          33959,
          18264,
          33220,
          75316
        ],
        "name": "LoyaltyCard",
        "nameLocation": "2095:11:350",
        "scope": 77535,
        "usedErrors": [
          21699,
          103979,
          103982,
          103985,
          103988,
          103991,
          103994,
          103997,
          104000,
          104003,
          104006,
          104009,
          104012,
          104015
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 350
}