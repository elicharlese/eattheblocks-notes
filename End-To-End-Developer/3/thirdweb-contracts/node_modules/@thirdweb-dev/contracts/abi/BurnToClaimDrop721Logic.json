{
  "abi": [
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "claimConditions",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "MaxTotalSupplyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "restriction",
          "type": "bool"
        }
      ],
      "name": "OperatorRestriction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "name": "TokenURIRevealed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "originContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "burnTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "TokensBurnedAndClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimConditionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedBaseURI",
          "type": "bytes"
        }
      ],
      "name": "TokensLazyMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_burnTokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "burnAndClaim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "encryptDecrypt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "encryptedData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveClaimConditionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBurnToClaimInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "originContractAddress",
              "type": "address"
            },
            {
              "internalType": "enum IBurnToClaim.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "mintPriceForNewToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IBurnToClaim.BurnToClaimInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        }
      ],
      "name": "getClaimConditionById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_key",
          "type": "bytes"
        }
      ],
      "name": "getRevealURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supplyClaimedByWallet",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchId",
          "type": "uint256"
        }
      ],
      "name": "isEncryptedBatch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURIForTokens",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "lazyMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "batchId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorRestriction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_key",
          "type": "bytes"
        }
      ],
      "name": "reveal",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "originContractAddress",
              "type": "address"
            },
            {
              "internalType": "enum IBurnToClaim.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "mintPriceForNewToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IBurnToClaim.BurnToClaimInfo",
          "name": "_burnToClaimInfo",
          "type": "tuple"
        }
      ],
      "name": "setBurnToClaimInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "_conditions",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "setMaxTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_restriction",
          "type": "bool"
        }
      ],
      "name": "setOperatorRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "verifyBurnToClaim",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "2215:14593:381:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102805760003560e01c80636f4f2837116101565780636f4f2837146106055780636f8934f41461062557806370a082311461065257806374bc7db714610672578063778a4c0e1461069257806384bb1e42146106b45780638da5cb5b146106c7578063938e3d7b146106dc57806395d89b41146106fc5780639bcf7a15146107115780639fc4d68f14610731578063a05112fc14610751578063a22cb46514610771578063a2309ff814610791578063acd083f814610791578063ad1eefc5146107a6578063b24f2d39146107c6578063b88d4fde146107db578063bb408851146107fb578063c68907de1461081b578063c87b56dd14610830578063ce80564214610850578063d37c353b14610870578063d45573f614610890578063d637ed59146108a5578063e7150322146108cf578063e8a3d485146108ef578063e985e9c51461090457600080fd5b806301ffc9a7146102855780630689b284146102ba57806306fdde03146102dc578063079fe40e146102fe578063081812fc1461032b578063095ea7b31461034b57806313af40351461036b5780631567313b1461038b57806318160ddd1461039e5780631e7ac488146103c157806323a2902b146103e157806323b872dd146104015780632419f51b146104215780632a55205a146104415780632ab4d0521461046f57806332f0cd64146104845780633b1475a7146104a45780633f3e4c11146104b957806342842e0e146104d957806342966c68146104f9578063492e224b146105195780634cc157df14610539578063504c6e011461057b578063572b6c0514610590578063600dd5ea146105b05780636352211e146105d057806363b45e2d146105f0575b600080fd5b34801561029157600080fd5b506102a56102a0366004614778565b610924565b60405190151581526020015b60405180910390f35b3480156102c657600080fd5b506102da6102d5366004614795565b610950565b005b3480156102e857600080fd5b506102f16109b9565b6040516102b19190614805565b34801561030a57600080fd5b50610313610a5a565b6040516001600160a01b0390911681526020016102b1565b34801561033757600080fd5b50610313610346366004614818565b610a75565b34801561035757600080fd5b506102da610366366004614846565b610ac5565b34801561037757600080fd5b506102da610386366004614872565b610b72565b6102da61039936600461488f565b610ba2565b3480156103aa57600080fd5b506103b3610c54565b6040519081526020016102b1565b3480156103cd57600080fd5b506102da6103dc366004614846565b610c6d565b3480156103ed57600080fd5b506102a56103fc3660046148c3565b610c9f565b34801561040d57600080fd5b506102da61041c366004614940565b611097565b34801561042d57600080fd5b506103b361043c366004614818565b61116e565b34801561044d57600080fd5b5061046161045c36600461488f565b6111e9565b6040516102b1929190614981565b34801561047b57600080fd5b506103b3611226565b34801561049057600080fd5b506102da61049f3660046149a8565b611238565b3480156104b057600080fd5b506103b36112a9565b3480156104c557600080fd5b506102da6104d4366004614818565b6112b8565b3480156104e557600080fd5b506102da6104f4366004614940565b61134b565b34801561050557600080fd5b506102da610514366004614818565b611415565b34801561052557600080fd5b506102a5610534366004614818565b611420565b34801561054557600080fd5b50610559610554366004614818565b611454565b604080516001600160a01b03909316835261ffff9091166020830152016102b1565b34801561058757600080fd5b506102a56114cc565b34801561059c57600080fd5b506102a56105ab366004614872565b6114e1565b3480156105bc57600080fd5b506102da6105cb366004614846565b61151e565b3480156105dc57600080fd5b506103136105eb366004614818565b61154c565b3480156105fc57600080fd5b506103b361155e565b34801561061157600080fd5b506102da610620366004614872565b611569565b34801561063157600080fd5b50610645610640366004614818565b611596565b6040516102b191906149c5565b34801561065e57600080fd5b506103b361066d366004614872565b611703565b34801561067e57600080fd5b506102da61068d366004614a32565b611761565b34801561069e57600080fd5b506106a7611abf565b6040516102b19190614acd565b6102da6106c2366004614bfe565b611b73565b3480156106d357600080fd5b50610313611cac565b3480156106e857600080fd5b506102da6106f7366004614c8b565b611cb7565b34801561070857600080fd5b506102f1611ce4565b34801561071d57600080fd5b506102da61072c366004614cd3565b611d01565b34801561073d57600080fd5b506102f161074c366004614d42565b611d35565b34801561075d57600080fd5b506102f161076c366004614818565b611ec3565b34801561077d57600080fd5b506102da61078c366004614d8d565b611f72565b34801561079d57600080fd5b506103b361201f565b3480156107b257600080fd5b506103b36107c1366004614dc6565b61202a565b3480156107d257600080fd5b5061055961205f565b3480156107e757600080fd5b506102da6107f6366004614deb565b61208b565b34801561080757600080fd5b506102da610816366004614e56565b612165565b34801561082757600080fd5b506103b36123e3565b34801561083c57600080fd5b506102f161084b366004614818565b612495565b34801561085c57600080fd5b506102f161086b366004614d42565b612504565b34801561087c57600080fd5b506103b361088b366004614e8b565b6125e9565b34801561089c57600080fd5b50610559612689565b3480156108b157600080fd5b506108ba612696565b604080519283526020830191909152016102b1565b3480156108db57600080fd5b506102f16108ea366004614f04565b6126b5565b3480156108fb57600080fd5b506102f161272a565b34801561091057600080fd5b506102a561091f366004614f5f565b612747565b600061092f82612786565b8061094a575063152a902d60e11b6001600160e01b03198316145b92915050565b6109586127d6565b61099b5760405162461bcd60e51b815260206004820152600f60248201526e2737ba1030baba3437b934bd32b21760891b60448201526064015b60405180910390fd5b60006109a56127e4565b905081816109b38282614fad565b50505050565b606060006109c5612808565b90508060020180546109d69061501c565b80601f0160208091040260200160405190810160405280929190818152602001828054610a029061501c565b8015610a4f5780601f10610a2457610100808354040283529160200191610a4f565b820191906000526020600020905b815481529060010190602001808311610a3257829003601f168201915b505050505091505090565b600080610a6561282c565b546001600160a01b031692915050565b600080610a80612808565b9050610a8b83612850565b610aa8576040516333d1c03960e21b815260040160405180910390fd5b60009283526006016020525060409020546001600160a01b031690565b816000610ad061288c565b805490915060ff1615610b68576daaeb6d7670e522a718067333cd4e3b15610b6857604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c617113490610b259030903390600401615051565b602060405180830381865afa158015610b42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b66919061506b565b505b6109b384846128b0565b610b7a6127d6565b610b965760405162461bcd60e51b815260040161099290615088565b610b9f81612944565b50565b610bab816129a0565b6000610bb5612a65565b9050610bc2818484612165565b610bcd818484612a6f565b6000610bd76127e4565b60038101546002820154919250610bfe9160009186916001600160a01b0390911690612b8b565b610c088284612cd5565b805460405184815285916001600160a01b03858116929116907f4fb7afbbfcb1660363d7abbda0ccf1b007126830d7fd0ad2126e3770afd6f4e09060200160405180910390a450505050565b600080610c5f612808565b600181015490540392915050565b610c756127d6565b610c915760405162461bcd60e51b815260040161099290615088565b610c9b8282612cef565b5050565b600080610caa612d87565b60008981526002808301602090815260408084208151610100810183528154815260018201549381019390935292830154908201526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c08201526007820180549495509293909260e0840191610d2b9061501c565b80601f0160208091040260200160405190810160405280929190818152602001828054610d579061501c565b8015610da45780601f10610d7957610100808354040283529160200191610da4565b820191906000526020600020905b815481529060010190602001808311610d8757829003601f168201915b50505091909252505050606081015160a082015160c08301516080840151939450919290919015610e8457610e80610ddc88806150b0565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508e9060208c01359060408d013590610e31908e0160608f01614872565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b16607482015260880160405160208183030381529060405280519060200120612dab565b5095505b8515610f09576020870135610e995782610e9f565b86602001355b925060001987604001351415610eb55781610ebb565b86604001355b9150600019876040013514158015610eec57506000610ee06080890160608a01614872565b6001600160a01b031614155b610ef65780610f06565b610f066080880160608901614872565b90505b60008560000160030160008e815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020549050816001600160a01b03168a6001600160a01b0316141580610f6a5750828914155b15610faa5760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610992565b8a1580610fbf575083610fbd828d61510f565b115b15610ff55760405162461bcd60e51b8152600401610992906020808252600490820152632151747960e01b604082015260600190565b84602001518b866040015161100a919061510f565b11156110455760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610992565b84514210156110875760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610992565b5050505050509695505050505050565b8260006110a261288c565b805490915060ff161561115c576daaeb6d7670e522a718067333cd4e3b1561115c576001600160a01b0382163314156110e6576110e0858585612e79565b506109b3565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c6171134906111199030903390600401615051565b602060405180830381865afa158015611136573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115a919061506b565b505b611167858585612e79565b5050505050565b600080611179612e84565b905061118361155e565b83106111c15760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610992565b8060000183815481106111d6576111d6615127565b9060005260206000200154915050919050565b6000806000806111f886611454565b90945084925061ffff169050612710611211828761513d565b61121b9190615172565b925050509250929050565b600080611231612ea8565b5492915050565b6112406127d6565b6112a05760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420617574686f72697a656420746f20736574206f70657261746f72207260448201526a32b9ba3934b1ba34b7b71760a91b6064820152608401610992565b610b9f81612ecc565b60006112b3612f17565b905090565b6112ca60006112c5612f22565b612f2c565b6113035760405162461bcd60e51b815260206004820152600a6024820152693737ba1030b236b4b71760b11b6044820152606401610992565b600061130d612ea8565b8281556040518381529091507ff2672935fc79f5237559e2e2999dbe743bf65430894ac2b37666890e7c69e1af906020015b60405180910390a15050565b82600061135661288c565b805490915060ff161561140a576daaeb6d7670e522a718067333cd4e3b1561140a576001600160a01b038216331415611394576110e0858585612f76565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c6171134906113c79030903390600401615051565b602060405180830381865afa1580156113e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611408919061506b565b505b611167858585612f76565b610b9f816001612f91565b60008061142b613183565b6000848152602082905260408120805492935090916114499061501c565b905011915050919050565b60008060006114616131a7565b600085815260018083016020908152604092839020835180850190945280546001600160a01b03168085529201549083015291925090156114a857805160208201516114c1565b81546001600160a01b03811690600160a01b900461ffff165b935093505050915091565b6000806114d761288c565b5460ff1692915050565b6001600160a01b031660009081527fa140e363058a6cf3ca062c5e378319d7ddd21cedfbdca620f1c65b05028f156c602052604090205460ff1690565b6115266127d6565b6115425760405162461bcd60e51b815260040161099290615088565b610c9b82826131cb565b600061155782613253565b5192915050565b600080611231612e84565b6115716127d6565b61158d5760405162461bcd60e51b815260040161099290615088565b610b9f8161337c565b6115ea60405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b60006115f4612d87565b6000848152600280830160209081526040928390208351610100810185528154815260018201549281019290925291820154928101929092526003810154606083015260048101546080830152600581015460a083015260068101546001600160a01b031660c08301526007810180549394509192909160e08401916116799061501c565b80601f01602080910402602001604051908101604052809291908181526020018280546116a59061501c565b80156116f25780601f106116c7576101008083540402835291602001916116f2565b820191906000526020600020905b8154815290600101906020018083116116d557829003601f168201915b505050505081525050915050919050565b60008061170e612808565b90506001600160a01b038316611737576040516323d3ad8160e21b815260040160405180910390fd5b6001600160a01b03909216600090815260059092016020525060409020546001600160401b031690565b6117696127d6565b6117855760405162461bcd60e51b815260040161099290615088565b600061178f612d87565b80546001820154919250908184156117ae576117ab828461510f565b90505b600184018690558084556000805b87811015611967578015806117f457508888828181106117de576117de615127565b90506020028101906117f09190615186565b3582105b6118255760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610992565b60006002870181611836848761510f565b815260200190815260200160002060020154905089898381811061185c5761185c615127565b905060200281019061186e9190615186565b602001358111156118b65760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610992565b8989838181106118c8576118c8615127565b90506020028101906118da9190615186565b6002880160006118ea858861510f565b8152602001908152602001600020818161190491906152ab565b50819050600288016000611918858861510f565b815260208101919091526040016000206002015589898381811061193e5761193e615127565b90506020028101906119509190615186565b35925081905061195f8161534f565b9150506117bc565b5085156119e957835b828110156119e3576000818152600280880160205260408220828155600181018390559081018290556003810182905560048101829055600581018290556006810180546001600160a01b0319169055906119ce600783018261468f565b505080806119db9061534f565b915050611970565b50611a7a565b86831115611a7a57865b83811015611a7857600286016000611a0b838661510f565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b031916905590611a63600783018261468f565b50508080611a709061534f565b9150506119f3565b505b7fbf4016fceeaaa4ac5cf4be865b559ff85825ab4ca7aa7b661d16e2f544c03098888888604051611aad939291906153d8565b60405180910390a15050505050505050565b6040805160a081018252600080825260208201819052918101829052606081018290526080810182905290611af26127e4565b6040805160a0810190915281546001600160a01b03811682529192509082906020830190600160a01b900460ff166001811115611b3157611b31614ab7565b6001811115611b4257611b42614ab7565b815260018201546020820152600282015460408201526003909101546001600160a01b031660609091015292915050565b611b818686868686866133d2565b6000611b8b6123e3565b9050611ba281611b99612a65565b88888888610c9f565b506000611bad612d87565b60008381526002808301602052604082200180549293508992909190611bd490849061510f565b9091555050600082815260038201602052604081208891611bf3612a65565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254611c22919061510f565b90915550611c3590506000888888612b8b565b6000611c4189896133db565b9050886001600160a01b0316611c55612a65565b6001600160a01b0316847ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e848c604051611c99929190918252602082015260400190565b60405180910390a4505050505050505050565b600080610a656133fd565b611cbf6127d6565b611cdb5760405162461bcd60e51b815260040161099290615088565b610b9f81613421565b60606000611cf0612808565b90508060030180546109d69061501c565b611d096127d6565b611d255760405162461bcd60e51b815260040161099290615088565b611d30838383613511565b505050565b60606000611d41613183565b600086815260208290526040812080549293509091611d5f9061501c565b80601f0160208091040260200160405190810160405280929190818152602001828054611d8b9061501c565b8015611dd85780601f10611dad57610100808354040283529160200191611dd8565b820191906000526020600020905b815481529060010190602001808311611dbb57829003601f168201915b50505050509050805160001415611e255760405162461bcd60e51b8152602060048201526011602482015270139bdd1a1a5b99c81d1bc81c995d99585b607a1b6044820152606401610992565b60008082806020019051810190611e3c91906154c0565b91509150611e4b8288886126b5565b94508085888846604051602001611e659493929190615540565b6040516020818303038152906040528051906020012014611eb85760405162461bcd60e51b815260206004820152600d60248201526c496e636f7272656374206b657960981b6044820152606401610992565b505050509392505050565b60606000611ecf613183565b6000848152602082905260409020805491925090611eec9061501c565b80601f0160208091040260200160405190810160405280929190818152602001828054611f189061501c565b8015611f655780601f10611f3a57610100808354040283529160200191611f65565b820191906000526020600020905b815481529060010190602001808311611f4857829003601f168201915b5050505050915050919050565b816000611f7d61288c565b805490915060ff1615612015576daaeb6d7670e522a718067333cd4e3b1561201557604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c617113490611fd29030903390600401615051565b602060405180830381865afa158015611fef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612013919061506b565b505b6109b384846135c7565b600080611231612808565b600080612035612d87565b6000948552600301602090815260408086206001600160a01b039095168652939052505090205490565b600080600061206c6131a7565b546001600160a01b03811694600160a01b90910461ffff169350915050565b83600061209661288c565b805490915060ff1615612151576daaeb6d7670e522a718067333cd4e3b15612151576001600160a01b0382163314156120db576120d5868686866136a9565b50611167565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c61711349061210e9030903390600401615051565b602060405180830381865afa15801561212b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061214f919061506b565b505b61215d868686866136a9565b505050505050565b600061216f611abf565b80519091506001600160a01b03166121c45760405162461bcd60e51b815260206004820152601860248201527727b934b3b4b71031b7b73a3930b1ba103737ba1039b2ba1760411b6044820152606401610992565b6000816020015160018111156121dc576121dc614ab7565b14156122d557816001146122235760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606401610992565b80516040516331a9108f60e11b8152600481018590526001600160a01b03868116921690636352211e90602401602060405180830381865afa15801561226d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122919190615569565b6001600160a01b0316146122d05760405162461bcd60e51b815260206004820152600660248201526510a7bbb732b960d11b6044820152606401610992565b6109b3565b6001816020015160018111156122ed576122ed614ab7565b14156109b357604081015183811461233a5760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081d1bdad95b88125960821b6044820152606401610992565b8151604051627eeac760e11b815284916001600160a01b03169062fdd58e906123699089908990600401614981565b602060405180830381865afa158015612386573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123aa9190615586565b10156111675760405162461bcd60e51b81526020600482015260086024820152672142616c616e636560c01b6044820152606401610992565b6000806123ee612d87565b60018101548154919250600091612405919061510f565b90505b815481111561245e5760028201600061242260018461559f565b815260200190815260200160002060000154421061244c5761244560018261559f565b9250505090565b80612456816155b6565b915050612408565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b6044820152606401610992565b606060006124a2836136f4565b50905060006124b084613802565b90506124bb82611420565b156124e957806040516020016124d191906155cd565b60405160208183030381529060405292505050919050565b806124f38561396e565b6040516020016124d19291906155f2565b60606125327f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66112c5612f22565b61256c5760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b4b73a32b91760a91b6044820152606401610992565b60006125778561116e565b9050612584818585611d35565b915061259f8160405180602001604052806000815250613a73565b6125a98183613a9f565b847f6df1d8db2a036436ffe0b2d1833f2c5f1e624818dfce2578c0faa4b83ef9998d836040516125d99190614805565b60405180910390a2509392505050565b6000806125f4612f17565b905082156126715760008061260b85870187615621565b91509150815160001415801561262057508015155b1561266e5761266e6126328a8561510f565b87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250613a7392505050565b50505b61267e8787878787613acf565b979650505050505050565b600080600061206c613be5565b60008060006126a3612d87565b80546001909101549094909350915050565b8251604080518083016020019091528181529060005b818110156127215760008585836040516020016126ea93929190615665565b60408051601f1981840301815291905280516020918201208884018201511885840182015261271a91508261510f565b90506126cb565b50509392505050565b60606000612736613c09565b90508060000180546109d69061501c565b600080612752612808565b6001600160a01b03948516600090815260079190910160209081526040808320959096168252939093525050205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806127b757506001600160e01b03198216635b5e139f60e01b145b8061094a57506301ffc9a760e01b6001600160e01b031983161461094a565b60006112b3816112c5612f22565b7fbd73abf3566bad3a8b3162594ba9fca3ad3c2a2e9b650442ad3741177cc9233e90565b7f5aa52bc3377dec757a2280f415d89b13ba8cd01bf969ccb7487e8a4fba742be390565b7f52513acdf273074fe51c68a52514ea5eabc2d36eb91435d5799fc3f9adc3053090565b60008061285b612808565b905080548310801561288557506000838152600482016020526040902054600160e01b900460ff16155b9392505050565b7f54378f4d3b8673acfc5119539edbb9597399240ea9418c2c01cf8d1dcb71133c90565b60006128bb8261154c565b9050806001600160a01b0316836001600160a01b031614156128f05760405163250fdee360e21b815260040160405180910390fd5b806001600160a01b0316612902612f22565b6001600160a01b0316146129395761291c8161091f612f22565b612939576040516367d9dca160e11b815260040160405180910390fd5b611d30838383613c2d565b600061294e6133fd565b80546001600160a01b038481166001600160a01b031983168117845560405193945091169182907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a3505050565b60006129aa612ea8565b905060006129b6612808565b82548154919250906129c6612f17565b6129d0868361510f565b1115612a085760405162461bcd60e51b815260206004820152600760248201526621546f6b656e7360c81b6044820152606401610992565b811580612a1e575081612a1b868361510f565b11155b6111675760405162461bcd60e51b815260206004820152601860248201527732bc31b2b2b21036b0bc103a37ba30b61039bab838363c9760411b6044820152606401610992565b60006112b3612f22565b6000612a79611abf565b9050600081602001516001811115612a9357612a93614ab7565b1415612afb578051604051630852cd8d60e31b8152600481018590526001600160a01b03909116906342966c6890602401600060405180830381600087803b158015612ade57600080fd5b505af1158015612af2573d6000803e3d6000fd5b505050506109b3565b600181602001516001811115612b1357612b13614ab7565b14156109b3578051604051637a94c56560e11b81526001600160a01b03868116600483015260248201869052604482018590529091169063f5298aca90606401600060405180830381600087803b158015612b6d57600080fd5b505af1158015612b81573d6000803e3d6000fd5b5050505050505050565b80612bc75734156122d05760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610992565b600080612bd2612689565b909250905060006001600160a01b03871615612bee5786612bf6565b612bf6610a5a565b90506000612c04858861513d565b90506000612710612c1961ffff86168461513d565b612c239190615172565b905060006001600160a01b03881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612c555750348214612c59565b5034155b80612c9a5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672076616c756560781b6044820152606401610992565b612cad88612ca6612f22565b8885613c9c565b612cc988612cb9612f22565b86612cc4868861559f565b613c9c565b50505050505050505050565b610c9b828260405180602001604052806000815250613ce1565b6000612cf9613be5565b9050612710821115612d1d5760405162461bcd60e51b815260040161099290615677565b80546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b03841690811782556040518381527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a2505050565b7fbc63558797adc09ce5b77f3ca89acfccabdd075e03de61144467402677b956b290565b6000808281805b8751811015612e6d57612dc660028361513d565b91506000888281518110612ddc57612ddc615127565b60200260200101519050808411612e1e576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350612e5a565b6040805160208101839052908101859052606001604051602081830303815290604052805190602001209350600183612e57919061510f565b92505b5080612e658161534f565b915050612db2565b50941495939450505050565b611d30838383613e8e565b7f2b9315c4a5504b910af96088bc63fb8f61ff2bb46e94fb4b0cb67ad1915c33ac90565b7f1910f49fec91b8db01a74019f3be20d8ae8a33debc54bfae6c4fdbf79e8d59d490565b6000612ed661288c565b805460ff191683151590811782556040519081529091507f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba780969060200161133f565b6000806112316140a4565b60006112b36140c8565b60009182527fd0ebebe8e6445c62babf8fef767eb39f1002bb957bb5b83258275a4e46428ed5602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611d308383836040518060200160405280600081525061208b565b6000612f9b612808565b90506000612fa884613253565b80519091508315613030576000816001600160a01b0316612fc7612f22565b6001600160a01b03161480612fe35750612fe38261091f612f22565b8061300e5750612ff1612f22565b6001600160a01b031661300387610a75565b6001600160a01b0316145b90508061302e57604051632ce44b5f60e11b815260040160405180910390fd5b505b61303e8160008760016140ea565b61304a60008683613c2d565b6001600160a01b03808216600081815260058601602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558c865260048b01909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b178555918a01808452922080549194909116613147578654821461314757805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051879250600091506001600160a01b038416906000805160206157a8833981519152908390a450506001908101805490910190555050565b7f5a931efe29bc5aac3b2104f3d22aa57ffd5882b744fbcd4ab53728e57cea156390565b7f995f01bd2df7283cdccde6ac870b4e9dc366a11c2005b318f39305029bc84a2390565b6127108111156131ed5760405162461bcd60e51b815260040161099290615677565b60006131f76131a7565b80546001600160a01b0385166001600160b01b03199091168117600160a01b61ffff861602178255604051848152919250907f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb90602001612d7a565b6040805160608101825260008082526020820181905291810182905290613278612808565b9050828154811015613363576000818152600483016020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161515918101829052906133615780516001600160a01b0316156132f557949350505050565b50600019016000818152600483016020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff161515928101929092521561335c57949350505050565b6132f5565b505b604051636f96cda160e11b815260040160405180910390fd5b600061338661282c565b80546001600160a01b0319166001600160a01b0384169081178255604051919250907f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a25050565b61215d856129a0565b6000806133e6612808565b8054925090506133f68484612cd5565b5092915050565b7ffa02b2ade2dba28b48a24f204a68d8c0005ca2ccfd58c765cdddd023319a9b3f90565b600061342b613c09565b9050600081600001805461343e9061501c565b80601f016020809104026020016040519081016040528092919081815260200182805461346a9061501c565b80156134b75780601f1061348c576101008083540402835291602001916134b7565b820191906000526020600020905b81548152906001019060200180831161349a57829003601f168201915b505086519394506134d29386935060208801925090506146c9565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681846040516135049291906156a0565b60405180910390a1505050565b6127108111156135335760405162461bcd60e51b815260040161099290615677565b600061353d6131a7565b6040805180820182526001600160a01b03868116808352602080840188815260008b81526001888101845290879020955186546001600160a01b031916951694909417855551939092019290925591518581529293509186917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a350505050565b60006135d1612808565b90506135db612f22565b6001600160a01b0316836001600160a01b0316141561360d5760405163b06307db60e01b815260040160405180910390fd5b8181600701600061361c612f22565b6001600160a01b03908116825260208083019390935260409182016000908120918816808252919093529120805460ff191692151592909217909155613660612f22565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318460405161369c911515815260200190565b60405180910390a3505050565b6136b4848484613e8e565b6136c6836001600160a01b03166141a9565b156109b3576136d7848484846141b8565b6109b3576040516368d2bf6b60e11b815260040160405180910390fd5b6000806000613701612e84565b9050600061370d61155e565b82546040805160208084028201810190925282815292935060009291859183018282801561375a57602002820191906000526020600020905b815481526020019060010190808311613746575b5050505050905060005b828110156137c75781818151811061377e5761377e615127565b60200260200101518710156137b5578094508181815181106137a2576137a2615127565b6020026020010151955050505050915091565b6137c060018261510f565b9050613764565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610992565b6060600061380e612e84565b9050600061381a61155e565b82546040805160208084028201810190925282815292935060009291859183018282801561386757602002820191906000526020600020905b815481526020019060010190808311613853575b5050505050905060005b828110156137c75781818151811061388b5761388b615127565b602002602001015186101561395c578360010160008383815181106138b2576138b2615127565b6020026020010151815260200190815260200160002080546138d39061501c565b80601f01602080910402602001604051908101604052809291908181526020018280546138ff9061501c565b801561394c5780601f106139215761010080835404028352916020019161394c565b820191906000526020600020905b81548152906001019060200180831161392f57829003601f168201915b5050505050945050505050919050565b61396760018261510f565b9050613871565b6060816139925750506040805180820190915260018152600360fc1b602082015290565b8160005b81156139bc57806139a68161534f565b91506139b59050600a83615172565b9150613996565b6000816001600160401b038111156139d6576139d6614b33565b6040519080825280601f01601f191660200182016040528015613a00576020820181803683370190505b5090505b8415613a6b57613a1560018361559f565b9150613a22600a866156ce565b613a2d90603061510f565b60f81b818381518110613a4257613a42615127565b60200101906001600160f81b031916908160001a905350613a64600a86615172565b9450613a04565b949350505050565b6000613a7d613183565b60008481526020828152604090912084519293506109b39290918501906146c9565b6000613aa9612e84565b6000848152600182016020908152604090912084519293506109b39290918501906146c9565b6000613ad96142a6565b613af55760405162461bcd60e51b815260040161099290615088565b85613b2a5760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b6044820152606401610992565b6000613b346140a4565b9050600081600001549050613b80818989898080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506142d492505050565b9083559250807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001613bb38b8461510f565b613bbd919061559f565b89898989604051613bd29594939291906156e2565b60405180910390a2505095945050505050565b7f4aeb3f25cc46659cf4e4966e5c48b11e9400e6e4bfafae7e3dc6cc3fbc858deb90565b7fa7d40346e44ca145e94a946aa34a7d4a67245577dc18699a626fe0ffc6ce328190565b6000613c37612808565b600084815260068201602052604080822080546001600160a01b0319166001600160a01b03898116918217909255915193945086939192908616917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b80613ca6576109b3565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415613cd5576122d08282614332565b6109b3848484846143d4565b6000613ceb612808565b80549091506001600160a01b038516613d1657604051622e076360e81b815260040160405180910390fd5b83613d345760405163b562e8dd60e01b815260040160405180910390fd5b613d4160008683876140ea565b6001600160a01b0385166000818152600584016020908152604080832080546001600160801b031981166001600160401b038083168c018116918217600160401b6001600160401b031990941690921783900481168c018116909202179091558584526004870190925290912080546001600160e01b0319168317600160a01b4290931692909202919091179055819081860190613dde906141a9565b15613e53575b60405182906001600160a01b038916906000906000805160206157a8833981519152908290a4613e1d60008884806001019550886141b8565b613e3a576040516368d2bf6b60e11b815260040160405180910390fd5b808210613de45783548314613e4e57600080fd5b613e86565b5b6040516001830192906001600160a01b038916906000906000805160206157a8833981519152908290a4808210613e54575b508255611167565b6000613e98612808565b90506000613ea583613253565b9050846001600160a01b031681600001516001600160a01b031614613edc5760405162a1148160e81b815260040160405180910390fd5b6000856001600160a01b0316613ef0612f22565b6001600160a01b03161480613f0c5750613f0c8661091f612f22565b80613f375750613f1a612f22565b6001600160a01b0316613f2c85610a75565b6001600160a01b0316145b905080613f5757604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038516613f7e57604051633a954ecd60e21b815260040160405180910390fd5b613f8b86868660016140ea565b613f9760008588613c2d565b6001600160a01b038681166000908152600585016020908152604080832080546001600160401b03198082166001600160401b03928316600019018316179092558a86168086528386208054938416938316600190810184169490941790558a865260048a0190945282852080546001600160e01b031916909417600160a01b4290921691909102178355880180845292208054919390911661406d578554821461406d57805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038b16171781555b50505083856001600160a01b0316876001600160a01b03166000805160206157a883398151915260405160405180910390a461215d565b7f92537d05302af3ef54893b12b582cebc030ae5040232486c845548650ed2a83190565b60006140d3336114e1565b156140e5575060131936013560601c90565b503390565b6141036000805160206157888339815191526000612f2c565b15801561411857506001600160a01b03841615155b801561412c57506001600160a01b03831615155b156109b35761414960008051602061578883398151915285612f2c565b15801561416b575061416960008051602061578883398151915284612f2c565b155b156109b35760405162461bcd60e51b815260206004820152600e60248201526d215472616e736665722d526f6c6560901b6044820152606401610992565b6001600160a01b03163b151590565b6000836001600160a01b031663150b7a026141d1612f22565b8786866040518563ffffffff1660e01b81526004016141f3949392919061571b565b6020604051808303816000875af192505050801561422e575060408051601f3d908101601f1916820190925261422b91810190615758565b60015b614289573d80801561425c576040519150601f19603f3d011682016040523d82523d6000602084013e614261565b606091505b508051614281576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b60006112b37f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66112c5612f22565b6000806142e1848661510f565b905080915060006142f0612e84565b8054600181810183556000838152602080822090930186905585815290830182526040902086519293506143289290918701906146c9565b5050935093915050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461437f576040519150601f19603f3d011682016040523d82523d6000602084013e614384565b606091505b5050905080611d305760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610992565b816001600160a01b0316836001600160a01b031614156143f3576109b3565b6001600160a01b038316301415614418576122d06001600160a01b038516838361442d565b6109b36001600160a01b038516848484614483565b611d308363a9059cbb60e01b848460405160240161444c929190614981565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526144bb565b6040516001600160a01b03808516602483015283166044820152606481018290526109b39085906323b872dd60e01b9060840161444c565b6000614510826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661458d9092919063ffffffff16565b805190915015611d30578080602001905181019061452e919061506b565b611d305760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610992565b6060613a6b8484600085856145a1856141a9565b6145ed5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610992565b600080866001600160a01b031685876040516146099190615775565b60006040518083038185875af1925050503d8060008114614646576040519150601f19603f3d011682016040523d82523d6000602084013e61464b565b606091505b509150915061267e82828660608315614665575081612885565b8251156146755782518084602001fd5b8160405162461bcd60e51b81526004016109929190614805565b50805461469b9061501c565b6000825580601f106146ab575050565b601f016020900490600052602060002090810190610b9f919061474d565b8280546146d59061501c565b90600052602060002090601f0160209004810192826146f7576000855561473d565b82601f1061471057805160ff191683800117855561473d565b8280016001018555821561473d579182015b8281111561473d578251825591602001919060010190614722565b5061474992915061474d565b5090565b5b80821115614749576000815560010161474e565b6001600160e01b031981168114610b9f57600080fd5b60006020828403121561478a57600080fd5b813561288581614762565b600060a082840312156147a757600080fd5b50919050565b60005b838110156147c85781810151838201526020016147b0565b838111156109b35750506000910152565b600081518084526147f18160208601602086016147ad565b601f01601f19169290920160200192915050565b60208152600061288560208301846147d9565b60006020828403121561482a57600080fd5b5035919050565b6001600160a01b0381168114610b9f57600080fd5b6000806040838503121561485957600080fd5b823561486481614831565b946020939093013593505050565b60006020828403121561488457600080fd5b813561288581614831565b600080604083850312156148a257600080fd5b50508035926020909101359150565b6000608082840312156147a757600080fd5b60008060008060008060c087890312156148dc57600080fd5b8635955060208701356148ee81614831565b945060408701359350606087013561490581614831565b92506080870135915060a08701356001600160401b0381111561492757600080fd5b61493389828a016148b1565b9150509295509295509295565b60008060006060848603121561495557600080fd5b833561496081614831565b9250602084013561497081614831565b929592945050506040919091013590565b6001600160a01b03929092168252602082015260400190565b8015158114610b9f57600080fd5b6000602082840312156149ba57600080fd5b81356128858161499a565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e0830151610100808185015250613a6b6101208401826147d9565b600080600060408486031215614a4757600080fd5b83356001600160401b0380821115614a5e57600080fd5b818601915086601f830112614a7257600080fd5b813581811115614a8157600080fd5b8760208260051b8501011115614a9657600080fd5b60209283019550935050840135614aac8161499a565b809150509250925092565b634e487b7160e01b600052602160045260246000fd5b81516001600160a01b039081168252602083015160a08301919060028110614b0557634e487b7160e01b600052602160045260246000fd5b8060208501525060408401516040840152606084015160608401528060808501511660808401525092915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614b7157614b71614b33565b604052919050565b60006001600160401b03821115614b9257614b92614b33565b50601f01601f191660200190565b6000614bb3614bae84614b79565b614b49565b9050828152838383011115614bc757600080fd5b828260208301376000602084830101529392505050565b600082601f830112614bef57600080fd5b61288583833560208501614ba0565b60008060008060008060c08789031215614c1757600080fd5b8635614c2281614831565b9550602087013594506040870135614c3981614831565b93506060870135925060808701356001600160401b0380821115614c5c57600080fd5b614c688a838b016148b1565b935060a0890135915080821115614c7e57600080fd5b5061493389828a01614bde565b600060208284031215614c9d57600080fd5b81356001600160401b03811115614cb357600080fd5b8201601f81018413614cc457600080fd5b613a6b84823560208401614ba0565b600080600060608486031215614ce857600080fd5b83359250602084013561497081614831565b60008083601f840112614d0c57600080fd5b5081356001600160401b03811115614d2357600080fd5b602083019150836020828501011115614d3b57600080fd5b9250929050565b600080600060408486031215614d5757600080fd5b8335925060208401356001600160401b03811115614d7457600080fd5b614d8086828701614cfa565b9497909650939450505050565b60008060408385031215614da057600080fd5b8235614dab81614831565b91506020830135614dbb8161499a565b809150509250929050565b60008060408385031215614dd957600080fd5b823591506020830135614dbb81614831565b60008060008060808587031215614e0157600080fd5b8435614e0c81614831565b93506020850135614e1c81614831565b92506040850135915060608501356001600160401b03811115614e3e57600080fd5b614e4a87828801614bde565b91505092959194509250565b600080600060608486031215614e6b57600080fd5b8335614e7681614831565b95602085013595506040909401359392505050565b600080600080600060608688031215614ea357600080fd5b8535945060208601356001600160401b0380821115614ec157600080fd5b614ecd89838a01614cfa565b90965094506040880135915080821115614ee657600080fd5b50614ef388828901614cfa565b969995985093965092949392505050565b600080600060408486031215614f1957600080fd5b83356001600160401b0380821115614f3057600080fd5b614f3c87838801614bde565b94506020860135915080821115614f5257600080fd5b50614d8086828701614cfa565b60008060408385031215614f7257600080fd5b8235614f7d81614831565b91506020830135614dbb81614831565b80546001600160a01b0319166001600160a01b0392909216919091179055565b8135614fb881614831565b614fc28183614f8d565b50602082013560028110614fd557600080fd5b815460ff60a01b191660a09190911b60ff60a01b161781556040820135600182015560608201356002820155608082013561500f81614831565b611d308160038401614f8d565b600181811c9082168061503057607f821691505b602082108114156147a757634e487b7160e01b600052602260045260246000fd5b6001600160a01b0392831681529116602082015260400190565b60006020828403121561507d57600080fd5b81516128858161499a565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6000808335601e198436030181126150c757600080fd5b8301803591506001600160401b038211156150e157600080fd5b6020019150600581901b3603821315614d3b57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115615122576151226150f9565b500190565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615615157576151576150f9565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826151815761518161515c565b500490565b6000823560fe1983360301811261519c57600080fd5b9190910192915050565b601f821115611d3057600081815260208120601f850160051c810160208610156151cd5750805b601f850160051c820191505b8181101561215d578281556001016151d9565b6001600160401b0383111561520357615203614b33565b61521783615211835461501c565b836151a6565b6000601f84116001811461524b57600085156152335750838201355b600019600387901b1c1916600186901b178355611167565b600083815260209020601f19861690835b8281101561527c578685013582556020948501946001909201910161525c565b50868210156152995760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a0820135600582015560c08201356152ef81614831565b6152fc8160068401614f8d565b5060e0820135601e1983360301811261531457600080fd5b820180356001600160401b0381111561532c57600080fd5b60208201915080360382131561534157600080fd5b6109b38183600786016151ec565b6000600019821415615363576153636150f9565b5060010190565b6000808335601e1984360301811261538157600080fd5b83016020810192503590506001600160401b038111156153a057600080fd5b803603831315614d3b57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a8110156154aa57888403605f190185528235368d900360fe1901811261541d578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c08084013561546481614831565b6001600160a01b03169088015260e061547f8482018561536a565b945083828a0152615493848a0186836153af565b9983019998505050949094019350506001016153f8565b50505086151560208701529350613a6b92505050565b600080604083850312156154d357600080fd5b82516001600160401b038111156154e957600080fd5b8301601f810185136154fa57600080fd5b8051615508614bae82614b79565b81815286602083850101111561551d57600080fd5b61552e8260208301602086016147ad565b60209590950151949694955050505050565b60008551615552818460208a016147ad565b820184868237909301918252506020019392505050565b60006020828403121561557b57600080fd5b815161288581614831565b60006020828403121561559857600080fd5b5051919050565b6000828210156155b1576155b16150f9565b500390565b6000816155c5576155c56150f9565b506000190190565b600082516155df8184602087016147ad565b600360fc1b920191825250600101919050565b600083516156048184602088016147ad565b8351908301906156188183602088016147ad565b01949350505050565b6000806040838503121561563457600080fd5b82356001600160401b0381111561564a57600080fd5b61565685828601614bde565b95602094909401359450505050565b82848237909101908152602001919050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b6040815260006156b360408301856147d9565b82810360208401526156c581856147d9565b95945050505050565b6000826156dd576156dd61515c565b500690565b8581526060602082015260006156fc6060830186886153af565b828103604084015261570f8185876153af565b98975050505050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061574e908301846147d9565b9695505050505050565b60006020828403121561576a57600080fd5b815161288581614762565b6000825161519c8184602087016147ad56fe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6cddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212200408b07f702b1063e563558f23f1a99fd97f7fb98b1180e92538fdda46bf328064736f6c634300080c0033",
    "sourceMap": "2215:14593:381:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4474:269;;;;;;;;;;-1:-1:-1;4474:269:381;;;;;:::i;:::-;;:::i;:::-;;;661:14:640;;654:22;636:41;;624:2;609:18;4474:269:381;;;;;;;;1122:291:169;;;;;;;;;;-1:-1:-1;1122:291:169;;;;;:::i;:::-;;:::i;:::-;;7539:179:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;988:197:184:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1811:32:640;;;1793:51;;1781:2;1766:18;988:197:184;1647:203:640;9198:290:24;;;;;;;;;;-1:-1:-1;9198:290:24;;;;;:::i;:::-;;:::i;15125:155:381:-;;;;;;;;;;-1:-1:-1;15125:155:381;;;;;:::i;:::-;;:::i;1644:173:180:-;;;;;;;;;;-1:-1:-1;1644:173:180;;;;;:::i;:::-;;:::i;6497:868:381:-;;;;;;:::i;:::-;;:::i;3027:393:24:-;;;;;;;;;;;;;:::i;:::-;;;3147:25:640;;;3135:2;3120:18;3027:393:24;3001:177:640;1989:269:183;;;;;;;;;;-1:-1:-1;1989:269:183;;;;;:::i;:::-;;:::i;5374:2299:173:-;;;;;;;;;;-1:-1:-1;5374:2299:173;;;;;:::i;:::-;;:::i;15327:211:381:-;;;;;;;;;;-1:-1:-1;15327:211:381;;;;;:::i;:::-;;:::i;1789:315:168:-;;;;;;;;;;-1:-1:-1;1789:315:168;;;;;:::i;:::-;;:::i;1777:347:186:-;;;;;;;;;;-1:-1:-1;1777:347:186;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;13778:208:381:-;;;;;;;;;;;;;:::i;924::178:-;;;;;;;;;;-1:-1:-1;924:208:178;;;;;:::i;:::-;;:::i;13369:108:381:-;;;;;;;;;;;;;:::i;7640:353::-;;;;;;;;;;-1:-1:-1;7640:353:381;;;;;:::i;:::-;;:::i;15589:219::-;;;;;;;;;;-1:-1:-1;15589:219:381;;;;;:::i;:::-;;:::i;14042:184::-;;;;;;;;;;-1:-1:-1;14042:184:381;;;;;:::i;:::-;;:::i;4865:228:172:-;;;;;;;;;;-1:-1:-1;4865:228:172;;;;;:::i;:::-;;:::i;2364:473:186:-;;;;;;;;;;-1:-1:-1;2364:473:186;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5509:32:640;;;5491:51;;5590:6;5578:19;;;5573:2;5558:18;;5551:47;5464:18;2364:473:186;5319:285:640;686:232:178;;;;;;;;;;;;;:::i;1280:235:175:-;;;;;;;;;;-1:-1:-1;1280:235:175;;;;;:::i;:::-;;:::i;3621:256:186:-;;;;;;;;;;-1:-1:-1;3621:256:186;;;;;:::i;:::-;;:::i;7354:123:24:-;;;;;;;;;;-1:-1:-1;7354:123:24;;;;;:::i;:::-;;:::i;1381:207:168:-;;;;;;;;;;;;;:::i;1594:228:184:-;;;;;;;;;;-1:-1:-1;1594:228:184;;;;;:::i;:::-;;:::i;8326:249:173:-;;;;;;;;;;-1:-1:-1;8326:249:173;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4283:284:24:-;;;;;;;;;;-1:-1:-1;4283:284:24;;;;;:::i;:::-;;:::i;2405:2872:173:-;;;;;;;;;;-1:-1:-1;2405:2872:173;;;;;:::i;:::-;;:::i;908:208:169:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1078:1264:173:-;;;;;;:::i;:::-;;:::i;1301:167:180:-;;;;;;;;;;;;;:::i;1439:188:170:-;;;;;;;;;;-1:-1:-1;1439:188:170;;;;;:::i;:::-;;:::i;7782:183:24:-;;;;;;;;;;;;;:::i;4902:288:186:-;;;;;;;;;;-1:-1:-1;4902:288:186;;;;;:::i;:::-;;:::i;2187:658:172:-;;;;;;;;;;-1:-1:-1;2187:658:172;;;;;:::i;:::-;;:::i;1098:222::-;;;;;;;;;;-1:-1:-1;1098:222:172;;;;;:::i;:::-;;:::i;14910:174:381:-;;;;;;;;;;-1:-1:-1;14910:174:381;;;;;:::i;:::-;;:::i;13062:225::-;;;;;;;;;;;;;:::i;8657:327:173:-;;;;;;;;;;-1:-1:-1;8657:327:173;;;;;:::i;:::-;;:::i;2947:230:186:-;;;;;;;;;;;;;:::i;15859:252:381:-;;;;;;;;;;-1:-1:-1;15859:252:381;;;;;:::i;:::-;;:::i;1419:970:169:-;;;;;;;;;;-1:-1:-1;1419:970:169;;;;;:::i;:::-;;:::i;7761:500:173:-;;;;;;;;;;;;;:::i;4041:402:381:-;;;;;;;;;;-1:-1:-1;4041:402:381;;;;;:::i;:::-;;:::i;5799:415::-;;;;;;;;;;-1:-1:-1;5799:415:381;;;;;:::i;:::-;;:::i;5117:575::-;;;;;;;;;;-1:-1:-1;5117:575:381;;;;;:::i;:::-;;:::i;1275:245:183:-;;;;;;;;;;;;;:::i;631:219:173:-;;;;;;;;;;;;;:::i;:::-;;;;14937:25:640;;;14993:2;14978:18;;14971:34;;;;14910:18;631:219:173;14763:248:640;3337:1283:172;;;;;;;;;;-1:-1:-1;3337:1283:172;;;;;:::i;:::-;;:::i;2064:219:170:-;;;;;;;;;;;;;:::i;9985:243:24:-;;;;;;;;;;-1:-1:-1;9985:243:24;;;;;:::i;:::-;;:::i;4474:269:381:-;4628:4;4655:36;4679:11;4655:23;:36::i;:::-;:81;;;-1:-1:-1;;;;;;;;;;4695:41:381;;;4655:81;4648:88;4474:269;-1:-1:-1;;4474:269:381:o;1122:291:169:-;1228:20;:18;:20::i;:::-;1220:48;;;;-1:-1:-1;;;1220:48:169;;16244:2:640;1220:48:169;;;16226:21:640;16283:2;16263:18;;;16256:30;-1:-1:-1;;;16302:18:640;;;16295:45;16357:18;;1220:48:169;;;;;;;;;1279:36;1318:39;:37;:39::i;:::-;1279:78;-1:-1:-1;1390:16:169;1279:78;1367:39;1390:16;1279:78;1367:39;:::i;:::-;-1:-1:-1;;;;1122:291:169:o;7539:179:24:-;7593:13;7618:32;7653:31;:29;:31::i;:::-;7618:66;;7701:4;:10;;7694:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7539:179;:::o;988:197:184:-;1050:7;1069:36;1108:39;:37;:39::i;:::-;1164:14;-1:-1:-1;;;;;1164:14:184;;988:197;-1:-1:-1;;988:197:184:o;9198:290:24:-;9274:7;9293:32;9328:31;:29;:31::i;:::-;9293:66;;9375:16;9383:7;9375;:16::i;:::-;9370:64;;9400:34;;-1:-1:-1;;;9400:34:24;;;;;;;;;;;9370:64;9452:29;;;;:20;;:29;;-1:-1:-1;9452:29:24;;;;-1:-1:-1;;;;;9452:29:24;;9198:290::o;15125:155:381:-;15221:8;2373:45:179;2421:57;:55;:57::i;:::-;2598:24;;2373:105;;-1:-1:-1;2598:24:179;;2594:211;;;343:42;2642:45;:49;2638:157;;2711:69;;-1:-1:-1;;;2711:69:179;;343:42;;2711;;:69;;2762:4;;2769:10;;2711:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2638:157;15241:32:381::1;15255:8;15265:7;15241:13;:32::i;1644:173:180:-:0;1714:14;:12;:14::i;:::-;1709:70;;1744:24;;-1:-1:-1;;;1744:24:180;;;;;;;:::i;1709:70::-;1788:22;1800:9;1788:11;:22::i;:::-;1644:173;:::o;6497:868:381:-;6587:28;6605:9;6587:17;:28::i;:::-;6679:19;6701:16;:14;:16::i;:::-;6679:38;;6727:55;6745:11;6758:12;6772:9;6727:17;:55::i;:::-;6792:57;6812:11;6825:12;6839:9;6792:19;:57::i;:::-;6885:36;6924:39;:37;:39::i;:::-;7054:29;;;;7097:41;;;;6885:78;;-1:-1:-1;6973:175:381;;7015:1;;7031:9;;-1:-1:-1;;;;;7054:29:381;;;;6973:20;:175::i;:::-;7183:33;7193:11;7206:9;7183;:33::i;:::-;7277:42;;7254:104;;3147:25:640;;;7334:12:381;;-1:-1:-1;;;;;7254:104:381;;;;7277:42;;;7254:104;;3135:2:640;3120:18;7254:104:381;;;;;;;6577:788;;6497:868;;:::o;3027:393:24:-;3080:7;3099:32;3134:31;:29;:31::i;:::-;3368:17;;;;3347:18;;:38;;3027:393;-1:-1:-1;;3027:393:24:o;1989:269:183:-;2106:24;:22;:24::i;:::-;2101:80;;2146:24;;-1:-1:-1;;;2146:24:183;;;;;;;:::i;2101:80::-;2190:61;2212:21;2235:15;2190:21;:61::i;:::-;1989:269;;:::o;5374:2299:173:-;5613:15;5640:29;5672:25;:23;:25::i;:::-;5707:39;5749:44;;;:30;;;;:44;;;;;;;;5707:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5707:86:173;;;;;;;;;;5640:57;;-1:-1:-1;5707:39:173;;:86;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5707:86:173;;;;-1:-1:-1;;;5824:40:173;;;;5895:31;;;;5960:26;;;;6001:28;;;;5707:86;;-1:-1:-1;5824:40:173;;5895:31;;5960:26;6001:42;5997:515;;6076:425;6112:21;:15;;:21;:::i;:::-;6076:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6151:28:173;;;;;;-1:-1:-1;6270:8:173;;6304:38;;;;;6368:29;;;;;6423:24;;;;;;;;:::i;:::-;6228:241;;-1:-1:-1;;;;;;19477:2:640;19513:15;;;19509:24;;6228:241:173;;;19497:37:640;19550:12;;;19543:28;;;;19587:12;;;19580:28;;;;19642:15;;;19638:24;19624:12;;;19617:46;19679:13;;6228:241:173;;;;;;;;;;;;6197:290;;;;;;6076:18;:425::i;:::-;-1:-1:-1;6059:442:173;-1:-1:-1;5997:515:173;6526:10;6522:534;;;6565:38;;;;:129;;6684:10;6565:129;;;6627:15;:38;;;6565:129;6552:142;;-1:-1:-1;;6721:15:173;:29;;;:50;;:127;;6838:10;6721:127;;;6790:15;:29;;;6721:127;6708:140;;-1:-1:-1;;6878:15:173;:29;;;:50;;:92;;;;-1:-1:-1;6968:1:173;6932:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6932:38:173;;;6878:92;:167;;7032:13;6878:167;;;6989:24;;;;;;;;:::i;:::-;6862:183;;6522:534;7066:29;7098:4;:19;;:41;;:55;7140:12;7098:55;;;;;;;;;;;:65;7154:8;-1:-1:-1;;;;;7098:65:173;-1:-1:-1;;;;;7098:65:173;;;;;;;;;;;;;7066:97;;7191:13;-1:-1:-1;;;;;7178:26:173;:9;-1:-1:-1;;;;;7178:26:173;;;:58;;;;7226:10;7208:14;:28;;7178:58;7174:115;;;7252:26;;-1:-1:-1;;;7252:26:173;;19905:2:640;7252:26:173;;;19887:21:640;19944:2;19924:18;;;19917:30;-1:-1:-1;;;19963:18:640;;;19956:46;20019:18;;7252:26:173;19703:340:640;7174:115:173;7303:14;;;:66;;-1:-1:-1;7358:10:173;7322:33;7334:21;7322:9;:33;:::i;:::-;:46;7303:66;7299:111;;;7385:14;;-1:-1:-1;;;7385:14:173;;;;;;20515:2:640;20497:21;;;20554:1;20534:18;;;20527:29;-1:-1:-1;;;20587:2:640;20572:18;;20565:34;20631:2;20616:18;;20313:327;7299:111:173;7469:17;:36;;;7457:9;7423:17;:31;;;:43;;;;:::i;:::-;:82;7419:133;;;7521:20;;-1:-1:-1;;;7521:20:173;;20847:2:640;7521:20:173;;;20829:21:640;20886:2;20866:18;;;20859:30;-1:-1:-1;;;20905:18:640;;;20898:40;20955:18;;7521:20:173;20645:334:640;7419:133:173;7566:32;;7601:15;-1:-1:-1;7562:105:173;;;7632:24;;-1:-1:-1;;;7632:24:173;;21186:2:640;7632:24:173;;;21168:21:640;21225:2;21205:18;;;21198:30;-1:-1:-1;;;21244:18:640;;;21237:44;21298:18;;7632:24:173;20984:338:640;7562:105:173;5630:2043;;;;;;5374:2299;;;;;;;;:::o;15327:211:381:-;15478:4;1514:45:179;1562:57;:55;:57::i;:::-;1739:24;;1514:105;;-1:-1:-1;1739:24:179;;1735:542;;;343:42;1783:45;:49;1779:488;;-1:-1:-1;;;;;2076:18:179;;2084:10;2076:18;2072:94;;;15494:37:381::1;15513:4;15519:2;15523:7;15494:18;:37::i;:::-;2141:7:179::0;;;2072:94;2183:69;;-1:-1:-1;;;2183:69:179;;343:42;;2183;;:69;;2234:4;;2241:10;;2183:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1779:488;15494:37:381::1;15513:4;15519:2;15523:7;15494:18;:37::i;:::-;1504:790:179::0;15327:211:381;;;;:::o;1789:315:168:-;1853:7;1872:42;1917:51;:49;:51::i;:::-;1872:96;;1993:17;:15;:17::i;:::-;1983:6;:27;1979:81;;2026:23;;-1:-1:-1;;;2026:23:168;;21529:2:640;2026:23:168;;;21511:21:640;21568:2;21548:18;;;21541:30;-1:-1:-1;;;21587:18:640;;;21580:43;21640:18;;2026:23:168;21327:337:640;1979:81:168;2076:4;:13;;2090:6;2076:21;;;;;;;;:::i;:::-;;;;;;;;;2069:28;;;1789:315;;;:::o;1777:347:186:-;1914:16;1932:21;1970:17;1989:11;2004:31;2027:7;2004:22;:31::i;:::-;1969:66;;-1:-1:-1;1969:66:186;;-1:-1:-1;1969:66:186;;;-1:-1:-1;2111:6:186;2092:15;1969:66;2092:9;:15;:::i;:::-;2091:26;;;;:::i;:::-;2075:42;;1959:165;;1777:347;;;;;:::o;13778:208:381:-;13825:7;13844:43;13890:53;:51;:53::i;:::-;13960:19;;13778:208;-1:-1:-1;;13778:208:381:o;924::178:-;1002:28;:26;:28::i;:::-;994:84;;;;-1:-1:-1;;;994:84:178;;22433:2:640;994:84:178;;;22415:21:640;22472:2;22452:18;;;22445:30;22511:34;22491:18;;;22484:62;-1:-1:-1;;;22562:18:640;;;22555:41;22613:19;;994:84:178;22231:407:640;994:84:178;1088:37;1112:12;1088:23;:37::i;13369:108:381:-;13421:7;13447:23;:21;:23::i;:::-;13440:30;;13369:108;:::o;7640:353::-;7719:42;2857:4;7748:12;:10;:12::i;:::-;7719:8;:42::i;:::-;7711:65;;;;-1:-1:-1;;;7711:65:381;;22845:2:640;7711:65:381;;;22827:21:640;22884:2;22864:18;;;22857:30;-1:-1:-1;;;22903:18:640;;;22896:40;22953:18;;7711:65:381;22643:334:640;7711:65:381;7787:43;7833:53;:51;:53::i;:::-;7896:37;;;7948:38;;3147:25:640;;;7896:37:381;;-1:-1:-1;7948:38:381;;3135:2:640;3120:18;7948:38:381;;;;;;;;7701:292;7640:353;:::o;15589:219::-;15744:4;1514:45:179;1562:57;:55;:57::i;:::-;1739:24;;1514:105;;-1:-1:-1;1739:24:179;;1735:542;;;343:42;1783:45;:49;1779:488;;-1:-1:-1;;;;;2076:18:179;;2084:10;2076:18;2072:94;;;15760:41:381::1;15783:4;15789:2;15793:7;15760:22;:41::i;2072:94:179:-:0;2183:69;;-1:-1:-1;;;2183:69:179;;343:42;;2183;;:69;;2234:4;;2241:10;;2183:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1779:488;15760:41:381::1;15783:4;15789:2;15793:7;15760:22;:41::i;14042:184::-:0;14199:20;14205:7;14214:4;14199:5;:20::i;4865:228:172:-;4930:4;4946:38;4987:43;:41;:43::i;:::-;5085:1;5047:28;;;;;;;;;;:35;;4946:84;;-1:-1:-1;5085:1:172;;5047:35;;;:::i;:::-;;;:39;5040:46;;;4865:228;;;:::o;2364:473:186:-;2444:7;2453:6;2471:32;2506:31;:29;:31::i;:::-;2548:34;2585;;;:24;;;;:34;;;;;;;;;2548:71;;;;;;;;;;-1:-1:-1;;;;;2548:71:186;;;;;;;;;;;2471:66;;-1:-1:-1;2548:71:186;2649:39;:181;;2775:25;;2809:19;;;;2649:181;;;2708:21;;-1:-1:-1;;;;;2708:21:186;;;-1:-1:-1;;;2738:15:186;;;;2649:181;2630:200;;;;;;2364:473;;;:::o;686:232:178:-;749:4;765:45;813:57;:55;:57::i;:::-;887:24;;;;686:232;-1:-1:-1;;686:232:178:o;1280:235:175:-;-1:-1:-1;;;;;1476:32:175;1356:4;1476:32;;;288:36;1476:32;;;;;;;;;1280:235::o;3621:256:186:-;3733:20;:18;:20::i;:::-;3728:76;;3769:24;;-1:-1:-1;;;3769:24:186;;;;;;;:::i;3728:76::-;3814:56;3839:17;3858:11;3814:24;:56::i;7354:123:24:-;7418:7;7444:21;7457:7;7444:12;:21::i;:::-;:26;;7354:123;-1:-1:-1;;7354:123:24:o;1381:207:168:-;1429:7;1448:42;1493:51;:49;:51::i;1594:228:184:-;1684:29;:27;:29::i;:::-;1679:85;;1729:24;;-1:-1:-1;;;1729:24:184;;;;;;;:::i;1679:85::-;1773:42;1800:14;1773:26;:42::i;8326:249:173:-;8402:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8402:31:173;8445:29;8477:25;:23;:25::i;:::-;8524:19;:44;;;:30;;;;:44;;;;;;;;;8512:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8512:56:173;;;;;;;;;;8445:57;;-1:-1:-1;8512:56:173;;8524:44;;8512:56;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8435:140;8326:249;;;:::o;4283:284:24:-;4347:7;4366:32;4401:31;:29;:31::i;:::-;4366:66;-1:-1:-1;;;;;;4446:19:24;;4442:60;;4474:28;;-1:-1:-1;;;4474:28:24;;;;;;;;;;;4442:60;-1:-1:-1;;;;;4527:24:24;;;;;;;:17;;;;:24;;-1:-1:-1;4527:24:24;;;:32;-1:-1:-1;;;;;4527:32:24;;4283:284::o;2405:2872:173:-;2570:24;:22;:24::i;:::-;2565:80;;2610:24;;-1:-1:-1;;;2610:24:173;;;;;;;:::i;2565:80::-;2655:29;2687:25;:23;:25::i;:::-;2751:34;;2824:25;;;;2655:57;;-1:-1:-1;2751:34:173;;3266:108;;;;3324:39;3345:18;3324;:39;:::i;:::-;3308:55;;3266:108;3384:25;;;:46;;;3440:50;;;3384:19;;3546:658;3566:22;;;3546:658;;;3617:6;;;:69;;;3657:11;;3669:1;3657:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;3627:59;;3617:69;3609:84;;;;-1:-1:-1;;;3609:84:173;;23522:2:640;3609:84:173;;;23504:21:640;23561:1;23541:18;;;23534:29;-1:-1:-1;;;23579:18:640;;;23572:32;23621:18;;3609:84:173;23320:325:640;3609:84:173;3708:28;3739:30;;;3708:28;3770:17;3786:1;3770:13;:17;:::i;:::-;3739:49;;;;;;;;;;;:63;;;3708:94;;3843:11;;3855:1;3843:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;3820:20;:56;3816:123;;;3896:28;;-1:-1:-1;;;3896:28:173;;23852:2:640;3896:28:173;;;23834:21:640;23891:2;23871:18;;;23864:30;-1:-1:-1;;;23910:18:640;;;23903:48;23968:18;;3896:28:173;23650:342:640;3816:123:173;4005:11;;4017:1;4005:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3953:30;;;:19;3984:17;4000:1;3984:13;:17;:::i;:::-;3953:49;;;;;;;;;;;:66;;;;;;:::i;:::-;-1:-1:-1;4099:20:173;;-1:-1:-1;4033:30:173;;;:19;4064:17;4080:1;4064:13;:17;:::i;:::-;4033:49;;;;;;;;;;;-1:-1:-1;4033:49:173;:63;;:86;4164:11;;4176:1;4164:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;-1:-1:-1;3590:3:173;;-1:-1:-1;3590:3:173;;;:::i;:::-;;;;3546:658;;;;4744:22;4740:456;;;4799:18;4782:134;4823:13;4819:1;:17;4782:134;;;4868:19;:33;;;:30;;;;:33;;;;;4861:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4861:40:173;;;4868:33;4861:40;;;;4868:19;4861:40;:::i;:::-;;;4838:3;;;;;:::i;:::-;;;;4782:134;;;;4740:456;;;4950:39;;;4946:240;;;5026:11;5009:163;5050:18;5046:1;:22;5009:163;;;5104:30;;;:19;5135:17;5151:1;5135:13;:17;:::i;:::-;5104:49;;;;;;;;;;;-1:-1:-1;5104:49:173;;;5097:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5097:56:173;;;5104:49;5097:56;;;;-1:-1:-1;5097:56:173;:::i;:::-;;;5070:3;;;;;:::i;:::-;;;;5009:163;;;;4946:240;5211:59;5234:11;;5247:22;5211:59;;;;;;;;:::i;:::-;;;;;;;;2555:2722;;;;;2405:2872;;;:::o;908:208:169:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1032:39:169;:37;:39::i;:::-;1082:27;;;;;;;;;;;-1:-1:-1;;;;;1082:27:169;;;;;;-1:-1:-1;1082:27:169;;;;;;;-1:-1:-1;;;1082:27:169;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1082:27:169;;;;;;;908:208;-1:-1:-1;;908:208:169:o;1078:1264:173:-;1331:85;1344:9;1355;1366;1377:14;1393:15;1410:5;1331:12;:85::i;:::-;1427:25;1455:27;:25;:27::i;:::-;1427:55;;1493:103;1505:17;1524:16;:14;:16::i;:::-;1542:9;1553;1564:14;1580:15;1493:11;:103::i;:::-;;1641:29;1673:25;:23;:25::i;:::-;1708:19;:49;;;:30;;;;:49;;;;;:63;:76;;1641:57;;-1:-1:-1;1775:9:173;;1708:63;;:19;:76;;1775:9;;1708:76;:::i;:::-;;;;-1:-1:-1;;1794:19:173;:60;;;:41;;;:60;;;;;1876:9;;1855:16;:14;:16::i;:::-;-1:-1:-1;;;;;1794:78:173;-1:-1:-1;;;;;1794:78:173;;;;;;;;;;;;;:91;;;;;;;:::i;:::-;;;;-1:-1:-1;1942:70:173;;-1:-1:-1;1971:1:173;1975:9;1986;1997:14;1942:20;:70::i;:::-;2071:20;2094:44;2117:9;2128;2094:22;:44::i;:::-;2071:67;;2205:9;-1:-1:-1;;;;;2154:86:173;2187:16;:14;:16::i;:::-;-1:-1:-1;;;;;2154:86:173;2168:17;2154:86;2216:12;2230:9;2154:86;;;;;;14937:25:640;;;14993:2;14978:18;;14971:34;14925:2;14910:18;;14763:248;2154:86:173;;;;;;;;1321:1021;;;1078:1264;;;;;;:::o;1301:167:180:-;1348:7;1367:32;1402:31;:29;:31::i;1439:188:170:-;1516:20;:18;:20::i;:::-;1511:76;;1552:24;;-1:-1:-1;;;1552:24:170;;;;;;;:::i;1511:76::-;1597:23;1615:4;1597:17;:23::i;7782:183:24:-;7838:13;7863:32;7898:31;:29;:31::i;:::-;7863:66;;7946:4;:12;;7939:19;;;;;:::i;4902:288:186:-;5049:20;:18;:20::i;:::-;5044:76;;5085:24;;-1:-1:-1;;;5085:24:186;;;;;;;:::i;5044:76::-;5130:53;5156:8;5166:10;5178:4;5130:25;:53::i;:::-;4902:288;;;:::o;2187:658:172:-;2269:25;2306:38;2347:43;:41;:43::i;:::-;2401:25;2429:28;;;;;;;;;;2401:56;;2306:84;;-1:-1:-1;2401:25:172;;:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:12;:19;2494:1;2471:24;2467:82;;;2511:27;;-1:-1:-1;;;2511:27:172;;30404:2:640;2511:27:172;;;30386:21:640;30443:2;30423:18;;;30416:30;-1:-1:-1;;;30462:18:640;;;30455:47;30519:18;;2511:27:172;30202:341:640;2467:82:172;2560:25;2587:22;2624:12;2613:42;;;;;;;;;;;;:::i;:::-;2559:96;;;;2687:34;2702:12;2716:4;;2687:14;:34::i;:::-;2666:56;;2806:14;2768:11;2781:4;;2787:13;2751:50;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2741:61;;;;;;:79;2733:105;;;;-1:-1:-1;;;2733:105:172;;31988:2:640;2733:105:172;;;31970:21:640;32027:2;32007:18;;;32000:30;-1:-1:-1;;;32046:18:640;;;32039:43;32099:18;;2733:105:172;31786:337:640;2733:105:172;2296:549;;;;2187:658;;;;;:::o;1098:222::-;1160:12;1184:38;1225:43;:41;:43::i;:::-;1285:18;:28;;;;;;;;;;1278:35;;1184:84;;-1:-1:-1;1285:28:172;1278:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1098:222;;;:::o;14910:174:381:-;15014:8;2373:45:179;2421:57;:55;:57::i;:::-;2598:24;;2373:105;;-1:-1:-1;2598:24:179;;2594:211;;;343:42;2642:45;:49;2638:157;;2711:69;;-1:-1:-1;;;2711:69:179;;343:42;;2711;;:69;;2762:4;;2769:10;;2711:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2638:157;15034:43:381::1;15058:8;15068;15034:23;:43::i;13062:225::-:0;13108:7;13127:32;13162:31;:29;:31::i;8657:327:173:-;8776:29;8821;8853:25;:23;:25::i;:::-;8912:19;:55;;;:41;;:55;;;;;;;;-1:-1:-1;;;;;8912:65:173;;;;;;;;-1:-1:-1;;8912:65:173;;;;8657:327::o;2947:230:186:-;3012:7;3021:6;3039:32;3074:31;:29;:31::i;:::-;3123:21;-1:-1:-1;;;;;3123:21:186;;;-1:-1:-1;;;3153:15:186;;;;;;-1:-1:-1;3123:21:186;-1:-1:-1;;2947:230:186:o;15859:252:381:-;16041:4;1514:45:179;1562:57;:55;:57::i;:::-;1739:24;;1514:105;;-1:-1:-1;1739:24:179;;1735:542;;;343:42;1783:45;:49;1779:488;;-1:-1:-1;;;;;2076:18:179;;2084:10;2076:18;2072:94;;;16057:47:381::1;16080:4;16086:2;16090:7;16099:4;16057:22;:47::i;:::-;2141:7:179::0;;;2072:94;2183:69;;-1:-1:-1;;;2183:69:179;;343:42;;2183;;:69;;2234:4;;2241:10;;2183:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1779:488;16057:47:381::1;16080:4;16086:2;16090:7;16099:4;16057:22;:47::i;:::-;1504:790:179::0;15859:252:381;;;;;:::o;1419:970:169:-;1564:39;1606:20;:18;:20::i;:::-;1644:38;;1564:62;;-1:-1:-1;;;;;;1644:52:169;1636:89;;;;-1:-1:-1;;;1636:89:169;;32330:2:640;1636:89:169;;;32312:21:640;32369:2;32349:18;;;32342:30;-1:-1:-1;;;32388:18:640;;;32381:54;32452:18;;1636:89:169;32128:348:640;1636:89:169;1770:29;1740:16;:26;;;:59;;;;;;;;:::i;:::-;;1736:647;;;1823:9;1836:1;1823:14;1815:41;;;;-1:-1:-1;;;1815:41:169;;32683:2:640;1815:41:169;;;32665:21:640;32722:2;32702:18;;;32695:30;-1:-1:-1;;;32741:18:640;;;32734:44;32795:18;;1815:41:169;32481:338:640;1815:41:169;1886:38;;1878:65;;-1:-1:-1;;;1878:65:169;;;;;3147:25:640;;;-1:-1:-1;;;;;1878:80:169;;;;:55;;;;3120:18:640;;1878:65:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1878:80:169;;1870:99;;;;-1:-1:-1;;;1870:99:169;;33282:2:640;1870:99:169;;;33264:21:640;33321:1;33301:18;;;33294:29;-1:-1:-1;;;33339:18:640;;;33332:36;33385:18;;1870:99:169;33080:329:640;1870:99:169;1736:647;;;2020:30;1990:16;:26;;;:60;;;;;;;;:::i;:::-;;1986:397;;;2097:24;;;;2144:32;;;2136:61;;;;-1:-1:-1;;;2136:61:169;;33616:2:640;2136:61:169;;;33598:21:640;33655:2;33635:18;;;33628:30;-1:-1:-1;;;33674:18:640;;;33667:46;33730:18;;2136:61:169;33414:340:640;2136:61:169;2245:38;;2236:81;;-1:-1:-1;;;2236:81:169;;2321:9;;-1:-1:-1;;;;;2236:58:169;;;;:81;;2295:11;;2308:8;;2236:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:94;;2211:161;;;;-1:-1:-1;;;2211:161:169;;34150:2:640;2211:161:169;;;34132:21:640;34189:1;34169:18;;;34162:29;-1:-1:-1;;;34207:18:640;;;34200:38;34255:18;;2211:161:169;33948:331:640;7761:500:173;7819:7;7838:29;7870:25;:23;:25::i;:::-;7972;;;;7935:34;;7838:57;;-1:-1:-1;7923:9:173;;7935:62;;7972:25;7935:62;:::i;:::-;7923:74;;7905:318;8015:34;;8011:38;;7905:318;;;8114:30;;;:19;8145:5;8149:1;8145;:5;:::i;:::-;8114:37;;;;;;;;;;;:52;;;8095:15;:71;8091:122;;8193:5;8197:1;8193;:5;:::i;:::-;8186:12;;;;7761:500;:::o;8091:122::-;8063:3;;;;:::i;:::-;;;;7905:318;;;-1:-1:-1;8233:21:173;;-1:-1:-1;;;8233:21:173;;34757:2:640;8233:21:173;;;34739::640;34796:2;34776:18;;;34769:30;-1:-1:-1;;;34815:18:640;;;34808:41;34866:18;;8233:21:173;34555:335:640;4041:402:381;4107:13;4133:15;4154:21;4166:8;4154:11;:21::i;:::-;4132:43;;;4185:22;4210:21;4222:8;4210:11;:21::i;:::-;4185:46;;4246:25;4263:7;4246:16;:25::i;:::-;4242:195;;;4318:8;4301:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;4287:46;;;;4041:402;;;:::o;4242:195::-;4395:8;4405:19;:8;:17;:19::i;:::-;4378:47;;;;;;;;;:::i;5799:415::-;5870:25;5915:35;3173:24;5937:12;:10;:12::i;5915:35::-;5907:59;;;;-1:-1:-1;;;5907:59:381;;36016:2:640;5907:59:381;;;35998:21:640;36055:2;36035:18;;;36028:30;-1:-1:-1;;;36074:18:640;;;36067:41;36125:18;;5907:59:381;35814:335:640;5907:59:381;5976:15;5994:25;6012:6;5994:17;:25::i;:::-;5976:43;;6043:27;6056:7;6065:4;;6043:12;:27::i;:::-;6029:41;;6081:30;6099:7;6081:30;;;;;;;;;;;;:17;:30::i;:::-;6121:33;6133:7;6142:11;6121;:33::i;:::-;6187:6;6170:37;6195:11;6170:37;;;;;;:::i;:::-;;;;;;;;5897:317;5799:415;;;;;:::o;5117:575::-;5264:15;5291:14;5308:23;:21;:23::i;:::-;5291:40;-1:-1:-1;5345:16:381;;5341:278;;5378:25;;5431:35;;;;5442:5;5431:35;:::i;:::-;5377:89;;;;5484:12;:19;5507:1;5484:24;;:48;;;;-1:-1:-1;5512:20:381;;;5484:48;5480:129;;;5552:42;5570:16;5579:7;5570:6;:16;:::i;:::-;5588:5;;5552:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5552:17:381;;-1:-1:-1;;;5552:42:381:i;:::-;5363:256;;5341:278;5636:49;5651:7;5660:17;;5679:5;;5636:14;:49::i;:::-;5629:56;5117:575;-1:-1:-1;;;;;;;5117:575:381:o;1275:245:183:-;1335:7;1344:6;1362:36;1401:39;:37;:39::i;631:219:173:-;678:7;687;706:29;738:25;:23;:25::i;:::-;781:34;;817:25;;;;;781:34;;817:25;;-1:-1:-1;631:219:173;-1:-1:-1;;631:219:173:o;3337:1283:172:-;3530:11;;3696:4;3690:11;;3790:19;;;3811:2;3786:28;3773:42;;;3861:22;;;3690:11;3513:14;3957:657;3981:6;3977:1;:10;3957:657;;;4063:12;4105:3;;4110:1;4088:24;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4088:24:172;;;;;;;;;4078:35;;4088:24;4078:35;;;;4301:21;;;;;4295:28;4389:13;4559:23;;;;;4552:38;3989:7;;-1:-1:-1;4315:1:172;3989:7;:::i;:::-;;;3957:657;;;;3451:1169;3337:1283;;;;;:::o;2064:219:170:-;2125:13;2150:41;2194:49;:47;:49::i;:::-;2150:93;;2260:4;:16;;2253:23;;;;;:::i;9985:243:24:-;10082:4;10098:32;10133:31;:29;:31::i;:::-;-1:-1:-1;;;;;10181:30:24;;;;;;;:23;;;;;:30;;;;;;;;:40;;;;;;;;;;-1:-1:-1;;10181:40:24;;;;;9985:243::o;3933:291::-;4026:4;-1:-1:-1;;;;;;4061:40:24;;-1:-1:-1;;;4061:40:24;;:104;;-1:-1:-1;;;;;;;4117:48:24;;-1:-1:-1;;;4117:48:24;4061:104;:156;;;-1:-1:-1;;;;;;;;;;947:40:22;;;4181:36:24;839:155:22;12654:142:381;12724:4;12747:42;12724:4;12776:12;:10;:12::i;629:223:169:-;509:34;;629:223::o;1420:205:24:-;523:29;;1420:205::o;308:222:184:-;216:33;;308:222::o;11392:258:24:-;11449:4;11465:32;11500:31;:29;:31::i;:::-;11465:66;-1:-1:-1;11588:18:24;;11578:28;;11548:95;;;;-1:-1:-1;11611:25:24;;;;:16;;;:25;;;;;:32;-1:-1:-1;;;11611:32:24;;;;11610:33;11548:95;11541:102;11392:258;-1:-1:-1;;;11392:258:24:o;353:259:178:-;244:43;;353:259::o;8734:403:24:-;8814:13;8830:35;8857:7;8830:26;:35::i;:::-;8814:51;;8885:5;-1:-1:-1;;;;;8879:11:24;:2;-1:-1:-1;;;;;8879:11:24;;8875:48;;;8899:24;;-1:-1:-1;;;8899:24:24;;;;;;;;;;;8875:48;8954:5;-1:-1:-1;;;;;8938:21:24;:12;:10;:12::i;:::-;-1:-1:-1;;;;;8938:21:24;;8934:158;;8978:37;8995:5;9002:12;:10;:12::i;8978:37::-;8973:119;;9042:35;;-1:-1:-1;;;9042:35:24;;;;;;;;;;;8973:119;9102:28;9111:2;9115:7;9124:5;9102:8;:28::i;1932:259:180:-;1991:32;2026:31;:29;:31::i;:::-;2089:11;;-1:-1:-1;;;;;2110:23:180;;;-1:-1:-1;;;;;;2110:23:180;;;;;;2149:35;;1991:66;;-1:-1:-1;2089:11:180;;;;;2149:35;;2068:18;;2149:35;1981:210;;1932:259;:::o;8245:580:381:-;8315:47;8365:53;:51;:53::i;:::-;8315:103;;8428:39;8470:31;:29;:31::i;:::-;8538:23;;8595:25;;8428:73;;-1:-1:-1;8538:23:381;8668;:21;:23::i;:::-;8639:25;8655:9;8639:13;:25;:::i;:::-;:52;;8631:72;;;;-1:-1:-1;;;8631:72:381;;37089:2:640;8631:72:381;;;37071:21:640;37128:1;37108:18;;;37101:29;-1:-1:-1;;;37146:18:640;;;37139:37;37193:18;;8631:72:381;36887:330:640;8631:72:381;8721:20;;;:68;;-1:-1:-1;8774:15:381;8745:25;8761:9;8745:13;:25;:::i;:::-;:44;;8721:68;8713:105;;;;-1:-1:-1;;;8713:105:381;;37424:2:640;8713:105:381;;;37406:21:640;37463:2;37443:18;;;37436:30;-1:-1:-1;;;37482:18:640;;;37475:54;37546:18;;8713:105:381;37222:348:640;16335:111:381;16401:7;16427:12;:10;:12::i;2395:573:169:-;2539:39;2581:20;:18;:20::i;:::-;2539:62;-1:-1:-1;2646:29:169;2616:16;:26;;;:59;;;;;;;;:::i;:::-;;2612:350;;;2706:38;;2691:69;;-1:-1:-1;;;2691:69:169;;;;;3147:25:640;;;-1:-1:-1;;;;;2691:59:169;;;;;;3120:18:640;;2691:69:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2612:350;;;2811:30;2781:16;:26;;;:60;;;;;;;;:::i;:::-;;2777:185;;;2873:38;;2857:94;;-1:-1:-1;;;2857:94:169;;-1:-1:-1;;;;;37795:32:640;;;2857:94:169;;;37777:51:640;37844:18;;;37837:34;;;37887:18;;;37880:34;;;2857:60:169;;;;;;37750:18:640;;2857:94:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2529:439;2395:573;;;:::o;9204:1136:381:-;9404:19;9400:103;;9447:9;:14;9439:33;;;;-1:-1:-1;;;9439:33:381;;38127:2:640;9439:33:381;;;38109:21:640;38166:1;38146:18;;;38139:29;-1:-1:-1;;;38184:18:640;;;38177:36;38230:18;;9439:33:381;37925:329:640;9400:103:381;9514:28;9544:21;9569:20;:18;:20::i;:::-;9513:76;;-1:-1:-1;9513:76:381;-1:-1:-1;9600:21:381;-1:-1:-1;;;;;9624:35:381;;;:84;;9687:21;9624:84;;;9662:22;:20;:22::i;:::-;9600:108;-1:-1:-1;9719:18:381;9740:33;9759:14;9740:16;:33;:::i;:::-;9719:54;-1:-1:-1;9783:20:381;3480:6;9807:27;;;;9719:54;9807:27;:::i;:::-;9806:39;;;;:::i;:::-;9783:62;-1:-1:-1;9856:18:381;-1:-1:-1;;;;;9888:45:381;;408:42:286;9888:45:381;9884:176;;;-1:-1:-1;9965:9:381;:23;;9884:176;;;-1:-1:-1;10035:9:381;:14;9884:176;10077:13;10069:43;;;;-1:-1:-1;;;10069:43:381;;38461:2:640;10069:43:381;;;38443:21:640;38500:2;38480:18;;;38473:30;-1:-1:-1;;;38519:18:640;;;38512:47;38576:18;;10069:43:381;38259:341:640;10069:43:381;10123:97;10160:9;10171:12;:10;:12::i;:::-;10185:20;10207:12;10123:36;:97::i;:::-;10230:103;10267:9;10278:12;:10;:12::i;:::-;10292:13;10307:25;10320:12;10307:10;:25;:::i;:::-;10230:36;:103::i;:::-;9390:950;;;;;;9204:1136;;;;:::o;11729:102:24:-;11797:27;11807:2;11811:8;11797:27;;;;;;;;;;;;:9;:27::i;2341:473:183:-;2447:36;2486:39;:37;:39::i;:::-;2447:78;;2557:6;2539:15;:24;2535:80;;;2579:25;;-1:-1:-1;;;2579:25:183;;;;;;;:::i;2535:80::-;2625:45;;-1:-1:-1;;;;;;2680:49:183;-1:-1:-1;;;2625:45:183;;;;-1:-1:-1;;;;;;2680:49:183;;-1:-1:-1;;;;;2680:49:183;;;;;;;2745:62;;3147:25:640;;;2745:62:183;;3135:2:640;3120:18;2745:62:183;;;;;;;;2437:377;2341:473;;:::o;396:193:173:-;230:25;;396:193::o;898:906:288:-;1019:4;;1067;1019;;1109:567;1133:5;:12;1129:1;:16;1109:567;;;1166:10;1175:1;1166:10;;:::i;:::-;;;1190:20;1213:5;1219:1;1213:8;;;;;;;;:::i;:::-;;;;;;;1190:31;;1256:12;1240;:28;1236:430;;1391:44;;;;;;39106:19:640;;;39141:12;;;39134:28;;;39178:12;;1391:44:288;;;;;;;;;;;;1381:55;;;;;;1366:70;;1236:430;;;1578:44;;;;;;39106:19:640;;;39141:12;;;39134:28;;;39178:12;;1578:44:288;;;;;;;;;;;;1568:55;;;;;;1553:70;;1650:1;1641:10;;;;;:::i;:::-;;;1236:430;-1:-1:-1;1147:3:288;;;;:::i;:::-;;;;1109:567;;;-1:-1:-1;1769:20:288;;;;;-1:-1:-1;;;;898:906:288:o;10290:164:24:-;10419:28;10429:4;10435:2;10439:7;10419:9;:28::i;495:247:168:-;166:40;;495:247::o;327:253:382:-;170:43;;327:253::o;1138:281:178:-;1209:45;1257:57;:55;:57::i;:::-;1325:39;;-1:-1:-1;;1325:39:178;;;;;;;;;1379:33;;636:41:640;;;1325:39:178;;-1:-1:-1;1379:33:178;;624:2:640;609:18;1379:33:178;496:187:640;1003:194:177;1059:7;1078:33;1114;:31;:33::i;16452:176:381:-;16550:14;16583:38;:36;:38::i;16117:212::-;16186:4;16297:19;;;382:32:181;16297:19:381;;;;;;;;-1:-1:-1;;;;;16297:25:381;;;;;;;;;;;;;;;16117:212::o;10520:179:24:-;10653:39;10670:4;10676:2;10680:7;10653:39;;;;;;;;;;;;:16;:39::i;18314:2457::-;18393:32;18428:31;:29;:31::i;:::-;18393:66;;18470:35;18508:21;18521:7;18508:12;:21::i;:::-;18555:18;;18470:59;;-1:-1:-1;18584:284:24;;;;18617:22;18659:4;-1:-1:-1;;;;;18643:20:24;:12;:10;:12::i;:::-;-1:-1:-1;;;;;18643:20:24;;:76;;;;18683:36;18700:4;18706:12;:10;:12::i;18683:36::-;18643:132;;;;18763:12;:10;:12::i;:::-;-1:-1:-1;;;;;18739:36:24;:20;18751:7;18739:11;:20::i;:::-;-1:-1:-1;;;;;18739:36:24;;18643:132;18617:159;;18796:17;18791:66;;18822:35;;-1:-1:-1;;;18822:35:24;;;;;;;;;;;18791:66;18603:265;18584:284;18878:51;18900:4;18914:1;18918:7;18927:1;18878:21;:51::i;:::-;18991:35;19008:1;19012:7;19021:4;18991:8;:35::i;:::-;-1:-1:-1;;;;;19350:23:24;;;19316:31;19350:23;;;:17;;;:23;;;;;;;;19387:24;;-1:-1:-1;;;;;;;;;;19387:24:24;;;;;;;;;-1:-1:-1;;;;;;19387:24:24;;;;19425:29;;;;;19410:1;19425:29;;;;;;;;-1:-1:-1;;;;;;19425:29:24;;;;;;;;;;19584:25;;;:16;;;:25;;;;;;19623:20;;-1:-1:-1;;;;19690:15:24;19657:49;;;-1:-1:-1;;;19657:49:24;-1:-1:-1;;;;;;19657:49:24;;;;;;;;;;19720:22;-1:-1:-1;;;19720:22:24;;;20008:11;;;20067:29;;;;;20114:13;;19350:23;;20067:29;;20114:13;20110:382;;20321:18;;20306:33;;20302:176;;20363:20;;20431:28;;;;-1:-1:-1;;;;;20405:54:24;-1:-1:-1;;;20405:54:24;-1:-1:-1;;;;;;20405:54:24;;;-1:-1:-1;;;;;20363:20:24;;20405:54;;;;20302:176;-1:-1:-1;;20517:35:24;;20544:7;;-1:-1:-1;20540:1:24;;-1:-1:-1;;;;;;20517:35:24;;;-1:-1:-1;;;;;;;;;;;20517:35:24;20540:1;;20517:35;-1:-1:-1;;20735:17:24;;;;:19;;;;;;;-1:-1:-1;;18314:2457:24:o;424:230:172:-;222:35;;424:230::o;612:205:186:-;203:28;;612:205::o;3964:421::-;4083:6;4069:11;:20;4065:76;;;4105:25;;-1:-1:-1;;;4105:25:186;;;;;;;:::i;4065:76::-;4151:32;4186:31;:29;:31::i;:::-;4228:41;;-1:-1:-1;;;;;4228:41:186;;-1:-1:-1;;;;;;4279:37:186;;;;;-1:-1:-1;;;4279:37:186;;;;;;;4332:46;;3147:25:640;;;4228:41:186;;-1:-1:-1;4228:41:186;4332:46;;3135:2:640;3120:18;4332:46:186;3001:177:640;6031:1266:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;6161:31:24;:29;:31::i;:::-;6126:66;-1:-1:-1;6218:7:24;6316:18;;6309:25;;6305:928;;;6358:31;6392:22;;;:16;;;:22;;;;;;;;;6358:56;;;;;;;;;-1:-1:-1;;;;;6358:56:24;;;;-1:-1:-1;;;6358:56:24;;-1:-1:-1;;;;;6358:56:24;;;;;;;;-1:-1:-1;;;6358:56:24;;;;;;;;;;;;;;6436:779;;6489:14;;-1:-1:-1;;;;;6489:28:24;;6485:107;;6556:9;6031:1266;-1:-1:-1;;;;6031:1266:24:o;6485:107::-;-1:-1:-1;;;6952:6:24;7000:22;;;;:16;;;:22;;;;;;;;;6988:34;;;;;;;;;-1:-1:-1;;;;;6988:34:24;;;;;-1:-1:-1;;;6988:34:24;;-1:-1:-1;;;;;6988:34:24;;;;;;;;-1:-1:-1;;;6988:34:24;;;;;;;;;;;;;7056:28;7052:115;;7127:9;6031:1266;-1:-1:-1;;;;6031:1266:24:o;7052:115::-;6909:284;;;6336:897;6305:928;7259:31;;-1:-1:-1;;;7259:31:24;;;;;;;;;;;1904:263:184;1983:36;2022:39;:37;:39::i;:::-;2071:31;;-1:-1:-1;;;;;;2071:31:184;-1:-1:-1;;;;;2071:31:184;;;;;;;2117:43;;2071:31;;-1:-1:-1;2071:31:184;2117:43;;-1:-1:-1;;2117:43:184;1973:194;1904:263;:::o;8885:229:381:-;9079:28;9097:9;9079:17;:28::i;10393:326::-;10520:20;10556:32;10591:31;:29;:31::i;:::-;10647:18;;;-1:-1:-1;10556:66:381;-1:-1:-1;10675:37:381;10685:3;10690:21;10675:9;:37::i;:::-;10546:173;10393:326;;;;:::o;722:205:180:-;566:28;;722:205::o;1709:298:170:-;1775:41;1819:49;:47;:49::i;:::-;1775:93;;1878:21;1902:4;:16;;1878:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1928:23:170;;1878:40;;-1:-1:-1;1928:23:170;;:4;;-1:-1:-1;1928:23:170;;;;-1:-1:-1;1928:23:170;-1:-1:-1;1928:23:170;:::i;:::-;;1967:33;1986:7;1995:4;1967:33;;;;;;;:::i;:::-;;;;;;;;1765:242;;1709:298;:::o;5292:444:186:-;5439:6;5432:4;:13;5428:69;;;5461:25;;-1:-1:-1;;;5461:25:186;;;;;;;:::i;5428:69::-;5507:32;5542:31;:29;:31::i;:::-;5621:49;;;;;;;;-1:-1:-1;;;;;5621:49:186;;;;;;;;;;;;;-1:-1:-1;5584:34:186;;;:24;;;;:34;;;;;;:86;;;;-1:-1:-1;;;;;;5584:86:186;;;;;;;;;;;;;;;;;;5686:43;;3147:25:640;;;5584:24:186;;-1:-1:-1;5621:49:186;5584:34;;5686:43;;3120:18:640;5686:43:186;;;;;;;5418:318;5292:444;;;:::o;9555:364:24:-;9649:32;9684:31;:29;:31::i;:::-;9649:66;;9742:12;:10;:12::i;:::-;-1:-1:-1;;;;;9730:24:24;:8;-1:-1:-1;;;;;9730:24:24;;9726:54;;;9763:17;;-1:-1:-1;;;9763:17:24;;;;;;;;;;;9726:54;9841:8;9791:4;:23;;:37;9815:12;:10;:12::i;:::-;-1:-1:-1;;;;;9791:37:24;;;;;;;;;;;;;;;;;-1:-1:-1;9791:37:24;;;:47;;;;;;;;;;;;:58;;-1:-1:-1;;9791:58:24;;;;;;;;;;;9879:12;:10;:12::i;:::-;-1:-1:-1;;;;;9864:48:24;;9903:8;9864:48;;;;661:14:640;654:22;636:41;;624:2;609:18;;496:187;9864:48:24;;;;;;;;9639:280;9555:364;;:::o;10765:381::-;10926:28;10936:4;10942:2;10946:7;10926:9;:28::i;:::-;10968:15;:2;-1:-1:-1;;;;;10968:13:24;;:15::i;:::-;10964:176;;;11002:56;11033:4;11039:2;11043:7;11052:5;11002:30;:56::i;:::-;10997:143;;11085:40;;-1:-1:-1;;;11085:40:24;;;;;;;;;;;2192:583:168;2254:15;2271:13;2296:42;2341:51;:49;:51::i;:::-;2296:96;;2403:25;2431:17;:15;:17::i;:::-;2458:40;;;;;;;;;;;;;;;;;;;2403:45;;-1:-1:-1;2458:24:168;;:40;2485:4;;2458:40;;2485:4;2458:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2514:9;2509:224;2533:17;2529:1;:21;2509:224;;;2589:7;2597:1;2589:10;;;;;;;;:::i;:::-;;;;;;;2578:8;:21;2574:149;;;2627:1;2619:9;;2656:7;2664:1;2656:10;;;;;;;;:::i;:::-;;;;;;;2646:20;;2685:23;;;;2192:583;;;:::o;2574:149::-;2552:6;2557:1;2552:6;;:::i;:::-;;;2509:224;;;-1:-1:-1;2743:25:168;;-1:-1:-1;;;2743:25:168;;39791:2:640;2743:25:168;;;39773:21:640;39830:2;39810:18;;;39803:30;-1:-1:-1;;;39849:18:640;;;39842:45;39904:18;;2743:25:168;39589:339:640;2889:507:168;2951:13;2976:42;3021:51;:49;:51::i;:::-;2976:96;;3083:25;3111:17;:15;:17::i;:::-;3138:40;;;;;;;;;;;;;;;;;;;3083:45;;-1:-1:-1;3138:24:168;;:40;3165:4;;3138:40;;3165:4;3138:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3194:9;3189:166;3213:17;3209:1;:21;3189:166;;;3269:7;3277:1;3269:10;;;;;;;;:::i;:::-;;;;;;;3258:8;:21;3254:91;;;3306:4;:12;;:24;3319:7;3327:1;3319:10;;;;;;;;:::i;:::-;;;;;;;3306:24;;;;;;;;;;;3299:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2889:507;;;:::o;3254:91::-;3232:6;3237:1;3232:6;;:::i;:::-;;;3189:166;;305:703:294;361:13;578:10;574:51;;-1:-1:-1;;604:10:294;;;;;;;;;;;;-1:-1:-1;;;604:10:294;;;;;305:703::o;574:51::-;649:5;634:12;688:75;695:9;;688:75;;720:8;;;;:::i;:::-;;-1:-1:-1;742:10:294;;-1:-1:-1;750:2:294;742:10;;:::i;:::-;;;688:75;;;772:19;804:6;-1:-1:-1;;;;;794:17:294;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:17:294;;772:39;;821:150;828:10;;821:150;;854:11;864:1;854:11;;:::i;:::-;;-1:-1:-1;922:10:294;930:2;922:5;:10;:::i;:::-;909:24;;:2;:24;:::i;:::-;896:39;;879:6;886;879:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;879:56:294;;;;;;;;-1:-1:-1;949:11:294;958:2;949:11;;:::i;:::-;;;821:150;;;994:6;305:703;-1:-1:-1;;;;305:703:294:o;1383:239:172:-;1476:38;1517:43;:41;:43::i;:::-;1570:18;:28;;;;;;;;;;;:45;;1476:84;;-1:-1:-1;1570:45:172;;:28;;:45;;;;:::i;3481:228:168:-;3563:42;3608:51;:49;:51::i;:::-;3669:22;;;;:12;;;:22;;;;;;;;:33;;3563:96;;-1:-1:-1;3669:33:168;;:22;;:33;;;;:::i;1812:681:177:-;1967:15;1999:14;:12;:14::i;:::-;1994:70;;2029:24;;-1:-1:-1;;;2029:24:177;;;;;;;:::i;1994:70::-;2078:12;2074:58;;2106:15;;-1:-1:-1;;;2106:15:177;;40252:2:640;2106:15:177;;;40234:21:640;40291:1;40271:18;;;40264:29;-1:-1:-1;;;40309:18:640;;;40302:35;40354:18;;2106:15:177;40050:328:640;2074:58:177;2142:33;2178;:31;:33::i;:::-;2142:69;;2221:15;2239:4;:26;;;2221:44;;2316:55;2335:7;2344;2353:17;;2316:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2316:18:177;;-1:-1:-1;;;2316:55:177:i;:::-;2276:95;;;;-1:-1:-1;2404:7:177;2387:74;2433:1;2413:17;2423:7;2404;2413:17;:::i;:::-;:21;;;;:::i;:::-;2436:17;;2455:5;;2387:74;;;;;;;;;;:::i;:::-;;;;;;;;2472:14;;1812:681;;;;;;;:::o;529:222:183:-;250:33;;529:222::o;734:242:170:-;581:38;;734:242::o;20882:270:24:-;20992:32;21027:31;:29;:31::i;:::-;21068:29;;;;:20;;;:29;;;;;;:34;;-1:-1:-1;;;;;;21068:34:24;-1:-1:-1;;;;;21068:34:24;;;;;;;;;21117:28;;21068:20;;-1:-1:-1;21068:29:24;;:34;;21117:28;;;;;;21068:29;21117:28;20982:170;20882:270;;;:::o;508:385:286:-;659:12;655:49;;687:7;;655:49;-1:-1:-1;;;;;718:25:286;;408:42;718:25;714:173;;;759:37;783:3;788:7;759:23;:37::i;714:173::-;827:49;845:9;856:5;863:3;868:7;827:17;:49::i;12191:1820:24:-;12309:32;12344:31;:29;:31::i;:::-;12409:18;;12309:66;;-1:-1:-1;;;;;;12441:16:24;;12437:48;;12466:19;;-1:-1:-1;;;12466:19:24;;;;;;;;;;;12437:48;12499:13;12495:44;;12521:18;;-1:-1:-1;;;12521:18:24;;;;;;;;;;;12495:44;12550:61;12580:1;12584:2;12588:12;12602:8;12550:21;:61::i;:::-;-1:-1:-1;;;;;12882:21:24;;;;;;:17;;;:21;;;;;;;;:49;;-1:-1:-1;;;;;;12945:54:24;;-1:-1:-1;;;;;12882:49:24;;;;;;;12945:54;;;-1:-1:-1;;;;;;;;;12882:49:24;;;;;;12945:54;;;;;;;;;;;;;;;;13014:30;;;:16;;;:30;;;;;;:40;;-1:-1:-1;;;;;;13068:71:24;;;-1:-1:-1;;;13123:15:24;13068:71;;;;;;;;;;;;;13014:30;;13217:23;;;;13259:15;;:13;:15::i;:::-;13255:623;;;13294:308;13324:38;;13349:12;;-1:-1:-1;;;;;13324:38:24;;;13341:1;;-1:-1:-1;;;;;;;;;;;13324:38:24;13341:1;;13324:38;13389:69;13428:1;13432:2;13436:14;;;;;;13452:5;13389:30;:69::i;:::-;13384:172;;13493:40;;-1:-1:-1;;;13493:40:24;;;;;;;;;;;13384:172;13597:3;13582:12;:18;13294:308;;13664:18;;:34;;13660:48;;13700:8;;;13660:48;13255:623;;;13747:117;13777:40;;13802:14;;;;;-1:-1:-1;;;;;13777:40:24;;;13794:1;;-1:-1:-1;;;;;;;;;;;13777:40:24;13794:1;;13777:40;13859:3;13844:12;:18;13747:117;;13255:623;-1:-1:-1;13891:33:24;;13944:60;15125:155:381;15753:2184:24;15863:32;15898:31;:29;:31::i;:::-;15863:66;;15940:35;15978:21;15991:7;15978:12;:21::i;:::-;15940:59;;16036:4;-1:-1:-1;;;;;16014:26:24;:13;:18;;;-1:-1:-1;;;;;16014:26:24;;16010:67;;16049:28;;-1:-1:-1;;;16049:28:24;;;;;;;;;;;16010:67;16088:22;16130:4;-1:-1:-1;;;;;16114:20:24;:12;:10;:12::i;:::-;-1:-1:-1;;;;;16114:20:24;;:72;;;;16150:36;16167:4;16173:12;:10;:12::i;16150:36::-;16114:124;;;;16226:12;:10;:12::i;:::-;-1:-1:-1;;;;;16202:36:24;:20;16214:7;16202:11;:20::i;:::-;-1:-1:-1;;;;;16202:36:24;;16114:124;16088:151;;16255:17;16250:66;;16281:35;;-1:-1:-1;;;16281:35:24;;;;;;;;;;;16250:66;-1:-1:-1;;;;;16330:16:24;;16326:52;;16355:23;;-1:-1:-1;;;16355:23:24;;;;;;;;;;;16326:52;16389:43;16411:4;16417:2;16421:7;16430:1;16389:21;:43::i;:::-;16494:35;16511:1;16515:7;16524:4;16494:8;:35::i;:::-;-1:-1:-1;;;;;16819:23:24;;;;;;;:17;;;:23;;;;;;;;:36;;-1:-1:-1;;;;;;16819:36:24;;;-1:-1:-1;;;;;16819:36:24;;;-1:-1:-1;;16819:36:24;;;;;;;16869:21;;;;;;;;;:34;;;;;;;;-1:-1:-1;16869:34:24;;;;;;;;;;;16952:25;;;:16;;;:25;;;;;;16991:18;;-1:-1:-1;;;;;;17023:49:24;;;;-1:-1:-1;;;17056:15:24;17023:49;;;;;;;;;;17342:11;;17401:29;;;;;17448:13;;16952:25;;17401:29;;17448:13;17444:382;;17655:18;;17640:33;;17636:176;;17697:20;;17765:28;;;;-1:-1:-1;;;;;17739:54:24;-1:-1:-1;;;17739:54:24;-1:-1:-1;;;;;;17739:54:24;;;-1:-1:-1;;;;;17697:20:24;;17739:54;;;;17636:176;16795:1041;;;17870:7;17866:2;-1:-1:-1;;;;;17851:27:24;17860:4;-1:-1:-1;;;;;17851:27:24;-1:-1:-1;;;;;;;;;;;17851:27:24;;;;;;;;;17888:42;15125:155:381;422:210:177;241:30;;422:210::o;1521:384:175:-;1574:14;1604:30;1623:10;1604:18;:30::i;:::-;1600:299;;;-1:-1:-1;;;1806:14:175;1802:23;1789:37;1785:2;1781:46;1521:384;:::o;1600:299::-;-1:-1:-1;1878:10:175;;1521:384::o;14280:579:381:-;14625:35;-1:-1:-1;;;;;;;;;;;14657:1:381;14625:8;:35::i;:::-;14624:36;:58;;;;-1:-1:-1;;;;;;14664:18:381;;;;14624:58;:78;;;;-1:-1:-1;;;;;;14686:16:381;;;;14624:78;14620:233;;;14723:29;-1:-1:-1;;;;;;;;;;;14747:4:381;14723:8;:29::i;:::-;14722:30;:62;;;;;14757:27;-1:-1:-1;;;;;;;;;;;14781:2:381;14757:8;:27::i;:::-;14756:28;14722:62;14718:125;;;14804:24;;-1:-1:-1;;;14804:24:381;;41096:2:640;14804:24:381;;;41078:21:640;41135:2;41115:18;;;41108:30;-1:-1:-1;;;41154:18:640;;;41147:44;41208:18;;14804:24:381;40894:338:640;1137:320:290;-1:-1:-1;;;;;1427:19:290;;:23;;;1137:320::o;21633:650:24:-;21791:4;21827:2;-1:-1:-1;;;;;21811:36:24;;21848:12;:10;:12::i;:::-;21862:4;21868:7;21877:5;21811:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21811:72:24;;;;;;;;-1:-1:-1;;21811:72:24;;;;;;;;;;;;:::i;:::-;;;21807:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22042:13:24;;22038:229;;22087:40;;-1:-1:-1;;;22087:40:24;;;;;;;;;;;22038:229;22227:6;22221:13;22212:6;22208:2;22204:15;22197:38;21807:470;-1:-1:-1;;;;;;21929:55:24;-1:-1:-1;;;21929:55:24;;-1:-1:-1;21633:650:24;;;;;;:::o;12184:129:381:-;12248:4;12271:35;3173:24;12293:12;:10;:12::i;3804:478:168:-;3954:25;;4018:24;4029:13;4018:8;:24;:::i;:::-;4008:34;;4072:7;4052:27;;4090:42;4135:51;:49;:51::i;:::-;4197:27;;;;;;;;:13;:27;;;;;;;;;;;;;4234:21;;;:12;;;:21;;;;;:41;;4090:96;;-1:-1:-1;4234:41:168;;:21;;:41;;;;:::i;:::-;;3998:284;3804:478;;;;;;:::o;2532:292:286:-;2714:12;2732:2;-1:-1:-1;;;;;2732:7:286;2748:5;2732:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:46;;;2777:7;2769:48;;;;-1:-1:-1;;;2769:48:286;;42397:2:640;2769:48:286;;;42379:21:640;42436:2;42416:18;;;42409:30;-1:-1:-1;;;42455:18:640;;;42448:58;42523:18;;2769:48:286;42195:352:640;2073:396:286;2234:3;-1:-1:-1;;;;;2225:12:286;:5;-1:-1:-1;;;;;2225:12:286;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:286;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:286;;2353:3;2358:7;2322:30;:44::i;2280:183::-;2397:55;-1:-1:-1;;;;;2397:34:286;;2432:5;2439:3;2444:7;2397:34;:55::i;735:205:228:-;847:86;867:5;897:23;;;922:2;926:5;874:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;874:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:228;-1:-1:-1;;;;;;874:58:228;;;;;;;;;;847:19;:86::i;946:241::-;1111:68;;-1:-1:-1;;;;;42810:15:640;;;1111:68:228;;;42792:34:640;42862:15;;42842:18;;;42835:43;42894:18;;;42887:34;;;1084:96:228;;1104:5;;-1:-1:-1;;;1134:27:228;42727:18:640;;1111:68:228;42552:375:640;3241:706:228;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:228;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:228;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:228;;43134:2:640;3845:85:228;;;43116:21:640;43173:2;43153:18;;;43146:30;43212:34;43192:18;;;43185:62;-1:-1:-1;;;43263:18:640;;;43256:40;43313:19;;3845:85:228;42932:406:640;3827:223:290;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:290;;43952:2:640;5194:60:290;;;43934:21:640;43991:2;43971:18;;;43964:30;44030:31;44010:18;;;44003:59;44079:18;;5194:60:290;43750:353:640;5194:60:290;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:290;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;7675;7703:7;7699:516;;;-1:-1:-1;7733:10:290;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:290;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:640;-1:-1:-1;;;;;;88:32:640;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;688:203::-;783:6;836:3;824:9;815:7;811:23;807:33;804:53;;;853:1;850;843:12;804:53;-1:-1:-1;876:9:640;688:203;-1:-1:-1;688:203:640:o;896:258::-;968:1;978:113;992:6;989:1;986:13;978:113;;;1068:11;;;1062:18;1049:11;;;1042:39;1014:2;1007:10;978:113;;;1109:6;1106:1;1103:13;1100:48;;;-1:-1:-1;;1144:1:640;1126:16;;1119:27;896:258::o;1159:::-;1201:3;1239:5;1233:12;1266:6;1261:3;1254:19;1282:63;1338:6;1331:4;1326:3;1322:14;1315:4;1308:5;1304:16;1282:63;:::i;:::-;1399:2;1378:15;-1:-1:-1;;1374:29:640;1365:39;;;;1406:4;1361:50;;1159:258;-1:-1:-1;;1159:258:640:o;1422:220::-;1571:2;1560:9;1553:21;1534:4;1591:45;1632:2;1621:9;1617:18;1609:6;1591:45;:::i;1855:180::-;1914:6;1967:2;1955:9;1946:7;1942:23;1938:32;1935:52;;;1983:1;1980;1973:12;1935:52;-1:-1:-1;2006:23:640;;1855:180;-1:-1:-1;1855:180:640:o;2040:131::-;-1:-1:-1;;;;;2115:31:640;;2105:42;;2095:70;;2161:1;2158;2151:12;2176:315;2244:6;2252;2305:2;2293:9;2284:7;2280:23;2276:32;2273:52;;;2321:1;2318;2311:12;2273:52;2360:9;2347:23;2379:31;2404:5;2379:31;:::i;:::-;2429:5;2481:2;2466:18;;;;2453:32;;-1:-1:-1;;;2176:315:640:o;2496:247::-;2555:6;2608:2;2596:9;2587:7;2583:23;2579:32;2576:52;;;2624:1;2621;2614:12;2576:52;2663:9;2650:23;2682:31;2707:5;2682:31;:::i;2748:248::-;2816:6;2824;2877:2;2865:9;2856:7;2852:23;2848:32;2845:52;;;2893:1;2890;2883:12;2845:52;-1:-1:-1;;2916:23:640;;;2986:2;2971:18;;;2958:32;;-1:-1:-1;2748:248:640:o;3183:163::-;3250:5;3295:3;3286:6;3281:3;3277:16;3273:26;3270:46;;;3312:1;3309;3302:12;3351:854;3490:6;3498;3506;3514;3522;3530;3583:3;3571:9;3562:7;3558:23;3554:33;3551:53;;;3600:1;3597;3590:12;3551:53;3636:9;3623:23;3613:33;;3696:2;3685:9;3681:18;3668:32;3709:31;3734:5;3709:31;:::i;:::-;3759:5;-1:-1:-1;3811:2:640;3796:18;;3783:32;;-1:-1:-1;3867:2:640;3852:18;;3839:32;3880:33;3839:32;3880:33;:::i;:::-;3932:7;-1:-1:-1;3986:3:640;3971:19;;3958:33;;-1:-1:-1;4042:3:640;4027:19;;4014:33;-1:-1:-1;;;;;4059:30:640;;4056:50;;;4102:1;4099;4092:12;4056:50;4125:74;4191:7;4182:6;4171:9;4167:22;4125:74;:::i;:::-;4115:84;;;3351:854;;;;;;;;:::o;4210:456::-;4287:6;4295;4303;4356:2;4344:9;4335:7;4331:23;4327:32;4324:52;;;4372:1;4369;4362:12;4324:52;4411:9;4398:23;4430:31;4455:5;4430:31;:::i;:::-;4480:5;-1:-1:-1;4537:2:640;4522:18;;4509:32;4550:33;4509:32;4550:33;:::i;:::-;4210:456;;4602:7;;-1:-1:-1;;;4656:2:640;4641:18;;;;4628:32;;4210:456::o;4671:274::-;-1:-1:-1;;;;;4863:32:640;;;;4845:51;;4927:2;4912:18;;4905:34;4833:2;4818:18;;4671:274::o;4950:118::-;5036:5;5029:13;5022:21;5015:5;5012:32;5002:60;;5058:1;5055;5048:12;5073:241;5129:6;5182:2;5170:9;5161:7;5157:23;5153:32;5150:52;;;5198:1;5195;5188:12;5150:52;5237:9;5224:23;5256:28;5278:5;5256:28;:::i;5609:826::-;5804:2;5793:9;5786:21;5849:6;5843:13;5838:2;5827:9;5823:18;5816:41;5911:2;5903:6;5899:15;5893:22;5888:2;5877:9;5873:18;5866:50;5970:2;5962:6;5958:15;5952:22;5947:2;5936:9;5932:18;5925:50;6030:2;6022:6;6018:15;6012:22;6006:3;5995:9;5991:19;5984:51;6090:3;6082:6;6078:16;6072:23;6066:3;6055:9;6051:19;6044:52;6151:3;6143:6;6139:16;6133:23;6127:3;6116:9;6112:19;6105:52;6240:1;6236;6231:3;6227:11;6223:19;6216:3;6208:6;6204:16;6198:23;6194:49;6188:3;6177:9;6173:19;6166:78;5767:4;6291:3;6283:6;6279:16;6273:23;6315:6;6357:2;6352;6341:9;6337:18;6330:30;;6377:52;6424:3;6413:9;6409:19;6395:12;6377:52;:::i;6440:785::-;6567:6;6575;6583;6636:2;6624:9;6615:7;6611:23;6607:32;6604:52;;;6652:1;6649;6642:12;6604:52;6692:9;6679:23;-1:-1:-1;;;;;6762:2:640;6754:6;6751:14;6748:34;;;6778:1;6775;6768:12;6748:34;6816:6;6805:9;6801:22;6791:32;;6861:7;6854:4;6850:2;6846:13;6842:27;6832:55;;6883:1;6880;6873:12;6832:55;6923:2;6910:16;6949:2;6941:6;6938:14;6935:34;;;6965:1;6962;6955:12;6935:34;7020:7;7013:4;7003:6;7000:1;6996:14;6992:2;6988:23;6984:34;6981:47;6978:67;;;7041:1;7038;7031:12;6978:67;7072:4;7064:13;;;;-1:-1:-1;7096:6:640;-1:-1:-1;;7137:20:640;;7124:34;7167:28;7124:34;7167:28;:::i;:::-;7214:5;7204:15;;;6440:785;;;;;:::o;7230:127::-;7291:10;7286:3;7282:20;7279:1;7272:31;7322:4;7319:1;7312:15;7346:4;7343:1;7336:15;7362:761;7637:13;;-1:-1:-1;;;;;7633:22:640;;;7615:41;;7703:4;7691:17;;7685:24;7564:3;7549:19;;;7587;7745:1;7728:19;;7718:150;;7790:10;7785:3;7781:20;7778:1;7771:31;7825:4;7822:1;7815:15;7853:4;7850:1;7843:15;7718:150;7906:12;7899:4;7888:9;7884:20;7877:42;;7975:4;7967:6;7963:17;7957:24;7950:4;7939:9;7935:20;7928:54;8038:4;8030:6;8026:17;8020:24;8013:4;8002:9;7998:20;7991:54;8113:2;8105:4;8097:6;8093:17;8087:24;8083:33;8076:4;8065:9;8061:20;8054:63;;7362:761;;;;:::o;8128:127::-;8189:10;8184:3;8180:20;8177:1;8170:31;8220:4;8217:1;8210:15;8244:4;8241:1;8234:15;8260:275;8331:2;8325:9;8396:2;8377:13;;-1:-1:-1;;8373:27:640;8361:40;;-1:-1:-1;;;;;8416:34:640;;8452:22;;;8413:62;8410:88;;;8478:18;;:::i;:::-;8514:2;8507:22;8260:275;;-1:-1:-1;8260:275:640:o;8540:186::-;8588:4;-1:-1:-1;;;;;8613:6:640;8610:30;8607:56;;;8643:18;;:::i;:::-;-1:-1:-1;8709:2:640;8688:15;-1:-1:-1;;8684:29:640;8715:4;8680:40;;8540:186::o;8731:336::-;8795:5;8824:52;8840:35;8868:6;8840:35;:::i;:::-;8824:52;:::i;:::-;8815:61;;8899:6;8892:5;8885:21;8939:3;8930:6;8925:3;8921:16;8918:25;8915:45;;;8956:1;8953;8946:12;8915:45;9005:6;9000:3;8993:4;8986:5;8982:16;8969:43;9059:1;9052:4;9043:6;9036:5;9032:18;9028:29;9021:40;8731:336;;;;;:::o;9072:220::-;9114:5;9167:3;9160:4;9152:6;9148:17;9144:27;9134:55;;9185:1;9182;9175:12;9134:55;9207:79;9282:3;9273:6;9260:20;9253:4;9245:6;9241:17;9207:79;:::i;9297:1005::-;9445:6;9453;9461;9469;9477;9485;9538:3;9526:9;9517:7;9513:23;9509:33;9506:53;;;9555:1;9552;9545:12;9506:53;9594:9;9581:23;9613:31;9638:5;9613:31;:::i;:::-;9663:5;-1:-1:-1;9715:2:640;9700:18;;9687:32;;-1:-1:-1;9771:2:640;9756:18;;9743:32;9784:33;9743:32;9784:33;:::i;:::-;9836:7;-1:-1:-1;9890:2:640;9875:18;;9862:32;;-1:-1:-1;9945:3:640;9930:19;;9917:33;-1:-1:-1;;;;;9999:14:640;;;9996:34;;;10026:1;10023;10016:12;9996:34;10049:74;10115:7;10106:6;10095:9;10091:22;10049:74;:::i;:::-;10039:84;;10176:3;10165:9;10161:19;10148:33;10132:49;;10206:2;10196:8;10193:16;10190:36;;;10222:1;10219;10212:12;10190:36;;10245:51;10288:7;10277:8;10266:9;10262:24;10245:51;:::i;10307:450::-;10376:6;10429:2;10417:9;10408:7;10404:23;10400:32;10397:52;;;10445:1;10442;10435:12;10397:52;10485:9;10472:23;-1:-1:-1;;;;;10510:6:640;10507:30;10504:50;;;10550:1;10547;10540:12;10504:50;10573:22;;10626:4;10618:13;;10614:27;-1:-1:-1;10604:55:640;;10655:1;10652;10645:12;10604:55;10678:73;10743:7;10738:2;10725:16;10720:2;10716;10712:11;10678:73;:::i;10762:383::-;10839:6;10847;10855;10908:2;10896:9;10887:7;10883:23;10879:32;10876:52;;;10924:1;10921;10914:12;10876:52;10960:9;10947:23;10937:33;;11020:2;11009:9;11005:18;10992:32;11033:31;11058:5;11033:31;:::i;11150:347::-;11201:8;11211:6;11265:3;11258:4;11250:6;11246:17;11242:27;11232:55;;11283:1;11280;11273:12;11232:55;-1:-1:-1;11306:20:640;;-1:-1:-1;;;;;11338:30:640;;11335:50;;;11381:1;11378;11371:12;11335:50;11418:4;11410:6;11406:17;11394:29;;11470:3;11463:4;11454:6;11446;11442:19;11438:30;11435:39;11432:59;;;11487:1;11484;11477:12;11432:59;11150:347;;;;;:::o;11502:477::-;11581:6;11589;11597;11650:2;11638:9;11629:7;11625:23;11621:32;11618:52;;;11666:1;11663;11656:12;11618:52;11702:9;11689:23;11679:33;;11763:2;11752:9;11748:18;11735:32;-1:-1:-1;;;;;11782:6:640;11779:30;11776:50;;;11822:1;11819;11812:12;11776:50;11861:58;11911:7;11902:6;11891:9;11887:22;11861:58;:::i;:::-;11502:477;;11938:8;;-1:-1:-1;11835:84:640;;-1:-1:-1;;;;11502:477:640:o;12207:382::-;12272:6;12280;12333:2;12321:9;12312:7;12308:23;12304:32;12301:52;;;12349:1;12346;12339:12;12301:52;12388:9;12375:23;12407:31;12432:5;12407:31;:::i;:::-;12457:5;-1:-1:-1;12514:2:640;12499:18;;12486:32;12527:30;12486:32;12527:30;:::i;:::-;12576:7;12566:17;;;12207:382;;;;;:::o;12594:315::-;12662:6;12670;12723:2;12711:9;12702:7;12698:23;12694:32;12691:52;;;12739:1;12736;12729:12;12691:52;12775:9;12762:23;12752:33;;12835:2;12824:9;12820:18;12807:32;12848:31;12873:5;12848:31;:::i;12914:665::-;13009:6;13017;13025;13033;13086:3;13074:9;13065:7;13061:23;13057:33;13054:53;;;13103:1;13100;13093:12;13054:53;13142:9;13129:23;13161:31;13186:5;13161:31;:::i;:::-;13211:5;-1:-1:-1;13268:2:640;13253:18;;13240:32;13281:33;13240:32;13281:33;:::i;:::-;13333:7;-1:-1:-1;13387:2:640;13372:18;;13359:32;;-1:-1:-1;13442:2:640;13427:18;;13414:32;-1:-1:-1;;;;;13458:30:640;;13455:50;;;13501:1;13498;13491:12;13455:50;13524:49;13565:7;13556:6;13545:9;13541:22;13524:49;:::i;:::-;13514:59;;;12914:665;;;;;;;:::o;13584:383::-;13661:6;13669;13677;13730:2;13718:9;13709:7;13705:23;13701:32;13698:52;;;13746:1;13743;13736:12;13698:52;13785:9;13772:23;13804:31;13829:5;13804:31;:::i;:::-;13854:5;13906:2;13891:18;;13878:32;;-1:-1:-1;13957:2:640;13942:18;;;13929:32;;13584:383;-1:-1:-1;;;13584:383:640:o;13972:786::-;14072:6;14080;14088;14096;14104;14157:2;14145:9;14136:7;14132:23;14128:32;14125:52;;;14173:1;14170;14163:12;14125:52;14209:9;14196:23;14186:33;;14270:2;14259:9;14255:18;14242:32;-1:-1:-1;;;;;14334:2:640;14326:6;14323:14;14320:34;;;14350:1;14347;14340:12;14320:34;14389:58;14439:7;14430:6;14419:9;14415:22;14389:58;:::i;:::-;14466:8;;-1:-1:-1;14363:84:640;-1:-1:-1;14554:2:640;14539:18;;14526:32;;-1:-1:-1;14570:16:640;;;14567:36;;;14599:1;14596;14589:12;14567:36;;14638:60;14690:7;14679:8;14668:9;14664:24;14638:60;:::i;:::-;13972:786;;;;-1:-1:-1;13972:786:640;;-1:-1:-1;14717:8:640;;14612:86;13972:786;-1:-1:-1;;;13972:786:640:o;15016:628::-;15104:6;15112;15120;15173:2;15161:9;15152:7;15148:23;15144:32;15141:52;;;15189:1;15186;15179:12;15141:52;15229:9;15216:23;-1:-1:-1;;;;;15299:2:640;15291:6;15288:14;15285:34;;;15315:1;15312;15305:12;15285:34;15338:49;15379:7;15370:6;15359:9;15355:22;15338:49;:::i;:::-;15328:59;;15440:2;15429:9;15425:18;15412:32;15396:48;;15469:2;15459:8;15456:16;15453:36;;;15485:1;15482;15475:12;15453:36;;15524:60;15576:7;15565:8;15554:9;15550:24;15524:60;:::i;15649:388::-;15717:6;15725;15778:2;15766:9;15757:7;15753:23;15749:32;15746:52;;;15794:1;15791;15784:12;15746:52;15833:9;15820:23;15852:31;15877:5;15852:31;:::i;:::-;15902:5;-1:-1:-1;15959:2:640;15944:18;;15931:32;15972:33;15931:32;15972:33;:::i;16386:183::-;16490:11;;-1:-1:-1;;;;;;16486:42:640;-1:-1:-1;;;;;16530:31:640;;;;16483:79;;;;16470:93;;16386:183::o;16574:826::-;16757:5;16744:19;16772:33;16797:7;16772:33;:::i;:::-;16814:62;16868:7;16862:4;16814:62;:::i;:::-;;16924:2;16917:5;16913:14;16900:28;16959:1;16950:7;16947:14;16937:42;;16975:1;16972;16965:12;16937:42;16998:11;;-1:-1:-1;;;;17034:27:640;17090:3;17067:17;;;;-1:-1:-1;;;17063:37:640;17031:70;17018:84;;17156:2;17145:14;;17132:28;-1:-1:-1;17118:12:640;;17111:50;17215:2;17204:14;;17191:28;17187:1;17177:12;;17170:50;17268:3;17257:15;;17244:29;17282:33;17244:29;17282:33;:::i;:::-;17324:70;17386:7;17382:1;17376:4;17372:12;17324:70;:::i;17405:380::-;17484:1;17480:12;;;;17527;;;17548:61;;17602:4;17594:6;17590:17;17580:27;;17548:61;17655:2;17647:6;17644:14;17624:18;17621:38;17618:161;;;17701:10;17696:3;17692:20;17689:1;17682:31;17736:4;17733:1;17726:15;17764:4;17761:1;17754:15;17790:304;-1:-1:-1;;;;;18020:15:640;;;18002:34;;18072:15;;18067:2;18052:18;;18045:43;17952:2;17937:18;;17790:304::o;18099:245::-;18166:6;18219:2;18207:9;18198:7;18194:23;18190:32;18187:52;;;18235:1;18232;18225:12;18187:52;18267:9;18261:16;18286:28;18308:5;18286:28;:::i;18349:338::-;18551:2;18533:21;;;18590:2;18570:18;;;18563:30;-1:-1:-1;;;18624:2:640;18609:18;;18602:44;18678:2;18663:18;;18349:338::o;18692:545::-;18785:4;18791:6;18851:11;18838:25;18945:2;18941:7;18930:8;18914:14;18910:29;18906:43;18886:18;18882:68;18872:96;;18964:1;18961;18954:12;18872:96;18991:33;;19043:20;;;-1:-1:-1;;;;;;19075:30:640;;19072:50;;;19118:1;19115;19108:12;19072:50;19151:4;19139:17;;-1:-1:-1;19202:1:640;19198:14;;;19182;19178:35;19168:46;;19165:66;;;19227:1;19224;19217:12;20048:127;20109:10;20104:3;20100:20;20097:1;20090:31;20140:4;20137:1;20130:15;20164:4;20161:1;20154:15;20180:128;20220:3;20251:1;20247:6;20244:1;20241:13;20238:39;;;20257:18;;:::i;:::-;-1:-1:-1;20293:9:640;;20180:128::o;21669:127::-;21730:10;21725:3;21721:20;21718:1;21711:31;21761:4;21758:1;21751:15;21785:4;21782:1;21775:15;21801:168;21841:7;21907:1;21903;21899:6;21895:14;21892:1;21889:21;21884:1;21877:9;21870:17;21866:45;21863:71;;;21914:18;;:::i;:::-;-1:-1:-1;21954:9:640;;21801:168::o;21974:127::-;22035:10;22030:3;22026:20;22023:1;22016:31;22066:4;22063:1;22056:15;22090:4;22087:1;22080:15;22106:120;22146:1;22172;22162:35;;22177:18;;:::i;:::-;-1:-1:-1;22211:9:640;;22106:120::o;22982:333::-;23083:4;23141:11;23128:25;23235:3;23231:8;23220;23204:14;23200:29;23196:44;23176:18;23172:69;23162:97;;23255:1;23252;23245:12;23162:97;23276:33;;;;;22982:333;-1:-1:-1;;22982:333:640:o;24123:545::-;24225:2;24220:3;24217:11;24214:448;;;24261:1;24286:5;24282:2;24275:17;24331:4;24327:2;24317:19;24401:2;24389:10;24385:19;24382:1;24378:27;24372:4;24368:38;24437:4;24425:10;24422:20;24419:47;;;-1:-1:-1;24460:4:640;24419:47;24515:2;24510:3;24506:12;24503:1;24499:20;24493:4;24489:31;24479:41;;24570:82;24588:2;24581:5;24578:13;24570:82;;;24633:17;;;24614:1;24603:13;24570:82;;24844:1190;-1:-1:-1;;;;;24947:3:640;24944:27;24941:53;;;24974:18;;:::i;:::-;25003:94;25093:3;25053:38;25085:4;25079:11;25053:38;:::i;:::-;25047:4;25003:94;:::i;:::-;25123:1;25148:2;25143:3;25140:11;25165:1;25160:616;;;;25820:1;25837:3;25834:93;;;-1:-1:-1;25893:19:640;;;25880:33;25834:93;-1:-1:-1;;24801:1:640;24797:11;;;24793:24;24789:29;24779:40;24825:1;24821:11;;;24776:57;25940:78;;25133:895;;25160:616;24070:1;24063:14;;;24107:4;24094:18;;-1:-1:-1;;25196:17:640;;;25297:9;25319:229;25333:7;25330:1;25327:14;25319:229;;;25422:19;;;25409:33;25394:49;;25529:4;25514:20;;;;25482:1;25470:14;;;;25349:12;25319:229;;;25323:3;25576;25567:7;25564:16;25561:159;;;25700:1;25696:6;25690:3;25684;25681:1;25677:11;25673:21;25669:34;25665:39;25652:9;25647:3;25643:19;25630:33;25626:79;25618:6;25611:95;25561:159;;;25763:1;25757:3;25754:1;25750:11;25746:19;25740:4;25733:33;25133:895;;24844:1190;;;:::o;26039:1181::-;26218:5;26205:19;26199:4;26192:33;26279:2;26272:5;26268:14;26255:28;26251:1;26245:4;26241:12;26234:50;26338:2;26331:5;26327:14;26314:28;26310:1;26304:4;26300:12;26293:50;26397:2;26390:5;26386:14;26373:28;26369:1;26363:4;26359:12;26352:50;26456:3;26449:5;26445:15;26432:29;26428:1;26422:4;26418:12;26411:51;26516:3;26509:5;26505:15;26492:29;26488:1;26482:4;26478:12;26471:51;26570:3;26563:5;26559:15;26546:29;26584:33;26609:7;26584:33;:::i;:::-;26626:70;26688:7;26684:1;26678:4;26674:12;26626:70;:::i;:::-;;26755:3;26748:5;26744:15;26731:29;26839:2;26835:7;26827:5;26811:14;26807:26;26803:40;26783:18;26779:65;26769:93;;26858:1;26855;26848:12;26769:93;26883:30;;26936:18;;-1:-1:-1;;;;;26966:30:640;;26963:50;;;27009:1;27006;26999:12;26963:50;27046:2;27040:4;27036:13;27022:27;;27093:6;27077:14;27073:27;27065:6;27061:40;27058:60;;;27114:1;27111;27104:12;27058:60;27127:87;27207:6;27199;27195:1;27189:4;27185:12;27127:87;:::i;27225:135::-;27264:3;-1:-1:-1;;27285:17:640;;27282:43;;;27305:18;;:::i;:::-;-1:-1:-1;27352:1:640;27341:13;;27225:135::o;27365:504::-;27424:5;27431:6;27491:3;27478:17;27577:2;27573:7;27562:8;27546:14;27542:29;27538:43;27518:18;27514:68;27504:96;;27596:1;27593;27586:12;27504:96;27624:33;;27728:4;27715:18;;;-1:-1:-1;27676:21:640;;-1:-1:-1;;;;;;27745:30:640;;27742:50;;;27788:1;27785;27778:12;27742:50;27838:6;27822:14;27818:27;27808:8;27804:42;27801:62;;;27859:1;27856;27849:12;27874:267;27963:6;27958:3;27951:19;28015:6;28008:5;28001:4;27996:3;27992:14;27979:43;-1:-1:-1;28067:1:640;28042:16;;;28060:4;28038:27;;;28031:38;;;;28123:2;28102:15;;;-1:-1:-1;;28098:29:640;28089:39;;;28085:50;;27874:267::o;28146:2051::-;28417:2;28469:21;;;28442:18;;;28525:22;;;28388:4;;28566:2;28584:18;;;28648:1;28644:14;;;28629:30;;28625:39;;28687:6;28388:4;;28742:1372;28758:6;28753:3;28750:15;28742:1372;;;28827:22;;;-1:-1:-1;;28823:36:640;28811:49;;28899:20;;28974:14;28970:27;;;-1:-1:-1;;28966:42:640;28942:67;;28932:95;;29023:1;29020;29013:12;28932:95;29053:31;;29141:19;;29126:35;;29184:4;29238:14;;;29225:28;29208:15;;;29201:53;29304:14;;;29291:28;29274:15;;;29267:53;29370:14;;;29357:28;29340:15;;;29333:53;29409:4;29463:14;;;29450:28;29433:15;;;29426:53;29502:4;29556:14;;;29543:28;29526:15;;;29519:53;29107:6;;29595:4;29640:14;;;29627:28;29668:33;29627:28;29668:33;:::i;:::-;-1:-1:-1;;;;;29738:33:640;29721:15;;;29714:58;29795:4;29846:54;29885:14;;;29889:5;29846:54;:::i;:::-;29812:88;;29937:2;29932;29924:6;29920:15;29913:27;29963:71;30030:2;30022:6;30018:15;30004:12;29990;29963:71;:::i;:::-;30092:12;;;;29953:81;-1:-1:-1;;;30057:15:640;;;;;-1:-1:-1;;28784:1:640;28775:11;28742:1372;;;-1:-1:-1;;;470:13:640;;463:21;30185:4;30170:20;;451:34;30131:6;-1:-1:-1;30146:45:640;;-1:-1:-1;;;400:91:640;30548:703;30636:6;30644;30697:2;30685:9;30676:7;30672:23;30668:32;30665:52;;;30713:1;30710;30703:12;30665:52;30746:9;30740:16;-1:-1:-1;;;;;30771:6:640;30768:30;30765:50;;;30811:1;30808;30801:12;30765:50;30834:22;;30887:4;30879:13;;30875:27;-1:-1:-1;30865:55:640;;30916:1;30913;30906:12;30865:55;30945:2;30939:9;30970:48;30986:31;31014:2;30986:31;:::i;30970:48::-;31041:2;31034:5;31027:17;31083:7;31076:4;31071:2;31067;31063:11;31059:22;31056:35;31053:55;;;31104:1;31101;31094:12;31053:55;31117:58;31172:2;31165:4;31158:5;31154:16;31147:4;31143:2;31139:13;31117:58;:::i;:::-;31239:4;31224:20;;;;31218:27;31194:5;;31218:27;;-1:-1:-1;;;;;30548:703:640:o;31256:525::-;31471:3;31509:6;31503:13;31525:53;31571:6;31566:3;31559:4;31551:6;31547:17;31525:53;:::i;:::-;31600:16;;31653:6;31645;31600:16;31625:35;31679:18;;;31728;;;-1:-1:-1;31770:4:640;31762:13;;31256:525;-1:-1:-1;;;31256:525:640:o;32824:251::-;32894:6;32947:2;32935:9;32926:7;32922:23;32918:32;32915:52;;;32963:1;32960;32953:12;32915:52;32995:9;32989:16;33014:31;33039:5;33014:31;:::i;33759:184::-;33829:6;33882:2;33870:9;33861:7;33857:23;33853:32;33850:52;;;33898:1;33895;33888:12;33850:52;-1:-1:-1;33921:16:640;;33759:184;-1:-1:-1;33759:184:640:o;34284:125::-;34324:4;34352:1;34349;34346:8;34343:34;;;34357:18;;:::i;:::-;-1:-1:-1;34394:9:640;;34284:125::o;34414:136::-;34453:3;34481:5;34471:39;;34490:18;;:::i;:::-;-1:-1:-1;;;34526:18:640;;34414:136::o;34895:439::-;35127:3;35165:6;35159:13;35181:53;35227:6;35222:3;35215:4;35207:6;35203:17;35181:53;:::i;:::-;-1:-1:-1;;;35256:16:640;;35281:18;;;-1:-1:-1;35326:1:640;35315:13;;34895:439;-1:-1:-1;34895:439:640:o;35339:470::-;35518:3;35556:6;35550:13;35572:53;35618:6;35613:3;35606:4;35598:6;35594:17;35572:53;:::i;:::-;35688:13;;35647:16;;;;35710:57;35688:13;35647:16;35744:4;35732:17;;35710:57;:::i;:::-;35783:20;;35339:470;-1:-1:-1;;;;35339:470:640:o;36154:388::-;36231:6;36239;36292:2;36280:9;36271:7;36267:23;36263:32;36260:52;;;36308:1;36305;36298:12;36260:52;36348:9;36335:23;-1:-1:-1;;;;;36373:6:640;36370:30;36367:50;;;36413:1;36410;36403:12;36367:50;36436:49;36477:7;36468:6;36457:9;36453:22;36436:49;:::i;:::-;36426:59;36532:2;36517:18;;;;36504:32;;-1:-1:-1;;;;36154:388:640:o;36547:335::-;36758:6;36750;36745:3;36732:33;36784:16;;;36831:18;;;36873:2;36865:11;;36547:335;-1:-1:-1;36547:335:640:o;38605:339::-;38807:2;38789:21;;;38846:2;38826:18;;;38819:30;-1:-1:-1;;;38880:2:640;38865:18;;38858:45;38935:2;38920:18;;38605:339::o;39201:383::-;39398:2;39387:9;39380:21;39361:4;39424:45;39465:2;39454:9;39450:18;39442:6;39424:45;:::i;:::-;39517:9;39509:6;39505:22;39500:2;39489:9;39485:18;39478:50;39545:33;39571:6;39563;39545:33;:::i;:::-;39537:41;39201:383;-1:-1:-1;;;;;39201:383:640:o;39933:112::-;39965:1;39991;39981:35;;39996:18;;:::i;:::-;-1:-1:-1;40030:9:640;;39933:112::o;40383:506::-;40626:6;40615:9;40608:25;40669:2;40664;40653:9;40649:18;40642:30;40589:4;40695:62;40753:2;40742:9;40738:18;40730:6;40722;40695:62;:::i;:::-;40805:9;40797:6;40793:22;40788:2;40777:9;40773:18;40766:50;40833;40876:6;40868;40860;40833:50;:::i;:::-;40825:58;40383:506;-1:-1:-1;;;;;;;;40383:506:640:o;41237:489::-;-1:-1:-1;;;;;41506:15:640;;;41488:34;;41558:15;;41553:2;41538:18;;41531:43;41605:2;41590:18;;41583:34;;;41653:3;41648:2;41633:18;;41626:31;;;41431:4;;41674:46;;41700:19;;41692:6;41674:46;:::i;:::-;41666:54;41237:489;-1:-1:-1;;;;;;41237:489:640:o;41731:249::-;41800:6;41853:2;41841:9;41832:7;41828:23;41824:32;41821:52;;;41869:1;41866;41859:12;41821:52;41901:9;41895:16;41920:30;41944:5;41920:30;:::i;44108:274::-;44237:3;44275:6;44269:13;44291:53;44337:6;44332:3;44325:4;44317:6;44313:17;44291:53;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnAndClaim(uint256,uint256)": "1567313b",
    "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
    "claimCondition()": "d637ed59",
    "contractURI()": "e8a3d485",
    "encryptDecrypt(bytes,bytes)": "e7150322",
    "encryptedData(uint256)": "a05112fc",
    "getActiveClaimConditionId()": "c68907de",
    "getApproved(uint256)": "081812fc",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getBurnToClaimInfo()": "778a4c0e",
    "getClaimConditionById(uint256)": "6f8934f4",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getPlatformFeeInfo()": "d45573f6",
    "getRevealURI(uint256,bytes)": "9fc4d68f",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getSupplyClaimedByWallet(uint256,address)": "ad1eefc5",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isEncryptedBatch(uint256)": "492e224b",
    "isTrustedForwarder(address)": "572b6c05",
    "lazyMint(uint256,string,bytes)": "d37c353b",
    "maxTotalSupply()": "2ab4d052",
    "name()": "06fdde03",
    "nextTokenIdToClaim()": "acd083f8",
    "nextTokenIdToMint()": "3b1475a7",
    "operatorRestriction()": "504c6e01",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "reveal(uint256,bytes)": "ce805642",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setBurnToClaimInfo((address,uint8,uint256,uint256,address))": "0689b284",
    "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "74bc7db7",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setMaxTotalSupply(uint256)": "3f3e4c11",
    "setOperatorRestriction(bool)": "32f0cd64",
    "setOwner(address)": "13af4035",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalMinted()": "a2309ff8",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verifyBurnToClaim(address,uint256,uint256)": "bb408851",
    "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "23a2902b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"MaxTotalSupplyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restriction\",\"type\":\"bool\"}],\"name\":\"OperatorRestriction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"name\":\"TokenURIRevealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"originContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"burnTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"TokensBurnedAndClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedBaseURI\",\"type\":\"bytes\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_burnTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"burnAndClaim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"encryptDecrypt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"encryptedData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBurnToClaimInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"originContractAddress\",\"type\":\"address\"},{\"internalType\":\"enum IBurnToClaim.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintPriceForNewToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IBurnToClaim.BurnToClaimInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_key\",\"type\":\"bytes\"}],\"name\":\"getRevealURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyClaimedByWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"}],\"name\":\"isEncryptedBatch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURIForTokens\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"lazyMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorRestriction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_key\",\"type\":\"bytes\"}],\"name\":\"reveal\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"originContractAddress\",\"type\":\"address\"},{\"internalType\":\"enum IBurnToClaim.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintPriceForNewToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IBurnToClaim.BurnToClaimInfo\",\"name\":\"_burnToClaimInfo\",\"type\":\"tuple\"}],\"name\":\"setBurnToClaimInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"_conditions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"setMaxTotalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_restriction\",\"type\":\"bool\"}],\"name\":\"setOperatorRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"verifyBurnToClaim\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"MaxTotalSupplyUpdated(uint256)\":{\"details\":\"Emitted when the global max supply of tokens is updated.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {ERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"burnAndClaim(uint256,uint256)\":{\"details\":\"Claim lazy minted after burning required tokens from origin contract.\"},\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"encryptDecrypt(bytes,bytes)\":{\"details\":\"Encrypt/decrypt given `data` with `key`. Uses inline assembly.                  See: https://ethereum.stackexchange.com/questions/69825/decrypt-message-on-chain\",\"params\":{\"data\":\"Bytes of data to encrypt/decrypt.\",\"key\":\"Secure key used by caller for encryption/decryption.\"},\"returns\":{\"result\":\" Output after encryption/decryption of given data.\"}},\"encryptedData(uint256)\":{\"details\":\"Mapping from tokenId of a batch of tokens => to delayed reveal data.\"},\"getActiveClaimConditionId()\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"ID of a token.\"}},\"getClaimConditionById(uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getRevealURI(uint256,bytes)\":{\"details\":\"Reveal encrypted base URI for `_batchId` with caller/admin's `_key` used for encryption.                      Reverts if there's no encrypted URI for `_batchId`.                      See {encryptDecrypt}.\",\"params\":{\"_batchId\":\"ID of the batch for which URI is being revealed.\",\"_key\":\"Secure key used by caller/admin for encryption of baseURI.\"},\"returns\":{\"revealedURI\":\"Decrypted base URI.\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getSupplyClaimedByWallet(uint256,address)\":{\"details\":\"Returns the supply claimed by claimer for a given conditionId.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isEncryptedBatch(uint256)\":{\"details\":\"Returns `true` if `_batchId`'s base URI is encrypted.\",\"params\":{\"_batchId\":\"ID of a batch of NFTs.\"}},\"lazyMint(uint256,string,bytes)\":{\"details\":\"Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`.\"},\"maxTotalSupply()\":{\"details\":\"Global max total supply of NFTs.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"nextTokenIdToClaim()\":{\"details\":\"The next token ID of the NFT that can be claimed.\"},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"reveal(uint256,bytes)\":{\"details\":\"Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {ERC721-setApprovalForAll}.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setMaxTotalSupply(uint256)\":{\"details\":\"Lets a contract admin set the global maximum supply for collection's NFTs.\"},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_transferFrom}.\"},\"verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"DEFAULT_ADMIN_ROLE\":{\"details\":\"Default admin role for all roles. Only accounts with this role can grant/revoke other roles.\"},\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"MINTER_ROLE\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens.\"},\"OPERATOR_ROLE\":{\"details\":\"Only transfers initiated by operator role hodlers are valid, when operator-initated transfers are restricted.\"},\"TRANSFER_ROLE\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"events\":{\"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"encryptDecrypt(bytes,bytes)\":{\"notice\":\"Encrypt/decrypt data on chain.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens the given tokenId belongs to.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRevealURI(uint256,bytes)\":{\"notice\":\"Returns revealed URI for a batch of NFTs.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"isEncryptedBatch(uint256)\":{\"notice\":\"Returns whether the relvant batch of NFTs is subject to a delayed reveal.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"totalMinted()\":{\"notice\":\"Returns the total amount of tokens minted in the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Logic.sol\":\"BurnToClaimDrop721Logic\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/eip/ERC165.sol\":{\"keccak256\":\"0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c\",\"dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr\"]},\"contracts/eip/ERC721AUpgradeable.sol\":{\"keccak256\":\"0xb00aafcce4733231e61e5979c0bcd35f58930f97c874815fc5bb8af1ff3a58f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1092eeb12450e33fb09e6d9085893db82c58391ff7ab5cc868ecf5f1b50296ad\",\"dweb:/ipfs/QmepmNS3ChsEiR25sTc8otjdKthRrKKs7k1UY7VpPieafu\"]},\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552\",\"dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/eip/interface/IERC721A.sol\":{\"keccak256\":\"0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8\",\"dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5\"]},\"contracts/eip/interface/IERC721Metadata.sol\":{\"keccak256\":\"0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e\",\"dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4\"]},\"contracts/eip/interface/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"contracts/extension/interface/IBurnToClaim.sol\":{\"keccak256\":\"0xb32af29a3f6b880bb33ff48e776a8c4853a8ae80a780895c65699d3cf208cee6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2dc8839ca321abccde27dab049355e56daf5b90a164190262dfe1a4f624d3603\",\"dweb:/ipfs/Qmc969VggsLkDNZaKbvLwhKEi5XwZekv7UVYDyYDQ8mxKg\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDelayedReveal.sol\":{\"keccak256\":\"0xbbe98263ebce49f81cb42f8bf1e7e631afd81cda73be79b907e81a2f54fd2123\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://76913c2086e309c97ac0d5be72bbe23e66fe35e231c75318993c14e6aa4c0138\",\"dweb:/ipfs/QmXwr49U275Cam8x9mYcNdcCmZHUYuBge3CtFPkBkEMzL4\"]},\"contracts/extension/interface/IDrop.sol\":{\"keccak256\":\"0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093\",\"dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo\"]},\"contracts/extension/interface/IERC2771Context.sol\":{\"keccak256\":\"0x47c68c2b49d42008eb5fe42cf7cde539c380c37fc58927ca65711f846da28ca1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e8a91fd4dd913f5d26dd9594c8159324efe2a3530e92d8d27753e61db5b1dc41\",\"dweb:/ipfs/QmZUgkaF894U6EK1wnNiLnGmEa7fJoVkhagAiAkxwRdAnp\"]},\"contracts/extension/interface/ILazyMint.sol\":{\"keccak256\":\"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3\",\"dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA\"]},\"contracts/extension/interface/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34\",\"dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg\"]},\"contracts/extension/interface/IOperatorFilterToggle.sol\":{\"keccak256\":\"0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674\",\"dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/extension/upgradeable/BatchMintMetadata.sol\":{\"keccak256\":\"0x6c7000dfcf8875c4416962d69c299729c6197171f4d94e5d461b444cdf3cbad3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://85f630b78bc12c085e603a3aa8aeb39b9a58e0023f0ecdd5d968a378a3294f06\",\"dweb:/ipfs/QmYk9EaaENCFf3vpcQCfmDrREfsTXuVCeHBegDLivCteCH\"]},\"contracts/extension/upgradeable/BurnToClaim.sol\":{\"keccak256\":\"0x83e36dc7a38a390294981ed5ce51fb4d04480cbc4b2df9364adb36e662d8b726\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d1ab92f4aae89b9b83a0509ec1e78a2904d007ac9024dce50c3faad9342d5cb3\",\"dweb:/ipfs/QmRRXc1sRM9Z6BNoED3jCmxBBY1Qi5GLN3gfPC3xSC9b8t\"]},\"contracts/extension/upgradeable/ContractMetadata.sol\":{\"keccak256\":\"0x93f8793291ab833930046db54aefb97749a2a59b35eb64e2a765c565dd7d553c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39827a9ffd5a684607a43ea3591d46ce4a256b7a73851d10cc90d898bc3b9463\",\"dweb:/ipfs/QmSt8AmxU8BLCmn1suJo4Q5nPjT77LXqkCvVwii3uahCWr\"]},\"contracts/extension/upgradeable/DefaultOperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0x62d82883047991b642ca56b5f01ac39b6b5ea64e26b23ad1efaecc02e1d88701\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://693cd425f20f33302dc9fce35defde61b04435d54b911fa0024992792093f3d8\",\"dweb:/ipfs/QmejQhQnRbb2XQjuh2x4PREXgT43hJtqkCfdka9GtHHxeQ\"]},\"contracts/extension/upgradeable/DelayedReveal.sol\":{\"keccak256\":\"0x3d634a8df995df00ae4e8738335680b81293400fafb6a1d271d7ef4cac0e0962\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://65aa65e9d01072496c281b1750eb37181a777f231c0b49a0e9638e2a02a608a7\",\"dweb:/ipfs/QmYKPpWL4UHCRabuvTaJnxEQpzUPszA54U4MQju1ApwzXK\"]},\"contracts/extension/upgradeable/Drop.sol\":{\"keccak256\":\"0x0dbdcec17c40baace8ebbe237375e9bdf6298a1df8da8d071ab726717079c4ee\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://94606f26302ed760d44171de5f6c08f10fec8badd8b04d090f269d91e35079ac\",\"dweb:/ipfs/QmdCA8WontjNe8heQLDd6U3z56UondSvzFT92UdYP7KUVE\"]},\"contracts/extension/upgradeable/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xc97fe90c0e0817bca6647eee3339520c1b760601aca440b8ca8fc4cd152cd8a8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://3754795c9fd39d8c901ae0020f381df09d2f19a0695a65e218943181f247fa52\",\"dweb:/ipfs/QmUdia1Sy6mYKFY9dsEPEKBKp8bbetbZFVU56XTK4L2gok\"]},\"contracts/extension/upgradeable/Initializable.sol\":{\"keccak256\":\"0x1679b562e7e9d9b5fa34abf9671cd4ada7bbc7f0f40bcf18fb8e05bf88962685\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://d97aac4f1dd707f1c3440c1614bc9aea4b0ef138bcb236d99632585341fcfd0d\",\"dweb:/ipfs/QmNyQ5giiw4sUUCxoNR23D6BQuGL3qpvThWsErZpTnLD1d\"]},\"contracts/extension/upgradeable/LazyMint.sol\":{\"keccak256\":\"0x2d0abaf6788ddcd8d2c9dadcfdbdeaa9925cb2507eee6c305983774e12dc6ffe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ace4f792167819ce69ee9a23c78c2f3d34348fc163c72ea823bbbbebfe4e5b2c\",\"dweb:/ipfs/QmYdoH4V3Yd6D4NNYguhF2Nk4h8GZYQikmhLSCHn3X9pTu\"]},\"contracts/extension/upgradeable/OperatorFilterToggle.sol\":{\"keccak256\":\"0x38252e6b114e8f07664df699c58e8e6ac5513029e2bbe111d257febea7f6be08\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://cc3fc15c333e45e8326f3061a9aab1b92f6ceedff10a19d96a81592c187bbb68\",\"dweb:/ipfs/QmQu7vDGWhHYstd3fT1uuxXt3MrAcKgZykrFnM5Rr26bq5\"]},\"contracts/extension/upgradeable/OperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0xd61fcfc393829522476ebc3da6d6a18ea7ad92fdd7b4836dadbacc9dc31ca1bd\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://df6801d86b2e91bda66589f1c14d51738d13a231d41e3255da59661ad1df51dc\",\"dweb:/ipfs/QmZP68PQt8sZZz1SPaGg25AjixHrwXYnoDHFCcm6XN7y5Q\"]},\"contracts/extension/upgradeable/Ownable.sol\":{\"keccak256\":\"0xab380d057f59ff2dcf3df8d8f8d62085217402da2e78dcfe703c8fd6c5ebccd2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e0ef120b373cc819f4aa0443897c19c036b1ad787a58a69deafcfdb14d74b865\",\"dweb:/ipfs/QmdmazJLCUsGC4pru4165V1Vc3WbSG5qbL9ZfGgab4q46n\"]},\"contracts/extension/upgradeable/Permissions.sol\":{\"keccak256\":\"0x4fd1e41f24b6c2a04c47f6fd5d6a6a8bf7f72b813cbc202fcf01ce70977a87df\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://00b8f085918fe25fcf41c0f8c9e1c94e54337dcaeefe7708dd793e4a7cfb64f6\",\"dweb:/ipfs/QmYDnhfxd4561bPH2M3sHWSYk5fqXxHqxwmFCANiP9aR88\"]},\"contracts/extension/upgradeable/PlatformFee.sol\":{\"keccak256\":\"0x58261d3c9629d5227979229b48aeb1d2e2a85cd6f851dc26267b893b125716a3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d3206283d84cf7894d64f25ec1555222355a5761f4745ff61fba94486381f67b\",\"dweb:/ipfs/QmNrV54Nx7Kv37zxhAiE9axcRxygG7E3oiUSu7RpLeHMEZ\"]},\"contracts/extension/upgradeable/PrimarySale.sol\":{\"keccak256\":\"0xdedcef434e7c5b35760fcdf6dd6fc5ec809c46dc96a10319a78394d88f3c2e37\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bce298da5b366496aa3a9bb791eee639be2fb90992404ab32ebade09af077a62\",\"dweb:/ipfs/QmQE4zXBFkLoPVujKLPJVJNVLKShoqGadqERKZ2naW4Ae1\"]},\"contracts/extension/upgradeable/Royalty.sol\":{\"keccak256\":\"0x741592aa926cbfe9a86b5e12166c09061b9c84d9c1b9bd0086743f3511b9e69f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://386690d62e6dcae94386feca74f9d7508c24981a7112ff8a519b0d2ee1f40645\",\"dweb:/ipfs/QmcF2HEPbgvB43M1WyBbUgMWqcKPirxhaWmFHKATsk7jeb\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/external-deps/openzeppelin/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf\",\"dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Logic.sol\":{\"keccak256\":\"0x481bf2cb9c4f0569115324dc52716a984f54b5b195b93138c825a93c68f410a6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d96b9d9acf89522e9c5be0db349e4ab978745c7715cd0ba3d339475be92a6b5b\",\"dweb:/ipfs/QmVgvxScaJU28yHUip8BM388iWaFhk2P7XReP1eAApMio9\"]},\"contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Storage.sol\":{\"keccak256\":\"0xee77b4e6f444c477bf11bd627193353278d5c34ca7550574733267a489686388\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://61f0cbe668f02daa0c0d9a0d33bc4dc97d707f187227877a66a067245cb031eb\",\"dweb:/ipfs/QmfB7gK45GLVeTGerhgZhwFGz5CkKg2mE9odSaBsSRapdG\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x447a21c87433c0f11252912313a96f3454629ef88cca7a4eefbb283b3ec409f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d35750fb5ced798b82b8ab085eb5f71529b0d4f72152d182b5bebdc770b20d\",\"dweb:/ipfs/QmUqmyzRZxaLvSXig87HFZgiUxv9ivc2VqfAbxEw7rx32d\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0xb11d1ade7146ac3da122e1f387ea82b0bd385d50823946c3f967dbffef3e9f4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a5fc67f024fd2d261543c52a33a2a90b96d2ea1867829e8e12fe6b89b53aee1\",\"dweb:/ipfs/QmPc3ryH7Yv4FoY14CGbaXuQVQ7iu2yrxVAtmbGrN7bscf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xfa6873a010382f62e9ffe4592b305ef6e60f55502c95ed0ffa51eb10b5200d45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86000c6885fb5a0a8bd5cd2595d302f0b4038411d66b85b07fa10590f844c2e\",\"dweb:/ipfs/QmeZuXaxdr7NH2wUAprx3BcLTke9RtcptAZgRKfQVHops5\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "claimConditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxTotalSupply",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxTotalSupplyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "restriction",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRestriction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenURIRevealed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "originContract",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "burnTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensBurnedAndClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimConditionIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "endTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "encryptedBaseURI",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensLazyMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_burnTokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "burnAndClaim"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "key",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "encryptDecrypt",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "encryptedData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveClaimConditionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBurnToClaimInfo",
          "outputs": [
            {
              "internalType": "struct IBurnToClaim.BurnToClaimInfo",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "originContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IBurnToClaim.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "mintPriceForNewToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimConditionById",
          "outputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_batchId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_key",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRevealURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "supplyClaimedByWallet",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_batchId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isEncryptedBatch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURIForTokens",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lazyMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "batchId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorRestriction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_key",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reveal",
          "outputs": [
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "struct IBurnToClaim.BurnToClaimInfo",
              "name": "_burnToClaimInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "originContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IBurnToClaim.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "mintPriceForNewToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBurnToClaimInfo"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "_conditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_maxTotalSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxTotalSupply"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_restriction",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorRestriction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalMinted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyBurnToClaim"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {ERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "burnAndClaim(uint256,uint256)": {
            "details": "Claim lazy minted after burning required tokens from origin contract."
          },
          "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "encryptDecrypt(bytes,bytes)": {
            "details": "Encrypt/decrypt given `data` with `key`. Uses inline assembly.                  See: https://ethereum.stackexchange.com/questions/69825/decrypt-message-on-chain",
            "params": {
              "data": "Bytes of data to encrypt/decrypt.",
              "key": "Secure key used by caller for encryption/decryption."
            },
            "returns": {
              "result": " Output after encryption/decryption of given data."
            }
          },
          "encryptedData(uint256)": {
            "details": "Mapping from tokenId of a batch of tokens => to delayed reveal data."
          },
          "getActiveClaimConditionId()": {
            "details": "At any given moment, returns the uid for the active claim condition."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "ID of a token."
            }
          },
          "getClaimConditionById(uint256)": {
            "details": "Returns the claim condition at the given uid."
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getRevealURI(uint256,bytes)": {
            "details": "Reveal encrypted base URI for `_batchId` with caller/admin's `_key` used for encryption.                      Reverts if there's no encrypted URI for `_batchId`.                      See {encryptDecrypt}.",
            "params": {
              "_batchId": "ID of the batch for which URI is being revealed.",
              "_key": "Secure key used by caller/admin for encryption of baseURI."
            },
            "returns": {
              "revealedURI": "Decrypted base URI."
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getSupplyClaimedByWallet(uint256,address)": {
            "details": "Returns the supply claimed by claimer for a given conditionId."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isEncryptedBatch(uint256)": {
            "details": "Returns `true` if `_batchId`'s base URI is encrypted.",
            "params": {
              "_batchId": "ID of a batch of NFTs."
            }
          },
          "lazyMint(uint256,string,bytes)": {
            "details": "Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."
          },
          "maxTotalSupply()": {
            "details": "Global max total supply of NFTs."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "nextTokenIdToClaim()": {
            "details": "The next token ID of the NFT that can be claimed."
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "reveal(uint256,bytes)": {
            "details": "Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs."
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {ERC721-setApprovalForAll}."
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setMaxTotalSupply(uint256)": {
            "details": "Lets a contract admin set the global maximum supply for collection's NFTs."
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.",
            "params": {
              "_platformFeeBps": "Updated platformFeeBps.",
              "_platformFeeRecipient": "Address to be set as new platformFeeRecipient."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "totalSupply()": {
            "details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {ERC721-_transferFrom}."
          },
          "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "encryptDecrypt(bytes,bytes)": {
            "notice": "Encrypt/decrypt data on chain."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens the given tokenId belongs to."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRevealURI(uint256,bytes)": {
            "notice": "Returns revealed URI for a batch of NFTs."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "isEncryptedBatch(uint256)": {
            "notice": "Returns whether the relvant batch of NFTs is subject to a delayed reveal."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "notice": "Updates the platform fee recipient and bps."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "totalMinted()": {
            "notice": "Returns the total amount of tokens minted in the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Logic.sol": "BurnToClaimDrop721Logic"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/ERC165.sol": {
        "keccak256": "0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b",
        "urls": [
          "bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c",
          "dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr"
        ],
        "license": "MIT"
      },
      "contracts/eip/ERC721AUpgradeable.sol": {
        "keccak256": "0xb00aafcce4733231e61e5979c0bcd35f58930f97c874815fc5bb8af1ff3a58f8",
        "urls": [
          "bzz-raw://1092eeb12450e33fb09e6d9085893db82c58391ff7ab5cc868ecf5f1b50296ad",
          "dweb:/ipfs/QmepmNS3ChsEiR25sTc8otjdKthRrKKs7k1UY7VpPieafu"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e",
        "urls": [
          "bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552",
          "dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721A.sol": {
        "keccak256": "0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd",
        "urls": [
          "bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8",
          "dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721Metadata.sol": {
        "keccak256": "0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb",
        "urls": [
          "bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e",
          "dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IBurnToClaim.sol": {
        "keccak256": "0xb32af29a3f6b880bb33ff48e776a8c4853a8ae80a780895c65699d3cf208cee6",
        "urls": [
          "bzz-raw://2dc8839ca321abccde27dab049355e56daf5b90a164190262dfe1a4f624d3603",
          "dweb:/ipfs/Qmc969VggsLkDNZaKbvLwhKEi5XwZekv7UVYDyYDQ8mxKg"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimConditionMultiPhase.sol": {
        "keccak256": "0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa",
        "urls": [
          "bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125",
          "dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDelayedReveal.sol": {
        "keccak256": "0xbbe98263ebce49f81cb42f8bf1e7e631afd81cda73be79b907e81a2f54fd2123",
        "urls": [
          "bzz-raw://76913c2086e309c97ac0d5be72bbe23e66fe35e231c75318993c14e6aa4c0138",
          "dweb:/ipfs/QmXwr49U275Cam8x9mYcNdcCmZHUYuBge3CtFPkBkEMzL4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDrop.sol": {
        "keccak256": "0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad",
        "urls": [
          "bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093",
          "dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IERC2771Context.sol": {
        "keccak256": "0x47c68c2b49d42008eb5fe42cf7cde539c380c37fc58927ca65711f846da28ca1",
        "urls": [
          "bzz-raw://e8a91fd4dd913f5d26dd9594c8159324efe2a3530e92d8d27753e61db5b1dc41",
          "dweb:/ipfs/QmZUgkaF894U6EK1wnNiLnGmEa7fJoVkhagAiAkxwRdAnp"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ILazyMint.sol": {
        "keccak256": "0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec",
        "urls": [
          "bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3",
          "dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IOperatorFilterRegistry.sol": {
        "keccak256": "0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da",
        "urls": [
          "bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34",
          "dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOperatorFilterToggle.sol": {
        "keccak256": "0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1",
        "urls": [
          "bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674",
          "dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/BatchMintMetadata.sol": {
        "keccak256": "0x6c7000dfcf8875c4416962d69c299729c6197171f4d94e5d461b444cdf3cbad3",
        "urls": [
          "bzz-raw://85f630b78bc12c085e603a3aa8aeb39b9a58e0023f0ecdd5d968a378a3294f06",
          "dweb:/ipfs/QmYk9EaaENCFf3vpcQCfmDrREfsTXuVCeHBegDLivCteCH"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/BurnToClaim.sol": {
        "keccak256": "0x83e36dc7a38a390294981ed5ce51fb4d04480cbc4b2df9364adb36e662d8b726",
        "urls": [
          "bzz-raw://d1ab92f4aae89b9b83a0509ec1e78a2904d007ac9024dce50c3faad9342d5cb3",
          "dweb:/ipfs/QmRRXc1sRM9Z6BNoED3jCmxBBY1Qi5GLN3gfPC3xSC9b8t"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/ContractMetadata.sol": {
        "keccak256": "0x93f8793291ab833930046db54aefb97749a2a59b35eb64e2a765c565dd7d553c",
        "urls": [
          "bzz-raw://39827a9ffd5a684607a43ea3591d46ce4a256b7a73851d10cc90d898bc3b9463",
          "dweb:/ipfs/QmSt8AmxU8BLCmn1suJo4Q5nPjT77LXqkCvVwii3uahCWr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/DefaultOperatorFiltererUpgradeable.sol": {
        "keccak256": "0x62d82883047991b642ca56b5f01ac39b6b5ea64e26b23ad1efaecc02e1d88701",
        "urls": [
          "bzz-raw://693cd425f20f33302dc9fce35defde61b04435d54b911fa0024992792093f3d8",
          "dweb:/ipfs/QmejQhQnRbb2XQjuh2x4PREXgT43hJtqkCfdka9GtHHxeQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/upgradeable/DelayedReveal.sol": {
        "keccak256": "0x3d634a8df995df00ae4e8738335680b81293400fafb6a1d271d7ef4cac0e0962",
        "urls": [
          "bzz-raw://65aa65e9d01072496c281b1750eb37181a777f231c0b49a0e9638e2a02a608a7",
          "dweb:/ipfs/QmYKPpWL4UHCRabuvTaJnxEQpzUPszA54U4MQju1ApwzXK"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Drop.sol": {
        "keccak256": "0x0dbdcec17c40baace8ebbe237375e9bdf6298a1df8da8d071ab726717079c4ee",
        "urls": [
          "bzz-raw://94606f26302ed760d44171de5f6c08f10fec8badd8b04d090f269d91e35079ac",
          "dweb:/ipfs/QmdCA8WontjNe8heQLDd6U3z56UondSvzFT92UdYP7KUVE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xc97fe90c0e0817bca6647eee3339520c1b760601aca440b8ca8fc4cd152cd8a8",
        "urls": [
          "bzz-raw://3754795c9fd39d8c901ae0020f381df09d2f19a0695a65e218943181f247fa52",
          "dweb:/ipfs/QmUdia1Sy6mYKFY9dsEPEKBKp8bbetbZFVU56XTK4L2gok"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/upgradeable/Initializable.sol": {
        "keccak256": "0x1679b562e7e9d9b5fa34abf9671cd4ada7bbc7f0f40bcf18fb8e05bf88962685",
        "urls": [
          "bzz-raw://d97aac4f1dd707f1c3440c1614bc9aea4b0ef138bcb236d99632585341fcfd0d",
          "dweb:/ipfs/QmNyQ5giiw4sUUCxoNR23D6BQuGL3qpvThWsErZpTnLD1d"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/upgradeable/LazyMint.sol": {
        "keccak256": "0x2d0abaf6788ddcd8d2c9dadcfdbdeaa9925cb2507eee6c305983774e12dc6ffe",
        "urls": [
          "bzz-raw://ace4f792167819ce69ee9a23c78c2f3d34348fc163c72ea823bbbbebfe4e5b2c",
          "dweb:/ipfs/QmYdoH4V3Yd6D4NNYguhF2Nk4h8GZYQikmhLSCHn3X9pTu"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/OperatorFilterToggle.sol": {
        "keccak256": "0x38252e6b114e8f07664df699c58e8e6ac5513029e2bbe111d257febea7f6be08",
        "urls": [
          "bzz-raw://cc3fc15c333e45e8326f3061a9aab1b92f6ceedff10a19d96a81592c187bbb68",
          "dweb:/ipfs/QmQu7vDGWhHYstd3fT1uuxXt3MrAcKgZykrFnM5Rr26bq5"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/upgradeable/OperatorFiltererUpgradeable.sol": {
        "keccak256": "0xd61fcfc393829522476ebc3da6d6a18ea7ad92fdd7b4836dadbacc9dc31ca1bd",
        "urls": [
          "bzz-raw://df6801d86b2e91bda66589f1c14d51738d13a231d41e3255da59661ad1df51dc",
          "dweb:/ipfs/QmZP68PQt8sZZz1SPaGg25AjixHrwXYnoDHFCcm6XN7y5Q"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/upgradeable/Ownable.sol": {
        "keccak256": "0xab380d057f59ff2dcf3df8d8f8d62085217402da2e78dcfe703c8fd6c5ebccd2",
        "urls": [
          "bzz-raw://e0ef120b373cc819f4aa0443897c19c036b1ad787a58a69deafcfdb14d74b865",
          "dweb:/ipfs/QmdmazJLCUsGC4pru4165V1Vc3WbSG5qbL9ZfGgab4q46n"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Permissions.sol": {
        "keccak256": "0x4fd1e41f24b6c2a04c47f6fd5d6a6a8bf7f72b813cbc202fcf01ce70977a87df",
        "urls": [
          "bzz-raw://00b8f085918fe25fcf41c0f8c9e1c94e54337dcaeefe7708dd793e4a7cfb64f6",
          "dweb:/ipfs/QmYDnhfxd4561bPH2M3sHWSYk5fqXxHqxwmFCANiP9aR88"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/PlatformFee.sol": {
        "keccak256": "0x58261d3c9629d5227979229b48aeb1d2e2a85cd6f851dc26267b893b125716a3",
        "urls": [
          "bzz-raw://d3206283d84cf7894d64f25ec1555222355a5761f4745ff61fba94486381f67b",
          "dweb:/ipfs/QmNrV54Nx7Kv37zxhAiE9axcRxygG7E3oiUSu7RpLeHMEZ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/PrimarySale.sol": {
        "keccak256": "0xdedcef434e7c5b35760fcdf6dd6fc5ec809c46dc96a10319a78394d88f3c2e37",
        "urls": [
          "bzz-raw://bce298da5b366496aa3a9bb791eee639be2fb90992404ab32ebade09af077a62",
          "dweb:/ipfs/QmQE4zXBFkLoPVujKLPJVJNVLKShoqGadqERKZ2naW4Ae1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Royalty.sol": {
        "keccak256": "0x741592aa926cbfe9a86b5e12166c09061b9c84d9c1b9bd0086743f3511b9e69f",
        "urls": [
          "bzz-raw://386690d62e6dcae94386feca74f9d7508c24981a7112ff8a519b0d2ee1f40645",
          "dweb:/ipfs/QmcF2HEPbgvB43M1WyBbUgMWqcKPirxhaWmFHKATsk7jeb"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0",
        "urls": [
          "bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf",
          "dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Logic.sol": {
        "keccak256": "0x481bf2cb9c4f0569115324dc52716a984f54b5b195b93138c825a93c68f410a6",
        "urls": [
          "bzz-raw://d96b9d9acf89522e9c5be0db349e4ab978745c7715cd0ba3d339475be92a6b5b",
          "dweb:/ipfs/QmVgvxScaJU28yHUip8BM388iWaFhk2P7XReP1eAApMio9"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Storage.sol": {
        "keccak256": "0xee77b4e6f444c477bf11bd627193353278d5c34ca7550574733267a489686388",
        "urls": [
          "bzz-raw://61f0cbe668f02daa0c0d9a0d33bc4dc97d707f187227877a66a067245cb031eb",
          "dweb:/ipfs/QmfB7gK45GLVeTGerhgZhwFGz5CkKg2mE9odSaBsSRapdG"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol": {
        "keccak256": "0x447a21c87433c0f11252912313a96f3454629ef88cca7a4eefbb283b3ec409f9",
        "urls": [
          "bzz-raw://67d35750fb5ced798b82b8ab085eb5f71529b0d4f72152d182b5bebdc770b20d",
          "dweb:/ipfs/QmUqmyzRZxaLvSXig87HFZgiUxv9ivc2VqfAbxEw7rx32d"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
        "keccak256": "0xb11d1ade7146ac3da122e1f387ea82b0bd385d50823946c3f967dbffef3e9f4f",
        "urls": [
          "bzz-raw://0a5fc67f024fd2d261543c52a33a2a90b96d2ea1867829e8e12fe6b89b53aee1",
          "dweb:/ipfs/QmPc3ryH7Yv4FoY14CGbaXuQVQ7iu2yrxVAtmbGrN7bscf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
        "keccak256": "0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574",
        "urls": [
          "bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797",
          "dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e",
        "urls": [
          "bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea",
          "dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f",
        "urls": [
          "bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f",
          "dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
        "keccak256": "0xfa6873a010382f62e9ffe4592b305ef6e60f55502c95ed0ffa51eb10b5200d45",
        "urls": [
          "bzz-raw://f86000c6885fb5a0a8bd5cd2595d302f0b4038411d66b85b07fa10590f844c2e",
          "dweb:/ipfs/QmeZuXaxdr7NH2wUAprx3BcLTke9RtcptAZgRKfQVHops5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Logic.sol",
    "id": 100637,
    "exportedSymbols": {
      "BurnToClaim": [
        39418
      ],
      "BurnToClaimDrop721Logic": [
        100636
      ],
      "BurnToClaimDrop721Storage": [
        100660
      ],
      "BurnToClaimStorage": [
        39224
      ],
      "Context": [
        49119
      ],
      "ContractMetadata": [
        39526
      ],
      "CurrencyTransferLib": [
        64276
      ],
      "DefaultOperatorFiltererUpgradeable": [
        39550
      ],
      "DelayedReveal": [
        39782
      ],
      "Drop": [
        40552
      ],
      "ERC2771ContextUpgradeable": [
        40843
      ],
      "ERC721AStorage": [
        10109
      ],
      "ERC721AUpgradeable": [
        11709
      ],
      "IERC165": [
        14687
      ],
      "IERC20": [
        14757
      ],
      "IERC2771Context": [
        33568
      ],
      "IERC2981": [
        14831
      ],
      "IWETH": [
        55953
      ],
      "LazyMint": [
        41220
      ],
      "Ownable": [
        41616
      ],
      "PermissionsStorage": [
        41652
      ],
      "PlatformFee": [
        42603
      ],
      "PrimarySale": [
        42704
      ],
      "Royalty": [
        43092
      ],
      "SafeERC20": [
        49005
      ],
      "TWAddress": [
        64850
      ],
      "TWStrings": [
        65550
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:16770:381",
    "nodes": [
      {
        "id": 99578,
        "nodeType": "PragmaDirective",
        "src": "39:24:381",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 99580,
        "nodeType": "ImportDirective",
        "src": "727:76:381",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Storage.sol",
        "file": "./BurnToClaimDrop721Storage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100637,
        "sourceUnit": 100661,
        "symbolAliases": [
          {
            "foreign": {
              "id": 99579,
              "name": "BurnToClaimDrop721Storage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 100660,
              "src": "736:25:381",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_BurnToClaimDrop721Storage_$100660_$",
                "typeString": "type(library BurnToClaimDrop721Storage)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 99581,
        "nodeType": "ImportDirective",
        "src": "805:39:381",
        "nodes": [],
        "absolutePath": "contracts/lib/TWStrings.sol",
        "file": "../../../../lib/TWStrings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100637,
        "sourceUnit": 65551,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99582,
        "nodeType": "ImportDirective",
        "src": "845:49:381",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100637,
        "sourceUnit": 64277,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99584,
        "nodeType": "ImportDirective",
        "src": "896:66:381",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC2981.sol",
        "file": "../../../../eip/interface/IERC2981.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100637,
        "sourceUnit": 14832,
        "symbolAliases": [
          {
            "foreign": {
              "id": 99583,
              "name": "IERC2981",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14831,
              "src": "905:8:381",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IERC2981_$14831_$",
                "typeString": "type(contract IERC2981)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 99588,
        "nodeType": "ImportDirective",
        "src": "963:101:381",
        "nodes": [],
        "absolutePath": "contracts/eip/ERC721AUpgradeable.sol",
        "file": "../../../../eip/ERC721AUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100637,
        "sourceUnit": 11710,
        "symbolAliases": [
          {
            "foreign": {
              "id": 99585,
              "name": "Context",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49119,
              "src": "972:7:381",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Context_$49119_$",
                "typeString": "type(contract Context)"
              }
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 99586,
              "name": "ERC721AUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11709,
              "src": "981:18:381",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ERC721AUpgradeable_$11709_$",
                "typeString": "type(contract ERC721AUpgradeable)"
              }
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 99587,
              "name": "ERC721AStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10109,
              "src": "1001:14:381",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ERC721AStorage_$10109_$",
                "typeString": "type(library ERC721AStorage)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 99590,
        "nodeType": "ImportDirective",
        "src": "1066:86:381",
        "nodes": [],
        "absolutePath": "contracts/extension/interface/IERC2771Context.sol",
        "file": "../../../../extension/interface/IERC2771Context.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100637,
        "sourceUnit": 33569,
        "symbolAliases": [
          {
            "foreign": {
              "id": 99589,
              "name": "IERC2771Context",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33568,
              "src": "1075:15:381",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IERC2771Context_$33568_$",
                "typeString": "type(contract IERC2771Context)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 99592,
        "nodeType": "ImportDirective",
        "src": "1154:108:381",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/ERC2771ContextUpgradeable.sol",
        "file": "../../../../extension/upgradeable/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100637,
        "sourceUnit": 40844,
        "symbolAliases": [
          {
            "foreign": {
              "id": 99591,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40843,
              "src": "1163:25:381",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$40843_$",
                "typeString": "type(contract ERC2771ContextUpgradeable)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 99594,
        "nodeType": "ImportDirective",
        "src": "1263:84:381",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/DelayedReveal.sol",
        "file": "../../../../extension/upgradeable/DelayedReveal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100637,
        "sourceUnit": 39783,
        "symbolAliases": [
          {
            "foreign": {
              "id": 99593,
              "name": "DelayedReveal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39782,
              "src": "1272:13:381",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_DelayedReveal_$39782_$",
                "typeString": "type(contract DelayedReveal)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 99596,
        "nodeType": "ImportDirective",
        "src": "1348:80:381",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/PrimarySale.sol",
        "file": "../../../../extension/upgradeable/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100637,
        "sourceUnit": 42705,
        "symbolAliases": [
          {
            "foreign": {
              "id": 99595,
              "name": "PrimarySale",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42704,
              "src": "1357:11:381",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_PrimarySale_$42704_$",
                "typeString": "type(contract PrimarySale)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 99598,
        "nodeType": "ImportDirective",
        "src": "1429:80:381",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/PlatformFee.sol",
        "file": "../../../../extension/upgradeable/PlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100637,
        "sourceUnit": 42604,
        "symbolAliases": [
          {
            "foreign": {
              "id": 99597,
              "name": "PlatformFee",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42603,
              "src": "1438:11:381",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_PlatformFee_$42603_$",
                "typeString": "type(contract PlatformFee)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 99601,
        "nodeType": "ImportDirective",
        "src": "1510:81:381",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Royalty.sol",
        "file": "../../../../extension/upgradeable/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100637,
        "sourceUnit": 43093,
        "symbolAliases": [
          {
            "foreign": {
              "id": 99599,
              "name": "Royalty",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43092,
              "src": "1519:7:381",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Royalty_$43092_$",
                "typeString": "type(contract Royalty)"
              }
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 99600,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14687,
              "src": "1528:7:381",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IERC165_$14687_$",
                "typeString": "type(contract IERC165)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 99603,
        "nodeType": "ImportDirective",
        "src": "1592:74:381",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/LazyMint.sol",
        "file": "../../../../extension/upgradeable/LazyMint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100637,
        "sourceUnit": 41221,
        "symbolAliases": [
          {
            "foreign": {
              "id": 99602,
              "name": "LazyMint",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41220,
              "src": "1601:8:381",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_LazyMint_$41220_$",
                "typeString": "type(contract LazyMint)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 99605,
        "nodeType": "ImportDirective",
        "src": "1667:66:381",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Drop.sol",
        "file": "../../../../extension/upgradeable/Drop.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100637,
        "sourceUnit": 40553,
        "symbolAliases": [
          {
            "foreign": {
              "id": 99604,
              "name": "Drop",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40552,
              "src": "1676:4:381",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Drop_$40552_$",
                "typeString": "type(contract Drop)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 99607,
        "nodeType": "ImportDirective",
        "src": "1734:90:381",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/ContractMetadata.sol",
        "file": "../../../../extension/upgradeable/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100637,
        "sourceUnit": 39527,
        "symbolAliases": [
          {
            "foreign": {
              "id": 99606,
              "name": "ContractMetadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39526,
              "src": "1743:16:381",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ContractMetadata_$39526_$",
                "typeString": "type(contract ContractMetadata)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 99609,
        "nodeType": "ImportDirective",
        "src": "1825:72:381",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Ownable.sol",
        "file": "../../../../extension/upgradeable/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100637,
        "sourceUnit": 41617,
        "symbolAliases": [
          {
            "foreign": {
              "id": 99608,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41616,
              "src": "1834:7:381",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Ownable_$41616_$",
                "typeString": "type(contract Ownable)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 99611,
        "nodeType": "ImportDirective",
        "src": "1898:126:381",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/DefaultOperatorFiltererUpgradeable.sol",
        "file": "../../../../extension/upgradeable/DefaultOperatorFiltererUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100637,
        "sourceUnit": 39551,
        "symbolAliases": [
          {
            "foreign": {
              "id": 99610,
              "name": "DefaultOperatorFiltererUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39550,
              "src": "1907:34:381",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_DefaultOperatorFiltererUpgradeable_$39550_$",
                "typeString": "type(contract DefaultOperatorFiltererUpgradeable)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 99613,
        "nodeType": "ImportDirective",
        "src": "2025:87:381",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Permissions.sol",
        "file": "../../../../extension/upgradeable/Permissions.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100637,
        "sourceUnit": 42096,
        "symbolAliases": [
          {
            "foreign": {
              "id": 99612,
              "name": "PermissionsStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41652,
              "src": "2034:18:381",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_PermissionsStorage_$41652_$",
                "typeString": "type(library PermissionsStorage)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 99616,
        "nodeType": "ImportDirective",
        "src": "2113:100:381",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/BurnToClaim.sol",
        "file": "../../../../extension/upgradeable/BurnToClaim.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100637,
        "sourceUnit": 39419,
        "symbolAliases": [
          {
            "foreign": {
              "id": 99614,
              "name": "BurnToClaim",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39418,
              "src": "2122:11:381",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_BurnToClaim_$39418_$",
                "typeString": "type(contract BurnToClaim)"
              }
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 99615,
              "name": "BurnToClaimStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39224,
              "src": "2135:18:381",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_BurnToClaimStorage_$39224_$",
                "typeString": "type(library BurnToClaimStorage)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100636,
        "nodeType": "ContractDefinition",
        "src": "2215:14593:381",
        "nodes": [
          {
            "id": 99643,
            "nodeType": "UsingForDirective",
            "src": "2493:28:381",
            "nodes": [],
            "libraryName": {
              "id": 99641,
              "name": "TWStrings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 65550,
              "src": "2499:9:381"
            },
            "typeName": {
              "id": 99642,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2513:7:381",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 99647,
            "nodeType": "VariableDeclaration",
            "src": "2811:50:381",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 99644,
              "nodeType": "StructuredDocumentation",
              "src": "2705:101:381",
              "text": "@dev Default admin role for all roles. Only accounts with this role can grant/revoke other roles."
            },
            "mutability": "constant",
            "name": "DEFAULT_ADMIN_ROLE",
            "nameLocation": "2836:18:381",
            "scope": 100636,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 99645,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2811:7:381",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "30783030",
              "id": 99646,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2857:4:381",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0x00"
            },
            "visibility": "private"
          },
          {
            "id": 99653,
            "nodeType": "VariableDeclaration",
            "src": "2970:67:381",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 99648,
              "nodeType": "StructuredDocumentation",
              "src": "2867:98:381",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "constant",
            "name": "TRANSFER_ROLE",
            "nameLocation": "2995:13:381",
            "scope": 100636,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 99649,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2970:7:381",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5452414e534645525f524f4c45",
                  "id": 99651,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3021:15:381",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  },
                  "value": "TRANSFER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  }
                ],
                "id": 99650,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "3011:9:381",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 99652,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3011:26:381",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 99659,
            "nodeType": "VariableDeclaration",
            "src": "3134:63:381",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 99654,
              "nodeType": "StructuredDocumentation",
              "src": "3043:86:381",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens."
            },
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "3159:11:381",
            "scope": 100636,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 99655,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3134:7:381",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 99657,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3183:13:381",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 99656,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "3173:9:381",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 99658,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3173:24:381",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 99665,
            "nodeType": "VariableDeclaration",
            "src": "3326:67:381",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 99660,
              "nodeType": "StructuredDocumentation",
              "src": "3203:118:381",
              "text": "@dev Only transfers initiated by operator role hodlers are valid, when operator-initated transfers are restricted."
            },
            "mutability": "constant",
            "name": "OPERATOR_ROLE",
            "nameLocation": "3351:13:381",
            "scope": 100636,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 99661,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3326:7:381",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4f50455241544f525f524f4c45",
                  "id": 99663,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3377:15:381",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
                    "typeString": "literal_string \"OPERATOR_ROLE\""
                  },
                  "value": "OPERATOR_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
                    "typeString": "literal_string \"OPERATOR_ROLE\""
                  }
                ],
                "id": 99662,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "3367:9:381",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 99664,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3367:26:381",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 99669,
            "nodeType": "VariableDeclaration",
            "src": "3445:41:381",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 99666,
              "nodeType": "StructuredDocumentation",
              "src": "3400:40:381",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "3470:7:381",
            "scope": 100636,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 99667,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3445:7:381",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 99668,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3480:6:381",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 99674,
            "nodeType": "EventDefinition",
            "src": "3742:52:381",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 99670,
              "nodeType": "StructuredDocumentation",
              "src": "3672:65:381",
              "text": "@dev Emitted when the global max supply of tokens is updated."
            },
            "name": "MaxTotalSupplyUpdated",
            "nameLocation": "3748:21:381",
            "parameters": {
              "id": 99673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99672,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "maxTotalSupply",
                  "nameLocation": "3778:14:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 99674,
                  "src": "3770:22:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3770:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3769:24:381"
            }
          },
          {
            "id": 99722,
            "nodeType": "FunctionDefinition",
            "src": "4041:402:381",
            "nodes": [],
            "body": {
              "id": 99721,
              "nodeType": "Block",
              "src": "4122:321:381",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99684,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99684,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "4141:7:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 99721,
                      "src": "4133:15:381",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99683,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4133:7:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 99688,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 99686,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99677,
                        "src": "4166:8:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99685,
                      "name": "_getBatchId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39054,
                      "src": "4154:11:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 99687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4154:21:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4132:43:381"
                },
                {
                  "assignments": [
                    99690
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99690,
                      "mutability": "mutable",
                      "name": "batchUri",
                      "nameLocation": "4199:8:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 99721,
                      "src": "4185:22:381",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 99689,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4185:6:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99694,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 99692,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99677,
                        "src": "4222:8:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99691,
                      "name": "_getBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39116,
                      "src": "4210:11:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 99693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4210:21:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4185:46:381"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 99696,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99684,
                        "src": "4263:7:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99695,
                      "name": "isEncryptedBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39781,
                      "src": "4246:16:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 99697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4246:25:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 99719,
                    "nodeType": "Block",
                    "src": "4350:87:381",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 99712,
                                  "name": "batchUri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99690,
                                  "src": "4395:8:381",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 99713,
                                      "name": "_tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 99677,
                                      "src": "4405:8:381",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 99714,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 65432,
                                    "src": "4405:17:381",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 99715,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4405:19:381",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 99710,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4378:3:381",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 99711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4378:16:381",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 99716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4378:47:381",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 99709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4371:6:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 99708,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "4371:6:381",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 99717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4371:55:381",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 99682,
                        "id": 99718,
                        "nodeType": "Return",
                        "src": "4364:62:381"
                      }
                    ]
                  },
                  "id": 99720,
                  "nodeType": "IfStatement",
                  "src": "4242:195:381",
                  "trueBody": {
                    "id": 99707,
                    "nodeType": "Block",
                    "src": "4273:71:381",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 99702,
                                  "name": "batchUri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99690,
                                  "src": "4318:8:381",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 99703,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4328:3:381",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  }
                                ],
                                "expression": {
                                  "id": 99700,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4301:3:381",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 99701,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4301:16:381",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 99704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4301:31:381",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 99699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4294:6:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 99698,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "4294:6:381",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 99705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4294:39:381",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 99682,
                        "id": 99706,
                        "nodeType": "Return",
                        "src": "4287:46:381"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              10593
            ],
            "documentation": {
              "id": 99675,
              "nodeType": "StructuredDocumentation",
              "src": "3991:45:381",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "4050:8:381",
            "overrides": {
              "id": 99679,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4089:8:381"
            },
            "parameters": {
              "id": 99678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99677,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4067:8:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 99722,
                  "src": "4059:16:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4059:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4058:18:381"
            },
            "returnParameters": {
              "id": 99682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99681,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99722,
                  "src": "4107:13:381",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 99680,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4107:6:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4106:15:381"
            },
            "scope": 100636,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99746,
            "nodeType": "FunctionDefinition",
            "src": "4474:269:381",
            "nodes": [],
            "body": {
              "id": 99745,
              "nodeType": "Block",
              "src": "4638:105:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 99743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 99735,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99725,
                          "src": "4679:11:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 99733,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4655:5:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$100636_$",
                            "typeString": "type(contract super BurnToClaimDrop721Logic)"
                          }
                        },
                        "id": 99734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10266,
                        "src": "4655:23:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 99736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4655:36:381",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 99742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 99738,
                              "name": "IERC2981",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14831,
                              "src": "4700:8:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$14831_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$14831_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            ],
                            "id": 99737,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4695:4:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 99739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4695:14:381",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981_$14831",
                            "typeString": "type(contract IERC2981)"
                          }
                        },
                        "id": 99740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4695:26:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 99741,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99725,
                        "src": "4725:11:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4695:41:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4655:81:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99732,
                  "id": 99744,
                  "nodeType": "Return",
                  "src": "4648:88:381"
                }
              ]
            },
            "baseFunctions": [
              10266,
              14686
            ],
            "documentation": {
              "id": 99723,
              "nodeType": "StructuredDocumentation",
              "src": "4449:20:381",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4483:17:381",
            "overrides": {
              "id": 99729,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 99727,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11709,
                  "src": "4582:18:381"
                },
                {
                  "id": 99728,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14687,
                  "src": "4602:7:381"
                }
              ],
              "src": "4573:37:381"
            },
            "parameters": {
              "id": 99726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99725,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4508:11:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 99746,
                  "src": "4501:18:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 99724,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4501:6:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4500:20:381"
            },
            "returnParameters": {
              "id": 99732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99731,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99746,
                  "src": "4628:4:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99730,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4628:4:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4627:6:381"
            },
            "scope": 100636,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 99809,
            "nodeType": "FunctionDefinition",
            "src": "5117:575:381",
            "nodes": [],
            "body": {
              "id": 99808,
              "nodeType": "Block",
              "src": "5281:411:381",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99760,
                      "mutability": "mutable",
                      "name": "nextId",
                      "nameLocation": "5299:6:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 99808,
                      "src": "5291:14:381",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99759,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5291:7:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99763,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 99761,
                      "name": "nextTokenIdToLazyMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41142,
                      "src": "5308:21:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 99762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5308:23:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5291:40:381"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 99767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 99764,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99753,
                        "src": "5345:5:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 99765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5345:12:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 99766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5360:1:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5345:16:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 99800,
                  "nodeType": "IfStatement",
                  "src": "5341:278:381",
                  "trueBody": {
                    "id": 99799,
                    "nodeType": "Block",
                    "src": "5363:256:381",
                    "statements": [
                      {
                        "assignments": [
                          99769,
                          99771
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 99769,
                            "mutability": "mutable",
                            "name": "encryptedURI",
                            "nameLocation": "5391:12:381",
                            "nodeType": "VariableDeclaration",
                            "scope": 99799,
                            "src": "5378:25:381",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 99768,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5378:5:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 99771,
                            "mutability": "mutable",
                            "name": "provenanceHash",
                            "nameLocation": "5413:14:381",
                            "nodeType": "VariableDeclaration",
                            "scope": 99799,
                            "src": "5405:22:381",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 99770,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5405:7:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 99781,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 99774,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99753,
                              "src": "5442:5:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 99776,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5450:5:381",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 99775,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5450:5:381",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 99778,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5457:7:381",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 99777,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5457:7:381",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 99779,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5449:16:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes storage pointer),type(bytes32))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes storage pointer),type(bytes32))"
                              }
                            ],
                            "expression": {
                              "id": 99772,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5431:3:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 99773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "5431:10:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 99780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5431:35:381",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$",
                            "typeString": "tuple(bytes memory,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5377:89:381"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 99789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 99785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 99782,
                                "name": "encryptedURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99769,
                                "src": "5484:12:381",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 99783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "5484:19:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 99784,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5507:1:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5484:24:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 99788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 99786,
                              "name": "provenanceHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99771,
                              "src": "5512:14:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "",
                              "id": 99787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5530:2:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            "src": "5512:20:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5484:48:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 99798,
                        "nodeType": "IfStatement",
                        "src": "5480:129:381",
                        "trueBody": {
                          "id": 99797,
                          "nodeType": "Block",
                          "src": "5534:75:381",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 99793,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 99791,
                                      "name": "nextId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 99760,
                                      "src": "5570:6:381",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 99792,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 99749,
                                      "src": "5579:7:381",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5570:16:381",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 99794,
                                    "name": "_data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 99753,
                                    "src": "5588:5:381",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 99790,
                                  "name": "_setEncryptedData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39629,
                                  "src": "5552:17:381",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,bytes memory)"
                                  }
                                },
                                "id": 99795,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5552:42:381",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 99796,
                              "nodeType": "ExpressionStatement",
                              "src": "5552:42:381"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99803,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99749,
                        "src": "5651:7:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 99804,
                        "name": "_baseURIForTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99751,
                        "src": "5660:17:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 99805,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99753,
                        "src": "5679:5:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 99801,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "5636:5:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$100636_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 99802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lazyMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41213,
                      "src": "5636:14:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,string calldata,bytes calldata) returns (uint256)"
                      }
                    },
                    "id": 99806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5636:49:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 99758,
                  "id": 99807,
                  "nodeType": "Return",
                  "src": "5629:56:381"
                }
              ]
            },
            "baseFunctions": [
              41213
            ],
            "documentation": {
              "id": 99747,
              "nodeType": "StructuredDocumentation",
              "src": "4945:167:381",
              "text": "  @dev Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.\n       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."
            },
            "functionSelector": "d37c353b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lazyMint",
            "nameLocation": "5126:8:381",
            "overrides": {
              "id": 99755,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5246:8:381"
            },
            "parameters": {
              "id": 99754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99749,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5152:7:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 99809,
                  "src": "5144:15:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5144:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99751,
                  "mutability": "mutable",
                  "name": "_baseURIForTokens",
                  "nameLocation": "5185:17:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 99809,
                  "src": "5169:33:381",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 99750,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5169:6:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99753,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5227:5:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 99809,
                  "src": "5212:20:381",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 99752,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5212:5:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5134:104:381"
            },
            "returnParameters": {
              "id": 99758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99757,
                  "mutability": "mutable",
                  "name": "batchId",
                  "nameLocation": "5272:7:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 99809,
                  "src": "5264:15:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5264:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5263:17:381"
            },
            "scope": 100636,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99857,
            "nodeType": "FunctionDefinition",
            "src": "5799:415:381",
            "nodes": [],
            "body": {
              "id": 99856,
              "nodeType": "Block",
              "src": "5897:317:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 99821,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99659,
                            "src": "5924:11:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 99822,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                100622
                              ],
                              "referencedDeclaration": 100622,
                              "src": "5937:10:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 99823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5937:12:381",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 99820,
                          "name": "_hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100599,
                          "src": "5915:8:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 99824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5915:35:381",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206d696e7465722e",
                        "id": 99825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5952:13:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef3ba029e0c0ab4a73c06188e1050a612d65341c83aa83d5839a5156e5f7b497",
                          "typeString": "literal_string \"not minter.\""
                        },
                        "value": "not minter."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef3ba029e0c0ab4a73c06188e1050a612d65341c83aa83d5839a5156e5f7b497",
                          "typeString": "literal_string \"not minter.\""
                        }
                      ],
                      "id": 99819,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5907:7:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 99826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5907:59:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99827,
                  "nodeType": "ExpressionStatement",
                  "src": "5907:59:381"
                },
                {
                  "assignments": [
                    99829
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99829,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "5984:7:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 99856,
                      "src": "5976:15:381",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99828,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5976:7:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99833,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 99831,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99812,
                        "src": "6012:6:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99830,
                      "name": "getBatchIdAtIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38983,
                      "src": "5994:17:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 99832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5994:25:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5976:43:381"
                },
                {
                  "expression": {
                    "id": 99839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99834,
                      "name": "revealedURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99817,
                      "src": "6029:11:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 99836,
                          "name": "batchId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99829,
                          "src": "6056:7:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 99837,
                          "name": "_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99814,
                          "src": "6065:4:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 99835,
                        "name": "getRevealURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39705,
                        "src": "6043:12:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (uint256,bytes calldata) view returns (string memory)"
                        }
                      },
                      "id": 99838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6043:27:381",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6029:41:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 99840,
                  "nodeType": "ExpressionStatement",
                  "src": "6029:41:381"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99842,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99829,
                        "src": "6099:7:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 99843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6108:2:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 99841,
                      "name": "_setEncryptedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39629,
                      "src": "6081:17:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 99844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6081:30:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99845,
                  "nodeType": "ExpressionStatement",
                  "src": "6081:30:381"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99847,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99829,
                        "src": "6133:7:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 99848,
                        "name": "revealedURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99817,
                        "src": "6142:11:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 99846,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39142,
                      "src": "6121:11:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 99849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6121:33:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99850,
                  "nodeType": "ExpressionStatement",
                  "src": "6121:33:381"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 99852,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99812,
                        "src": "6187:6:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 99853,
                        "name": "revealedURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99817,
                        "src": "6195:11:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 99851,
                      "name": "TokenURIRevealed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33230,
                      "src": "6170:16:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 99854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6170:37:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99855,
                  "nodeType": "EmitStatement",
                  "src": "6165:42:381"
                }
              ]
            },
            "baseFunctions": [
              33240
            ],
            "documentation": {
              "id": 99810,
              "nodeType": "StructuredDocumentation",
              "src": "5698:96:381",
              "text": "@dev Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs."
            },
            "functionSelector": "ce805642",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reveal",
            "nameLocation": "5808:6:381",
            "parameters": {
              "id": 99815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99812,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "5823:6:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 99857,
                  "src": "5815:14:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99811,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5815:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99814,
                  "mutability": "mutable",
                  "name": "_key",
                  "nameLocation": "5846:4:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 99857,
                  "src": "5831:19:381",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 99813,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5831:5:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5814:37:381"
            },
            "returnParameters": {
              "id": 99818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99817,
                  "mutability": "mutable",
                  "name": "revealedURI",
                  "nameLocation": "5884:11:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 99857,
                  "src": "5870:25:381",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 99816,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5870:6:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5869:27:381"
            },
            "scope": 100636,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 99924,
            "nodeType": "FunctionDefinition",
            "src": "6497:868:381",
            "nodes": [],
            "body": {
              "id": 99923,
              "nodeType": "Block",
              "src": "6577:788:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99866,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99862,
                        "src": "6605:9:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99865,
                      "name": "_checkTokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100017,
                      "src": "6587:17:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 99867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6587:28:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99868,
                  "nodeType": "ExpressionStatement",
                  "src": "6587:28:381"
                },
                {
                  "assignments": [
                    99870
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99870,
                      "mutability": "mutable",
                      "name": "_tokenOwner",
                      "nameLocation": "6687:11:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 99923,
                      "src": "6679:19:381",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 99869,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6679:7:381",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99873,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 99871,
                      "name": "_dropMsgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        100609
                      ],
                      "referencedDeclaration": 100609,
                      "src": "6701:14:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 99872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6701:16:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6679:38:381"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99875,
                        "name": "_tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99870,
                        "src": "6745:11:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99876,
                        "name": "_burnTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99860,
                        "src": "6758:12:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 99877,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99862,
                        "src": "6772:9:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99874,
                      "name": "verifyBurnToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39362,
                      "src": "6727:17:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) view"
                      }
                    },
                    "id": 99878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6727:55:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99879,
                  "nodeType": "ExpressionStatement",
                  "src": "6727:55:381"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99881,
                        "name": "_tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99870,
                        "src": "6812:11:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99882,
                        "name": "_burnTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99860,
                        "src": "6825:12:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 99883,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99862,
                        "src": "6839:9:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99880,
                      "name": "_burnTokensOnOrigin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39412,
                      "src": "6792:19:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 99884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6792:57:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99885,
                  "nodeType": "ExpressionStatement",
                  "src": "6792:57:381"
                },
                {
                  "assignments": [
                    99890
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99890,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "6917:4:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 99923,
                      "src": "6885:36:381",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$39211_storage_ptr",
                        "typeString": "struct BurnToClaimStorage.Data"
                      },
                      "typeName": {
                        "id": 99889,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99888,
                          "name": "BurnToClaimStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 39211,
                          "src": "6885:23:381"
                        },
                        "referencedDeclaration": 39211,
                        "src": "6885:23:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$39211_storage_ptr",
                          "typeString": "struct BurnToClaimStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99894,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 99891,
                        "name": "BurnToClaimStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39224,
                        "src": "6924:18:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BurnToClaimStorage_$39224_$",
                          "typeString": "type(library BurnToClaimStorage)"
                        }
                      },
                      "id": 99892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnToClaimStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39223,
                      "src": "6924:37:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$39211_storage_ptr_$",
                        "typeString": "function () pure returns (struct BurnToClaimStorage.Data storage pointer)"
                      }
                    },
                    "id": 99893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6924:39:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$39211_storage_ptr",
                      "typeString": "struct BurnToClaimStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6885:78:381"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 99898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7015:1:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 99897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7007:7:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99896,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7007:7:381",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7007:10:381",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99900,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99862,
                        "src": "7031:9:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 99901,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99890,
                            "src": "7054:4:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$39211_storage_ptr",
                              "typeString": "struct BurnToClaimStorage.Data storage pointer"
                            }
                          },
                          "id": 99902,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "burnToClaimInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39210,
                          "src": "7054:20:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BurnToClaimInfo_$32975_storage",
                            "typeString": "struct IBurnToClaim.BurnToClaimInfo storage ref"
                          }
                        },
                        "id": 99903,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32974,
                        "src": "7054:29:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 99904,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99890,
                            "src": "7097:4:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$39211_storage_ptr",
                              "typeString": "struct BurnToClaimStorage.Data storage pointer"
                            }
                          },
                          "id": 99905,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "burnToClaimInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39210,
                          "src": "7097:20:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BurnToClaimInfo_$32975_storage",
                            "typeString": "struct IBurnToClaim.BurnToClaimInfo storage ref"
                          }
                        },
                        "id": 99906,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintPriceForNewToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32972,
                        "src": "7097:41:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99895,
                      "name": "_collectPriceOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        100154
                      ],
                      "referencedDeclaration": 100154,
                      "src": "6973:20:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 99907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6973:175:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99908,
                  "nodeType": "ExpressionStatement",
                  "src": "6973:175:381"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99910,
                        "name": "_tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99870,
                        "src": "7193:11:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99911,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99862,
                        "src": "7206:9:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99909,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10876,
                        11060
                      ],
                      "referencedDeclaration": 10876,
                      "src": "7183:9:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 99912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7183:33:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99913,
                  "nodeType": "ExpressionStatement",
                  "src": "7183:33:381"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 99915,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99890,
                            "src": "7277:4:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$39211_storage_ptr",
                              "typeString": "struct BurnToClaimStorage.Data storage pointer"
                            }
                          },
                          "id": 99916,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "burnToClaimInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39210,
                          "src": "7277:20:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BurnToClaimInfo_$32975_storage",
                            "typeString": "struct IBurnToClaim.BurnToClaimInfo storage ref"
                          }
                        },
                        "id": 99917,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "originContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32965,
                        "src": "7277:42:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99918,
                        "name": "_tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99870,
                        "src": "7321:11:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99919,
                        "name": "_burnTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99860,
                        "src": "7334:12:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 99920,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99862,
                        "src": "7348:9:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99914,
                      "name": "TokensBurnedAndClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32986,
                      "src": "7254:22:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 99921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7254:104:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99922,
                  "nodeType": "EmitStatement",
                  "src": "7249:109:381"
                }
              ]
            },
            "documentation": {
              "id": 99858,
              "nodeType": "StructuredDocumentation",
              "src": "6414:78:381",
              "text": "@dev Claim lazy minted after burning required tokens from origin contract."
            },
            "functionSelector": "1567313b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnAndClaim",
            "nameLocation": "6506:12:381",
            "parameters": {
              "id": 99863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99860,
                  "mutability": "mutable",
                  "name": "_burnTokenId",
                  "nameLocation": "6527:12:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 99924,
                  "src": "6519:20:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99859,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6519:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99862,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "6549:9:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 99924,
                  "src": "6541:17:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6541:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6518:41:381"
            },
            "returnParameters": {
              "id": 99864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6577:0:381"
            },
            "scope": 100636,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 99959,
            "nodeType": "FunctionDefinition",
            "src": "7640:353:381",
            "nodes": [],
            "body": {
              "id": 99958,
              "nodeType": "Block",
              "src": "7701:292:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 99932,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99647,
                            "src": "7728:18:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 99933,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                100622
                              ],
                              "referencedDeclaration": 100622,
                              "src": "7748:10:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 99934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7748:12:381",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 99931,
                          "name": "_hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100599,
                          "src": "7719:8:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 99935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7719:42:381",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f742061646d696e2e",
                        "id": 99936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7763:12:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e53bf2a2bcdd43c564217a5a8749411547168b3f2765ac09377195dccc999427",
                          "typeString": "literal_string \"not admin.\""
                        },
                        "value": "not admin."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e53bf2a2bcdd43c564217a5a8749411547168b3f2765ac09377195dccc999427",
                          "typeString": "literal_string \"not admin.\""
                        }
                      ],
                      "id": 99930,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7711:7:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 99937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7711:65:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99938,
                  "nodeType": "ExpressionStatement",
                  "src": "7711:65:381"
                },
                {
                  "assignments": [
                    99943
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99943,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "7826:4:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 99958,
                      "src": "7787:43:381",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$100647_storage_ptr",
                        "typeString": "struct BurnToClaimDrop721Storage.Data"
                      },
                      "typeName": {
                        "id": 99942,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99941,
                          "name": "BurnToClaimDrop721Storage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 100647,
                          "src": "7787:30:381"
                        },
                        "referencedDeclaration": 100647,
                        "src": "7787:30:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$100647_storage_ptr",
                          "typeString": "struct BurnToClaimDrop721Storage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99947,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 99944,
                        "name": "BurnToClaimDrop721Storage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100660,
                        "src": "7833:25:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BurnToClaimDrop721Storage_$100660_$",
                          "typeString": "type(library BurnToClaimDrop721Storage)"
                        }
                      },
                      "id": 99945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnToClaimDrop721Storage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 100659,
                      "src": "7833:51:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$100647_storage_ptr_$",
                        "typeString": "function () pure returns (struct BurnToClaimDrop721Storage.Data storage pointer)"
                      }
                    },
                    "id": 99946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7833:53:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$100647_storage_ptr",
                      "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7787:99:381"
                },
                {
                  "expression": {
                    "id": 99952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 99948,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99943,
                        "src": "7896:4:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$100647_storage_ptr",
                          "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                        }
                      },
                      "id": 99950,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxTotalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 100646,
                      "src": "7896:19:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99951,
                      "name": "_maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99927,
                      "src": "7918:15:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7896:37:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99953,
                  "nodeType": "ExpressionStatement",
                  "src": "7896:37:381"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 99955,
                        "name": "_maxTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99927,
                        "src": "7970:15:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99954,
                      "name": "MaxTotalSupplyUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99674,
                      "src": "7948:21:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 99956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7948:38:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99957,
                  "nodeType": "EmitStatement",
                  "src": "7943:43:381"
                }
              ]
            },
            "documentation": {
              "id": 99925,
              "nodeType": "StructuredDocumentation",
              "src": "7552:83:381",
              "text": "@dev Lets a contract admin set the global maximum supply for collection's NFTs."
            },
            "functionSelector": "3f3e4c11",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMaxTotalSupply",
            "nameLocation": "7649:17:381",
            "parameters": {
              "id": 99928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99927,
                  "mutability": "mutable",
                  "name": "_maxTotalSupply",
                  "nameLocation": "7675:15:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 99959,
                  "src": "7667:23:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7667:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7666:25:381"
            },
            "returnParameters": {
              "id": 99929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7701:0:381"
            },
            "scope": 100636,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 100017,
            "nodeType": "FunctionDefinition",
            "src": "8245:580:381",
            "nodes": [],
            "body": {
              "id": 100016,
              "nodeType": "Block",
              "src": "8305:520:381",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99969
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99969,
                      "mutability": "mutable",
                      "name": "dropData",
                      "nameLocation": "8354:8:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 100016,
                      "src": "8315:47:381",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$100647_storage_ptr",
                        "typeString": "struct BurnToClaimDrop721Storage.Data"
                      },
                      "typeName": {
                        "id": 99968,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99967,
                          "name": "BurnToClaimDrop721Storage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 100647,
                          "src": "8315:30:381"
                        },
                        "referencedDeclaration": 100647,
                        "src": "8315:30:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$100647_storage_ptr",
                          "typeString": "struct BurnToClaimDrop721Storage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99973,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 99970,
                        "name": "BurnToClaimDrop721Storage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100660,
                        "src": "8365:25:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BurnToClaimDrop721Storage_$100660_$",
                          "typeString": "type(library BurnToClaimDrop721Storage)"
                        }
                      },
                      "id": 99971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnToClaimDrop721Storage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 100659,
                      "src": "8365:51:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$100647_storage_ptr_$",
                        "typeString": "function () pure returns (struct BurnToClaimDrop721Storage.Data storage pointer)"
                      }
                    },
                    "id": 99972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8365:53:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$100647_storage_ptr",
                      "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8315:103:381"
                },
                {
                  "assignments": [
                    99978
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99978,
                      "mutability": "mutable",
                      "name": "erc721AData",
                      "nameLocation": "8456:11:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 100016,
                      "src": "8428:39:381",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data"
                      },
                      "typeName": {
                        "id": 99977,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99976,
                          "name": "ERC721AStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10096,
                          "src": "8428:19:381"
                        },
                        "referencedDeclaration": 10096,
                        "src": "8428:19:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                          "typeString": "struct ERC721AStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99982,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 99979,
                        "name": "ERC721AStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10109,
                        "src": "8470:14:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721AStorage_$10109_$",
                          "typeString": "type(library ERC721AStorage)"
                        }
                      },
                      "id": 99980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721AStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10108,
                      "src": "8470:29:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$10096_storage_ptr_$",
                        "typeString": "function () pure returns (struct ERC721AStorage.Data storage pointer)"
                      }
                    },
                    "id": 99981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8470:31:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                      "typeString": "struct ERC721AStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8428:73:381"
                },
                {
                  "assignments": [
                    99984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99984,
                      "mutability": "mutable",
                      "name": "_maxTotalSupply",
                      "nameLocation": "8520:15:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 100016,
                      "src": "8512:23:381",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99983,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8512:7:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99987,
                  "initialValue": {
                    "expression": {
                      "id": 99985,
                      "name": "dropData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99969,
                      "src": "8538:8:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$100647_storage_ptr",
                        "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                      }
                    },
                    "id": 99986,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "maxTotalSupply",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 100646,
                    "src": "8538:23:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8512:49:381"
                },
                {
                  "assignments": [
                    99989
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99989,
                      "mutability": "mutable",
                      "name": "currentIndex_",
                      "nameLocation": "8579:13:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 100016,
                      "src": "8571:21:381",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99988,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8571:7:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99992,
                  "initialValue": {
                    "expression": {
                      "id": 99990,
                      "name": "erc721AData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99978,
                      "src": "8595:11:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data storage pointer"
                      }
                    },
                    "id": 99991,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_currentIndex",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10069,
                    "src": "8595:25:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8571:49:381"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 99996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 99994,
                            "name": "currentIndex_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99989,
                            "src": "8639:13:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 99995,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99962,
                            "src": "8655:9:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8639:25:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 99997,
                            "name": "nextTokenIdToLazyMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41142,
                            "src": "8668:21:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 99998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8668:23:381",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8639:52:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21546f6b656e73",
                        "id": 100000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8693:9:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c48d16b147323aabba55b2c5e21a0b7a88b05e59180ad9d2d4b243d721a30dd",
                          "typeString": "literal_string \"!Tokens\""
                        },
                        "value": "!Tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c48d16b147323aabba55b2c5e21a0b7a88b05e59180ad9d2d4b243d721a30dd",
                          "typeString": "literal_string \"!Tokens\""
                        }
                      ],
                      "id": 99993,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8631:7:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8631:72:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100002,
                  "nodeType": "ExpressionStatement",
                  "src": "8631:72:381"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 100012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 100006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 100004,
                            "name": "_maxTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99984,
                            "src": "8721:15:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 100005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8740:1:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8721:20:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 100011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 100009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 100007,
                              "name": "currentIndex_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99989,
                              "src": "8745:13:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 100008,
                              "name": "_quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99962,
                              "src": "8761:9:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8745:25:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 100010,
                            "name": "_maxTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99984,
                            "src": "8774:15:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8745:44:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8721:68:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "657863656564206d617820746f74616c20737570706c792e",
                        "id": 100013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8791:26:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4e319661650d6a0137f2c1e35ddbe3cec4727f8902befce5907bf3aef5c69d8",
                          "typeString": "literal_string \"exceed max total supply.\""
                        },
                        "value": "exceed max total supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b4e319661650d6a0137f2c1e35ddbe3cec4727f8902befce5907bf3aef5c69d8",
                          "typeString": "literal_string \"exceed max total supply.\""
                        }
                      ],
                      "id": 100003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8713:7:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8713:105:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100015,
                  "nodeType": "ExpressionStatement",
                  "src": "8713:105:381"
                }
              ]
            },
            "documentation": {
              "id": 99960,
              "nodeType": "StructuredDocumentation",
              "src": "8182:58:381",
              "text": "@dev Check if given quantity is available for minting."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkTokenSupply",
            "nameLocation": "8254:17:381",
            "parameters": {
              "id": 99963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99962,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "8280:9:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100017,
                  "src": "8272:17:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8272:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8271:19:381"
            },
            "returnParameters": {
              "id": 99964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8305:0:381"
            },
            "scope": 100636,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100040,
            "nodeType": "FunctionDefinition",
            "src": "8885:229:381",
            "nodes": [],
            "body": {
              "id": 100039,
              "nodeType": "Block",
              "src": "9069:45:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100036,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100022,
                        "src": "9097:9:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100035,
                      "name": "_checkTokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100017,
                      "src": "9079:17:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 100037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9079:28:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100038,
                  "nodeType": "ExpressionStatement",
                  "src": "9079:28:381"
                }
              ]
            },
            "baseFunctions": [
              40505
            ],
            "documentation": {
              "id": 100018,
              "nodeType": "StructuredDocumentation",
              "src": "8831:49:381",
              "text": "@dev Runs before every `claim` function call."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeClaim",
            "nameLocation": "8894:12:381",
            "overrides": {
              "id": 100033,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9060:8:381"
            },
            "parameters": {
              "id": 100032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100020,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100040,
                  "src": "8916:7:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100019,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8916:7:381",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100022,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "8941:9:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100040,
                  "src": "8933:17:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8933:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100024,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100040,
                  "src": "8960:7:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8960:7:381",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100026,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100040,
                  "src": "8977:7:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8977:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100029,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100040,
                  "src": "8994:23:381",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllowlistProof_$33306_calldata_ptr",
                    "typeString": "struct IDrop.AllowlistProof"
                  },
                  "typeName": {
                    "id": 100028,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 100027,
                      "name": "AllowlistProof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33306,
                      "src": "8994:14:381"
                    },
                    "referencedDeclaration": 33306,
                    "src": "8994:14:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowlistProof_$33306_storage_ptr",
                      "typeString": "struct IDrop.AllowlistProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100031,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100040,
                  "src": "9027:12:381",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 100030,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9027:5:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8906:139:381"
            },
            "returnParameters": {
              "id": 100034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9069:0:381"
            },
            "scope": 100636,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100154,
            "nodeType": "FunctionDefinition",
            "src": "9204:1136:381",
            "nodes": [],
            "body": {
              "id": 100153,
              "nodeType": "Block",
              "src": "9390:950:381",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 100055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 100053,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100049,
                      "src": "9404:14:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 100054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9422:1:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9404:19:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100066,
                  "nodeType": "IfStatement",
                  "src": "9400:103:381",
                  "trueBody": {
                    "id": 100065,
                    "nodeType": "Block",
                    "src": "9425:78:381",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 100060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 100057,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9447:3:381",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 100058,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "9447:9:381",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 100059,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9460:1:381",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9447:14:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 100061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9463:8:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 100056,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9439:7:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 100062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9439:33:381",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 100063,
                        "nodeType": "ExpressionStatement",
                        "src": "9439:33:381"
                      },
                      {
                        "functionReturnParameters": 100052,
                        "id": 100064,
                        "nodeType": "Return",
                        "src": "9486:7:381"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    100068,
                    100070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100068,
                      "mutability": "mutable",
                      "name": "platformFeeRecipient",
                      "nameLocation": "9522:20:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 100153,
                      "src": "9514:28:381",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 100067,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9514:7:381",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 100070,
                      "mutability": "mutable",
                      "name": "platformFeeBps",
                      "nameLocation": "9551:14:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 100153,
                      "src": "9544:21:381",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 100069,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "9544:6:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100073,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 100071,
                      "name": "getPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42525,
                      "src": "9569:18:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint16_$",
                        "typeString": "function () view returns (address,uint16)"
                      }
                    },
                    "id": 100072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9569:20:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                      "typeString": "tuple(address,uint16)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9513:76:381"
                },
                {
                  "assignments": [
                    100075
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100075,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "9608:13:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 100153,
                      "src": "9600:21:381",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 100074,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9600:7:381",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100086,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 100081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 100076,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100043,
                        "src": "9624:21:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 100079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9657:1:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 100078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9649:7:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100077,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9649:7:381",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9649:10:381",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9624:35:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 100084,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100043,
                      "src": "9687:21:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 100085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "9624:84:381",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 100082,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42650,
                        "src": "9662:20:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 100083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9662:22:381",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9600:108:381"
                },
                {
                  "assignments": [
                    100088
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100088,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "9727:10:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 100153,
                      "src": "9719:18:381",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 100087,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9719:7:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100092,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 100091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 100089,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100045,
                      "src": "9740:16:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 100090,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100049,
                      "src": "9759:14:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9740:33:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9719:54:381"
                },
                {
                  "assignments": [
                    100094
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100094,
                      "mutability": "mutable",
                      "name": "platformFees",
                      "nameLocation": "9791:12:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 100153,
                      "src": "9783:20:381",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 100093,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9783:7:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100101,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 100100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 100097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 100095,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100088,
                            "src": "9807:10:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 100096,
                            "name": "platformFeeBps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100070,
                            "src": "9820:14:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "9807:27:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 100098,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9806:29:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 100099,
                      "name": "MAX_BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99669,
                      "src": "9838:7:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9806:39:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9783:62:381"
                },
                {
                  "assignments": [
                    100103
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100103,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "9861:13:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 100153,
                      "src": "9856:18:381",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 100102,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9856:4:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100104,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9856:18:381"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 100108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 100105,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100047,
                      "src": "9888:9:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 100106,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64276,
                        "src": "9901:19:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64276_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 100107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64044,
                      "src": "9901:32:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9888:45:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 100124,
                    "nodeType": "Block",
                    "src": "10005:55:381",
                    "statements": [
                      {
                        "expression": {
                          "id": 100122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 100117,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100103,
                            "src": "10019:13:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 100121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 100118,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10035:3:381",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 100119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "10035:9:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 100120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10048:1:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "10035:14:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10019:30:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 100123,
                        "nodeType": "ExpressionStatement",
                        "src": "10019:30:381"
                      }
                    ]
                  },
                  "id": 100125,
                  "nodeType": "IfStatement",
                  "src": "9884:176:381",
                  "trueBody": {
                    "id": 100116,
                    "nodeType": "Block",
                    "src": "9935:64:381",
                    "statements": [
                      {
                        "expression": {
                          "id": 100114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 100109,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100103,
                            "src": "9949:13:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 100113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 100110,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9965:3:381",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 100111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "9965:9:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 100112,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100088,
                              "src": "9978:10:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9965:23:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9949:39:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 100115,
                        "nodeType": "ExpressionStatement",
                        "src": "9949:39:381"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100127,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100103,
                        "src": "10077:13:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d73672076616c7565",
                        "id": 100128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10092:19:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        },
                        "value": "Invalid msg value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        }
                      ],
                      "id": 100126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10069:7:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10069:43:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100130,
                  "nodeType": "ExpressionStatement",
                  "src": "10069:43:381"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100134,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100047,
                        "src": "10160:9:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100135,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100622
                          ],
                          "referencedDeclaration": 100622,
                          "src": "10171:10:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10171:12:381",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100137,
                        "name": "platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100068,
                        "src": "10185:20:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100138,
                        "name": "platformFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100094,
                        "src": "10207:12:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100131,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64276,
                        "src": "10123:19:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64276_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 100133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64081,
                      "src": "10123:36:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 100139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10123:97:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100140,
                  "nodeType": "ExpressionStatement",
                  "src": "10123:97:381"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100144,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100047,
                        "src": "10267:9:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100145,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100622
                          ],
                          "referencedDeclaration": 100622,
                          "src": "10278:10:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10278:12:381",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100147,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100075,
                        "src": "10292:13:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 100148,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100088,
                          "src": "10307:10:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 100149,
                          "name": "platformFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100094,
                          "src": "10320:12:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10307:25:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100141,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64276,
                        "src": "10230:19:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64276_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 100143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64081,
                      "src": "10230:36:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 100151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10230:103:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100152,
                  "nodeType": "ExpressionStatement",
                  "src": "10230:103:381"
                }
              ]
            },
            "baseFunctions": [
              40535
            ],
            "documentation": {
              "id": 100041,
              "nodeType": "StructuredDocumentation",
              "src": "9120:79:381",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "9213:20:381",
            "overrides": {
              "id": 100051,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9381:8:381"
            },
            "parameters": {
              "id": 100050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100043,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "9251:21:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100154,
                  "src": "9243:29:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9243:7:381",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100045,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "9290:16:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100154,
                  "src": "9282:24:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100044,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9282:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100047,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "9324:9:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100154,
                  "src": "9316:17:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100046,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9316:7:381",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100049,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "9351:14:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100154,
                  "src": "9343:22:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9343:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9233:138:381"
            },
            "returnParameters": {
              "id": 100052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9390:0:381"
            },
            "scope": 100636,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100185,
            "nodeType": "FunctionDefinition",
            "src": "10393:326:381",
            "nodes": [],
            "body": {
              "id": 100184,
              "nodeType": "Block",
              "src": "10546:173:381",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    100169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100169,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "10584:4:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 100184,
                      "src": "10556:32:381",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data"
                      },
                      "typeName": {
                        "id": 100168,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100167,
                          "name": "ERC721AStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10096,
                          "src": "10556:19:381"
                        },
                        "referencedDeclaration": 10096,
                        "src": "10556:19:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                          "typeString": "struct ERC721AStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100173,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100170,
                        "name": "ERC721AStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10109,
                        "src": "10591:14:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721AStorage_$10109_$",
                          "typeString": "type(library ERC721AStorage)"
                        }
                      },
                      "id": 100171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721AStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10108,
                      "src": "10591:29:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$10096_storage_ptr_$",
                        "typeString": "function () pure returns (struct ERC721AStorage.Data storage pointer)"
                      }
                    },
                    "id": 100172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10591:31:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                      "typeString": "struct ERC721AStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10556:66:381"
                },
                {
                  "expression": {
                    "id": 100177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100174,
                      "name": "startTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100163,
                      "src": "10632:12:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 100175,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100169,
                        "src": "10647:4:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                          "typeString": "struct ERC721AStorage.Data storage pointer"
                        }
                      },
                      "id": 100176,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_currentIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10069,
                      "src": "10647:18:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10632:33:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 100178,
                  "nodeType": "ExpressionStatement",
                  "src": "10632:33:381"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100180,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100157,
                        "src": "10685:3:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100181,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100159,
                        "src": "10690:21:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100179,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10876,
                        11060
                      ],
                      "referencedDeclaration": 10876,
                      "src": "10675:9:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 100182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10675:37:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100183,
                  "nodeType": "ExpressionStatement",
                  "src": "10675:37:381"
                }
              ]
            },
            "baseFunctions": [
              40545
            ],
            "documentation": {
              "id": 100155,
              "nodeType": "StructuredDocumentation",
              "src": "10346:42:381",
              "text": "@dev Transfers the NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "10402:22:381",
            "overrides": {
              "id": 100161,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10494:8:381"
            },
            "parameters": {
              "id": 100160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100157,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "10433:3:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100185,
                  "src": "10425:11:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10425:7:381",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100159,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "10446:21:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100185,
                  "src": "10438:29:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10438:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10424:44:381"
            },
            "returnParameters": {
              "id": 100164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100163,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "10528:12:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100185,
                  "src": "10520:20:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10520:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10519:22:381"
            },
            "scope": 100636,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100199,
            "nodeType": "FunctionDefinition",
            "src": "10814:138:381",
            "nodes": [],
            "body": {
              "id": 100198,
              "nodeType": "Block",
              "src": "10886:66:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100193,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99647,
                        "src": "10912:18:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100194,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100622
                          ],
                          "referencedDeclaration": 100622,
                          "src": "10932:10:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10932:12:381",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100192,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100599,
                      "src": "10903:8:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10903:42:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100191,
                  "id": 100197,
                  "nodeType": "Return",
                  "src": "10896:49:381"
                }
              ]
            },
            "baseFunctions": [
              42602
            ],
            "documentation": {
              "id": 100186,
              "nodeType": "StructuredDocumentation",
              "src": "10725:84:381",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPlatformFeeInfo",
            "nameLocation": "10823:22:381",
            "overrides": {
              "id": 100188,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10862:8:381"
            },
            "parameters": {
              "id": 100187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10845:2:381"
            },
            "returnParameters": {
              "id": 100191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100190,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100199,
                  "src": "10880:4:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100189,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10880:4:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10879:6:381"
            },
            "scope": 100636,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100213,
            "nodeType": "FunctionDefinition",
            "src": "11052:143:381",
            "nodes": [],
            "body": {
              "id": 100212,
              "nodeType": "Block",
              "src": "11129:66:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100207,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99647,
                        "src": "11155:18:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100208,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100622
                          ],
                          "referencedDeclaration": 100622,
                          "src": "11175:10:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11175:12:381",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100206,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100599,
                      "src": "11146:8:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11146:42:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100205,
                  "id": 100211,
                  "nodeType": "Return",
                  "src": "11139:49:381"
                }
              ]
            },
            "baseFunctions": [
              42703
            ],
            "documentation": {
              "id": 100200,
              "nodeType": "StructuredDocumentation",
              "src": "10958:89:381",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "11061:27:381",
            "overrides": {
              "id": 100202,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11105:8:381"
            },
            "parameters": {
              "id": 100201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11088:2:381"
            },
            "returnParameters": {
              "id": 100205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100204,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100213,
                  "src": "11123:4:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100203,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11123:4:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11122:6:381"
            },
            "scope": 100636,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100227,
            "nodeType": "FunctionDefinition",
            "src": "11278:128:381",
            "nodes": [],
            "body": {
              "id": 100226,
              "nodeType": "Block",
              "src": "11340:66:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100221,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99647,
                        "src": "11366:18:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100222,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100622
                          ],
                          "referencedDeclaration": 100622,
                          "src": "11386:10:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11386:12:381",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100220,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100599,
                      "src": "11357:8:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11357:42:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100219,
                  "id": 100225,
                  "nodeType": "Return",
                  "src": "11350:49:381"
                }
              ]
            },
            "baseFunctions": [
              41615
            ],
            "documentation": {
              "id": 100214,
              "nodeType": "StructuredDocumentation",
              "src": "11201:72:381",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "11287:12:381",
            "overrides": {
              "id": 100216,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11316:8:381"
            },
            "parameters": {
              "id": 100215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11299:2:381"
            },
            "returnParameters": {
              "id": 100219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100218,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100227,
                  "src": "11334:4:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100217,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11334:4:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11333:6:381"
            },
            "scope": 100636,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100241,
            "nodeType": "FunctionDefinition",
            "src": "11496:134:381",
            "nodes": [],
            "body": {
              "id": 100240,
              "nodeType": "Block",
              "src": "11564:66:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100235,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99647,
                        "src": "11590:18:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100236,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100622
                          ],
                          "referencedDeclaration": 100622,
                          "src": "11610:10:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11610:12:381",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100234,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100599,
                      "src": "11581:8:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11581:42:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100233,
                  "id": 100239,
                  "nodeType": "Return",
                  "src": "11574:49:381"
                }
              ]
            },
            "baseFunctions": [
              43091
            ],
            "documentation": {
              "id": 100228,
              "nodeType": "StructuredDocumentation",
              "src": "11412:79:381",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "11505:18:381",
            "overrides": {
              "id": 100230,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11540:8:381"
            },
            "parameters": {
              "id": 100229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11523:2:381"
            },
            "returnParameters": {
              "id": 100233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100232,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100241,
                  "src": "11558:4:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100231,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11558:4:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11557:6:381"
            },
            "scope": 100636,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100255,
            "nodeType": "FunctionDefinition",
            "src": "11725:134:381",
            "nodes": [],
            "body": {
              "id": 100254,
              "nodeType": "Block",
              "src": "11793:66:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100249,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99647,
                        "src": "11819:18:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100250,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100622
                          ],
                          "referencedDeclaration": 100622,
                          "src": "11839:10:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11839:12:381",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100248,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100599,
                      "src": "11810:8:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11810:42:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100247,
                  "id": 100253,
                  "nodeType": "Return",
                  "src": "11803:49:381"
                }
              ]
            },
            "baseFunctions": [
              39525
            ],
            "documentation": {
              "id": 100242,
              "nodeType": "StructuredDocumentation",
              "src": "11636:84:381",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "11734:18:381",
            "overrides": {
              "id": 100244,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11769:8:381"
            },
            "parameters": {
              "id": 100243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11752:2:381"
            },
            "returnParameters": {
              "id": 100247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100246,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100255,
                  "src": "11787:4:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100245,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11787:4:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11786:6:381"
            },
            "scope": 100636,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100269,
            "nodeType": "FunctionDefinition",
            "src": "11954:138:381",
            "nodes": [],
            "body": {
              "id": 100268,
              "nodeType": "Block",
              "src": "12026:66:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100263,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99647,
                        "src": "12052:18:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100264,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100622
                          ],
                          "referencedDeclaration": 100622,
                          "src": "12072:10:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12072:12:381",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100262,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100599,
                      "src": "12043:8:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12043:42:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100261,
                  "id": 100267,
                  "nodeType": "Return",
                  "src": "12036:49:381"
                }
              ]
            },
            "baseFunctions": [
              40551
            ],
            "documentation": {
              "id": 100256,
              "nodeType": "StructuredDocumentation",
              "src": "11865:84:381",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "11963:22:381",
            "overrides": {
              "id": 100258,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12002:8:381"
            },
            "parameters": {
              "id": 100257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11985:2:381"
            },
            "returnParameters": {
              "id": 100261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100260,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100269,
                  "src": "12020:4:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100259,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12020:4:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12019:6:381"
            },
            "scope": 100636,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100283,
            "nodeType": "FunctionDefinition",
            "src": "12184:129:381",
            "nodes": [],
            "body": {
              "id": 100282,
              "nodeType": "Block",
              "src": "12254:59:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100277,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99659,
                        "src": "12280:11:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100278,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100622
                          ],
                          "referencedDeclaration": 100622,
                          "src": "12293:10:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12293:12:381",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100276,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100599,
                      "src": "12271:8:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12271:35:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100275,
                  "id": 100281,
                  "nodeType": "Return",
                  "src": "12264:42:381"
                }
              ]
            },
            "baseFunctions": [
              41219
            ],
            "documentation": {
              "id": 100270,
              "nodeType": "StructuredDocumentation",
              "src": "12098:81:381",
              "text": "@dev Returns whether lazy minting can be done in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canLazyMint",
            "nameLocation": "12193:12:381",
            "overrides": {
              "id": 100272,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12230:8:381"
            },
            "parameters": {
              "id": 100271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12205:2:381"
            },
            "returnParameters": {
              "id": 100275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100274,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100283,
                  "src": "12248:4:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100273,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12248:4:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12247:6:381"
            },
            "scope": 100636,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 100297,
            "nodeType": "FunctionDefinition",
            "src": "12412:145:381",
            "nodes": [],
            "body": {
              "id": 100296,
              "nodeType": "Block",
              "src": "12491:66:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100291,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99647,
                        "src": "12517:18:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100292,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100622
                          ],
                          "referencedDeclaration": 100622,
                          "src": "12537:10:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12537:12:381",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100290,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100599,
                      "src": "12508:8:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12508:42:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100289,
                  "id": 100295,
                  "nodeType": "Return",
                  "src": "12501:49:381"
                }
              ]
            },
            "baseFunctions": [
              41311
            ],
            "documentation": {
              "id": 100284,
              "nodeType": "StructuredDocumentation",
              "src": "12319:88:381",
              "text": "@dev Returns whether operator restriction can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOperatorRestriction",
            "nameLocation": "12421:26:381",
            "overrides": {
              "id": 100286,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12467:8:381"
            },
            "parameters": {
              "id": 100285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12447:2:381"
            },
            "returnParameters": {
              "id": 100289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100288,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100297,
                  "src": "12485:4:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100287,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12485:4:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12484:6:381"
            },
            "scope": 100636,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 100311,
            "nodeType": "FunctionDefinition",
            "src": "12654:142:381",
            "nodes": [],
            "body": {
              "id": 100310,
              "nodeType": "Block",
              "src": "12730:66:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100305,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99647,
                        "src": "12756:18:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100306,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100622
                          ],
                          "referencedDeclaration": 100622,
                          "src": "12776:10:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12776:12:381",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100304,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100599,
                      "src": "12747:8:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12747:42:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100303,
                  "id": 100309,
                  "nodeType": "Return",
                  "src": "12740:49:381"
                }
              ]
            },
            "baseFunctions": [
              39417
            ],
            "documentation": {
              "id": 100298,
              "nodeType": "StructuredDocumentation",
              "src": "12563:86:381",
              "text": "@dev Returns whether burn-to-claim info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetBurnToClaim",
            "nameLocation": "12663:18:381",
            "overrides": {
              "id": 100300,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12706:8:381"
            },
            "parameters": {
              "id": 100299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12681:2:381"
            },
            "returnParameters": {
              "id": 100303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100302,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100311,
                  "src": "12724:4:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100301,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12724:4:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12723:6:381"
            },
            "scope": 100636,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 100334,
            "nodeType": "FunctionDefinition",
            "src": "13062:225:381",
            "nodes": [],
            "body": {
              "id": 100333,
              "nodeType": "Block",
              "src": "13117:170:381",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    100321
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100321,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "13155:4:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 100333,
                      "src": "13127:32:381",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data"
                      },
                      "typeName": {
                        "id": 100320,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100319,
                          "name": "ERC721AStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10096,
                          "src": "13127:19:381"
                        },
                        "referencedDeclaration": 10096,
                        "src": "13127:19:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                          "typeString": "struct ERC721AStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100325,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100322,
                        "name": "ERC721AStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10109,
                        "src": "13162:14:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721AStorage_$10109_$",
                          "typeString": "type(library ERC721AStorage)"
                        }
                      },
                      "id": 100323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721AStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10108,
                      "src": "13162:29:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$10096_storage_ptr_$",
                        "typeString": "function () pure returns (struct ERC721AStorage.Data storage pointer)"
                      }
                    },
                    "id": 100324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13162:31:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                      "typeString": "struct ERC721AStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13127:66:381"
                },
                {
                  "id": 100332,
                  "nodeType": "UncheckedBlock",
                  "src": "13203:78:381",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 100326,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100321,
                            "src": "13234:4:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                              "typeString": "struct ERC721AStorage.Data storage pointer"
                            }
                          },
                          "id": 100327,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_currentIndex",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10069,
                          "src": "13234:18:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 100328,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10186,
                            "src": "13255:13:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 100329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13255:15:381",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13234:36:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 100316,
                      "id": 100331,
                      "nodeType": "Return",
                      "src": "13227:43:381"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 100312,
              "nodeType": "StructuredDocumentation",
              "src": "12980:77:381",
              "text": " Returns the total amount of tokens minted in the contract."
            },
            "functionSelector": "a2309ff8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMinted",
            "nameLocation": "13071:11:381",
            "parameters": {
              "id": 100313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13082:2:381"
            },
            "returnParameters": {
              "id": 100316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100315,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100334,
                  "src": "13108:7:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13108:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13107:9:381"
            },
            "scope": 100636,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 100344,
            "nodeType": "FunctionDefinition",
            "src": "13369:108:381",
            "nodes": [],
            "body": {
              "id": 100343,
              "nodeType": "Block",
              "src": "13430:47:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 100340,
                      "name": "nextTokenIdToLazyMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41142,
                      "src": "13447:21:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 100341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13447:23:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 100339,
                  "id": 100342,
                  "nodeType": "Return",
                  "src": "13440:30:381"
                }
              ]
            },
            "documentation": {
              "id": 100335,
              "nodeType": "StructuredDocumentation",
              "src": "13293:71:381",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "13378:17:381",
            "parameters": {
              "id": 100336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13395:2:381"
            },
            "returnParameters": {
              "id": 100339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100338,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100344,
                  "src": "13421:7:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13421:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13420:9:381"
            },
            "scope": 100636,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 100363,
            "nodeType": "FunctionDefinition",
            "src": "13546:180:381",
            "nodes": [],
            "body": {
              "id": 100362,
              "nodeType": "Block",
              "src": "13608:118:381",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    100354
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100354,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "13646:4:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 100362,
                      "src": "13618:32:381",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data"
                      },
                      "typeName": {
                        "id": 100353,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100352,
                          "name": "ERC721AStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10096,
                          "src": "13618:19:381"
                        },
                        "referencedDeclaration": 10096,
                        "src": "13618:19:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                          "typeString": "struct ERC721AStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100358,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100355,
                        "name": "ERC721AStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10109,
                        "src": "13653:14:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721AStorage_$10109_$",
                          "typeString": "type(library ERC721AStorage)"
                        }
                      },
                      "id": 100356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721AStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10108,
                      "src": "13653:29:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$10096_storage_ptr_$",
                        "typeString": "function () pure returns (struct ERC721AStorage.Data storage pointer)"
                      }
                    },
                    "id": 100357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13653:31:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                      "typeString": "struct ERC721AStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13618:66:381"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 100359,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100354,
                      "src": "13701:4:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$10096_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data storage pointer"
                      }
                    },
                    "id": 100360,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_currentIndex",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10069,
                    "src": "13701:18:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 100349,
                  "id": 100361,
                  "nodeType": "Return",
                  "src": "13694:25:381"
                }
              ]
            },
            "documentation": {
              "id": 100345,
              "nodeType": "StructuredDocumentation",
              "src": "13483:58:381",
              "text": "@dev The next token ID of the NFT that can be claimed."
            },
            "functionSelector": "acd083f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToClaim",
            "nameLocation": "13555:18:381",
            "parameters": {
              "id": 100346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13573:2:381"
            },
            "returnParameters": {
              "id": 100349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100348,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100363,
                  "src": "13599:7:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13599:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13598:9:381"
            },
            "scope": 100636,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 100382,
            "nodeType": "FunctionDefinition",
            "src": "13778:208:381",
            "nodes": [],
            "body": {
              "id": 100381,
              "nodeType": "Block",
              "src": "13834:152:381",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    100373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100373,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "13883:4:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 100381,
                      "src": "13844:43:381",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$100647_storage_ptr",
                        "typeString": "struct BurnToClaimDrop721Storage.Data"
                      },
                      "typeName": {
                        "id": 100372,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100371,
                          "name": "BurnToClaimDrop721Storage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 100647,
                          "src": "13844:30:381"
                        },
                        "referencedDeclaration": 100647,
                        "src": "13844:30:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$100647_storage_ptr",
                          "typeString": "struct BurnToClaimDrop721Storage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100377,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100374,
                        "name": "BurnToClaimDrop721Storage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100660,
                        "src": "13890:25:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BurnToClaimDrop721Storage_$100660_$",
                          "typeString": "type(library BurnToClaimDrop721Storage)"
                        }
                      },
                      "id": 100375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnToClaimDrop721Storage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 100659,
                      "src": "13890:51:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$100647_storage_ptr_$",
                        "typeString": "function () pure returns (struct BurnToClaimDrop721Storage.Data storage pointer)"
                      }
                    },
                    "id": 100376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13890:53:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$100647_storage_ptr",
                      "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13844:99:381"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 100378,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100373,
                      "src": "13960:4:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$100647_storage_ptr",
                        "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                      }
                    },
                    "id": 100379,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "maxTotalSupply",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 100646,
                    "src": "13960:19:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 100368,
                  "id": 100380,
                  "nodeType": "Return",
                  "src": "13953:26:381"
                }
              ]
            },
            "documentation": {
              "id": 100364,
              "nodeType": "StructuredDocumentation",
              "src": "13732:41:381",
              "text": "@dev Global max total supply of NFTs."
            },
            "functionSelector": "2ab4d052",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxTotalSupply",
            "nameLocation": "13787:14:381",
            "parameters": {
              "id": 100365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13801:2:381"
            },
            "returnParameters": {
              "id": 100368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100367,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100382,
                  "src": "13825:7:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13825:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13824:9:381"
            },
            "scope": 100636,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100394,
            "nodeType": "FunctionDefinition",
            "src": "14042:184:381",
            "nodes": [],
            "body": {
              "id": 100393,
              "nodeType": "Block",
              "src": "14090:136:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100389,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100385,
                        "src": "14205:7:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 100390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14214:4:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 100388,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11396,
                        11593
                      ],
                      "referencedDeclaration": 11593,
                      "src": "14199:5:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 100391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14199:20:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100392,
                  "nodeType": "ExpressionStatement",
                  "src": "14199:20:381"
                }
              ]
            },
            "documentation": {
              "id": 100383,
              "nodeType": "StructuredDocumentation",
              "src": "13992:45:381",
              "text": "@dev Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "14051:4:381",
            "parameters": {
              "id": 100386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100385,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14064:7:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100394,
                  "src": "14056:15:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14056:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14055:17:381"
            },
            "returnParameters": {
              "id": 100387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14090:0:381"
            },
            "scope": 100636,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 100458,
            "nodeType": "FunctionDefinition",
            "src": "14280:579:381",
            "nodes": [],
            "body": {
              "id": 100457,
              "nodeType": "Block",
              "src": "14441:418:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100410,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100397,
                        "src": "14479:4:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100411,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100399,
                        "src": "14485:2:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100412,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100401,
                        "src": "14489:12:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 100413,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100403,
                        "src": "14503:8:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100407,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "14451:5:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$100636_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 100409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11695,
                      "src": "14451:27:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 100414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14451:61:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100415,
                  "nodeType": "ExpressionStatement",
                  "src": "14451:61:381"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 100437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 100430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 100423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "14624:36:381",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 100417,
                              "name": "TRANSFER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99653,
                              "src": "14634:13:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 100420,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14657:1:381",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 100419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14649:7:381",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 100418,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14649:7:381",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 100421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14649:10:381",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 100416,
                            "name": "_hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100599,
                            "src": "14625:8:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 100422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14625:35:381",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 100429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 100424,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100397,
                          "src": "14664:4:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 100427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14680:1:381",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 100426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14672:7:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 100425,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14672:7:381",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 100428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14672:10:381",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14664:18:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "14624:58:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 100436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 100431,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100399,
                        "src": "14686:2:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 100434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14700:1:381",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 100433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14692:7:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100432,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14692:7:381",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14692:10:381",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "14686:16:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14624:78:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100456,
                  "nodeType": "IfStatement",
                  "src": "14620:233:381",
                  "trueBody": {
                    "id": 100455,
                    "nodeType": "Block",
                    "src": "14704:149:381",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 100448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 100442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "14722:30:381",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 100439,
                                  "name": "TRANSFER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99653,
                                  "src": "14732:13:381",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 100440,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 100397,
                                  "src": "14747:4:381",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 100438,
                                "name": "_hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100599,
                                "src": "14723:8:381",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 100441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14723:29:381",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 100447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "14756:28:381",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 100444,
                                  "name": "TRANSFER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99653,
                                  "src": "14766:13:381",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 100445,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 100399,
                                  "src": "14781:2:381",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 100443,
                                "name": "_hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100599,
                                "src": "14757:8:381",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 100446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14757:27:381",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14722:62:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 100454,
                        "nodeType": "IfStatement",
                        "src": "14718:125:381",
                        "trueBody": {
                          "id": 100453,
                          "nodeType": "Block",
                          "src": "14786:57:381",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "215472616e736665722d526f6c65",
                                    "id": 100450,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14811:16:381",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    },
                                    "value": "!Transfer-Role"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    }
                                  ],
                                  "id": 100449,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "14804:6:381",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 100451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14804:24:381",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 100452,
                              "nodeType": "ExpressionStatement",
                              "src": "14804:24:381"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              11695
            ],
            "documentation": {
              "id": 100395,
              "nodeType": "StructuredDocumentation",
              "src": "14232:43:381",
              "text": "@dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "14289:21:381",
            "overrides": {
              "id": 100405,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "14432:8:381"
            },
            "parameters": {
              "id": 100404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100397,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14328:4:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100458,
                  "src": "14320:12:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14320:7:381",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100399,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14350:2:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100458,
                  "src": "14342:10:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14342:7:381",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100401,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "14370:12:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100458,
                  "src": "14362:20:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14362:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100403,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "14400:8:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100458,
                  "src": "14392:16:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14392:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14310:104:381"
            },
            "returnParameters": {
              "id": 100406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14441:0:381"
            },
            "scope": 100636,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 100478,
            "nodeType": "FunctionDefinition",
            "src": "14910:174:381",
            "nodes": [],
            "body": {
              "id": 100477,
              "nodeType": "Block",
              "src": "15024:60:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100473,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100461,
                        "src": "15058:8:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100474,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100463,
                        "src": "15068:8:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 100470,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "15034:5:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$100636_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 100472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10725,
                      "src": "15034:23:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 100475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15034:43:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100476,
                  "nodeType": "ExpressionStatement",
                  "src": "15034:43:381"
                }
              ]
            },
            "baseFunctions": [
              10725
            ],
            "documentation": {
              "id": 100459,
              "nodeType": "StructuredDocumentation",
              "src": "14865:40:381",
              "text": "@dev See {ERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 100467,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 100461,
                    "src": "15014:8:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 100468,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 100466,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41482,
                  "src": "14986:27:381"
                },
                "nodeType": "ModifierInvocation",
                "src": "14986:37:381"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "14919:17:381",
            "overrides": {
              "id": 100465,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "14977:8:381"
            },
            "parameters": {
              "id": 100464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100461,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "14945:8:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100478,
                  "src": "14937:16:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14937:7:381",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100463,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "14960:8:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100478,
                  "src": "14955:13:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100462,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14955:4:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14936:33:381"
            },
            "returnParameters": {
              "id": 100469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15024:0:381"
            },
            "scope": 100636,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100498,
            "nodeType": "FunctionDefinition",
            "src": "15125:155:381",
            "nodes": [],
            "body": {
              "id": 100497,
              "nodeType": "Block",
              "src": "15231:49:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100493,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100481,
                        "src": "15255:8:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100494,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100483,
                        "src": "15265:7:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100490,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "15241:5:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$100636_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 100492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10648,
                      "src": "15241:13:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 100495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15241:32:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100496,
                  "nodeType": "ExpressionStatement",
                  "src": "15241:32:381"
                }
              ]
            },
            "baseFunctions": [
              10648
            ],
            "documentation": {
              "id": 100479,
              "nodeType": "StructuredDocumentation",
              "src": "15090:30:381",
              "text": "@dev See {ERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 100487,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 100481,
                    "src": "15221:8:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 100488,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 100486,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41482,
                  "src": "15193:27:381"
                },
                "nodeType": "ModifierInvocation",
                "src": "15193:37:381"
              }
            ],
            "name": "approve",
            "nameLocation": "15134:7:381",
            "overrides": {
              "id": 100485,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "15184:8:381"
            },
            "parameters": {
              "id": 100484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100481,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "15150:8:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100498,
                  "src": "15142:16:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15142:7:381",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100483,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "15168:7:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100498,
                  "src": "15160:15:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15160:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15141:35:381"
            },
            "returnParameters": {
              "id": 100489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15231:0:381"
            },
            "scope": 100636,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100522,
            "nodeType": "FunctionDefinition",
            "src": "15327:211:381",
            "nodes": [],
            "body": {
              "id": 100521,
              "nodeType": "Block",
              "src": "15484:54:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100516,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100501,
                        "src": "15513:4:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100517,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100503,
                        "src": "15519:2:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100518,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100505,
                        "src": "15523:7:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100513,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "15494:5:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$100636_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 100515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10771,
                      "src": "15494:18:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 100519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15494:37:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100520,
                  "nodeType": "ExpressionStatement",
                  "src": "15494:37:381"
                }
              ]
            },
            "baseFunctions": [
              10771
            ],
            "documentation": {
              "id": 100499,
              "nodeType": "StructuredDocumentation",
              "src": "15286:36:381",
              "text": "@dev See {ERC721-_transferFrom}."
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 100510,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 100501,
                    "src": "15478:4:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 100511,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 100509,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41442,
                  "src": "15458:19:381"
                },
                "nodeType": "ModifierInvocation",
                "src": "15458:25:381"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "15336:12:381",
            "overrides": {
              "id": 100508,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 100507,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11709,
                  "src": "15438:18:381"
                }
              ],
              "src": "15429:28:381"
            },
            "parameters": {
              "id": 100506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100501,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15366:4:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100522,
                  "src": "15358:12:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100500,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15358:7:381",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100503,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15388:2:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100522,
                  "src": "15380:10:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15380:7:381",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100505,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "15408:7:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100522,
                  "src": "15400:15:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15400:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15348:73:381"
            },
            "returnParameters": {
              "id": 100512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15484:0:381"
            },
            "scope": 100636,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100546,
            "nodeType": "FunctionDefinition",
            "src": "15589:219:381",
            "nodes": [],
            "body": {
              "id": 100545,
              "nodeType": "Block",
              "src": "15750:58:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100540,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100525,
                        "src": "15783:4:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100541,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100527,
                        "src": "15789:2:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100542,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100529,
                        "src": "15793:7:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100537,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "15760:5:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$100636_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 100539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10790,
                      "src": "15760:22:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 100543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15760:41:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100544,
                  "nodeType": "ExpressionStatement",
                  "src": "15760:41:381"
                }
              ]
            },
            "baseFunctions": [
              10790
            ],
            "documentation": {
              "id": 100523,
              "nodeType": "StructuredDocumentation",
              "src": "15544:40:381",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 100534,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 100525,
                    "src": "15744:4:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 100535,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 100533,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41442,
                  "src": "15724:19:381"
                },
                "nodeType": "ModifierInvocation",
                "src": "15724:25:381"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "15598:16:381",
            "overrides": {
              "id": 100532,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 100531,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11709,
                  "src": "15704:18:381"
                }
              ],
              "src": "15695:28:381"
            },
            "parameters": {
              "id": 100530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100525,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15632:4:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100546,
                  "src": "15624:12:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15624:7:381",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100527,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15654:2:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100546,
                  "src": "15646:10:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15646:7:381",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100529,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "15674:7:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100546,
                  "src": "15666:15:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100528,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15666:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15614:73:381"
            },
            "returnParameters": {
              "id": 100536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15750:0:381"
            },
            "scope": 100636,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100573,
            "nodeType": "FunctionDefinition",
            "src": "15859:252:381",
            "nodes": [],
            "body": {
              "id": 100572,
              "nodeType": "Block",
              "src": "16047:64:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100566,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100549,
                        "src": "16080:4:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100567,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100551,
                        "src": "16086:2:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100568,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100553,
                        "src": "16090:7:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 100569,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100555,
                        "src": "16099:4:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 100563,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "16057:5:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$100636_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 100565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10826,
                      "src": "16057:22:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 100570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16057:47:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100571,
                  "nodeType": "ExpressionStatement",
                  "src": "16057:47:381"
                }
              ]
            },
            "baseFunctions": [
              10826
            ],
            "documentation": {
              "id": 100547,
              "nodeType": "StructuredDocumentation",
              "src": "15814:40:381",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 100560,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 100549,
                    "src": "16041:4:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 100561,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 100559,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41442,
                  "src": "16021:19:381"
                },
                "nodeType": "ModifierInvocation",
                "src": "16021:25:381"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "15868:16:381",
            "overrides": {
              "id": 100558,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 100557,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11709,
                  "src": "16001:18:381"
                }
              ],
              "src": "15992:28:381"
            },
            "parameters": {
              "id": 100556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100549,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15902:4:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100573,
                  "src": "15894:12:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15894:7:381",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100551,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15924:2:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100573,
                  "src": "15916:10:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15916:7:381",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100553,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "15944:7:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100573,
                  "src": "15936:15:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100552,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15936:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100555,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "15974:4:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100573,
                  "src": "15961:17:381",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 100554,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15961:5:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15884:100:381"
            },
            "returnParameters": {
              "id": 100562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16047:0:381"
            },
            "scope": 100636,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100599,
            "nodeType": "FunctionDefinition",
            "src": "16117:212:381",
            "nodes": [],
            "body": {
              "id": 100598,
              "nodeType": "Block",
              "src": "16192:137:381",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    100586
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100586,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "16234:4:381",
                      "nodeType": "VariableDeclaration",
                      "scope": 100598,
                      "src": "16202:36:381",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$41639_storage_ptr",
                        "typeString": "struct PermissionsStorage.Data"
                      },
                      "typeName": {
                        "id": 100585,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100584,
                          "name": "PermissionsStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41639,
                          "src": "16202:23:381"
                        },
                        "referencedDeclaration": 41639,
                        "src": "16202:23:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$41639_storage_ptr",
                          "typeString": "struct PermissionsStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100590,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100587,
                        "name": "PermissionsStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41652,
                        "src": "16241:18:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PermissionsStorage_$41652_$",
                          "typeString": "type(library PermissionsStorage)"
                        }
                      },
                      "id": 100588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "permissionsStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41651,
                      "src": "16241:37:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$41639_storage_ptr_$",
                        "typeString": "function () pure returns (struct PermissionsStorage.Data storage pointer)"
                      }
                    },
                    "id": 100589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16241:39:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$41639_storage_ptr",
                      "typeString": "struct PermissionsStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16202:78:381"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 100591,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100586,
                          "src": "16297:4:381",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$41639_storage_ptr",
                            "typeString": "struct PermissionsStorage.Data storage pointer"
                          }
                        },
                        "id": 100592,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_hasRole",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41633,
                        "src": "16297:13:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(bytes32 => mapping(address => bool))"
                        }
                      },
                      "id": 100594,
                      "indexExpression": {
                        "id": 100593,
                        "name": "role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100575,
                        "src": "16311:4:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "16297:19:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 100596,
                    "indexExpression": {
                      "id": 100595,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100577,
                      "src": "16317:4:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16297:25:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100581,
                  "id": 100597,
                  "nodeType": "Return",
                  "src": "16290:32:381"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasRole",
            "nameLocation": "16126:8:381",
            "parameters": {
              "id": 100578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100575,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "16143:4:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100599,
                  "src": "16135:12:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 100574,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16135:7:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100577,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "16157:4:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100599,
                  "src": "16149:12:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16149:7:381",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16134:28:381"
            },
            "returnParameters": {
              "id": 100581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100580,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100599,
                  "src": "16186:4:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100579,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16186:4:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16185:6:381"
            },
            "scope": 100636,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100609,
            "nodeType": "FunctionDefinition",
            "src": "16335:111:381",
            "nodes": [],
            "body": {
              "id": 100608,
              "nodeType": "Block",
              "src": "16410:36:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 100605,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        100622
                      ],
                      "referencedDeclaration": 100622,
                      "src": "16427:10:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 100606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16427:12:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 100604,
                  "id": 100607,
                  "nodeType": "Return",
                  "src": "16420:19:381"
                }
              ]
            },
            "baseFunctions": [
              40487
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "16344:14:381",
            "overrides": {
              "id": 100601,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "16383:8:381"
            },
            "parameters": {
              "id": 100600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16358:2:381"
            },
            "returnParameters": {
              "id": 100604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100603,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100609,
                  "src": "16401:7:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16401:7:381",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16400:9:381"
            },
            "scope": 100636,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 100622,
            "nodeType": "FunctionDefinition",
            "src": "16452:176:381",
            "nodes": [],
            "body": {
              "id": 100621,
              "nodeType": "Block",
              "src": "16566:62:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100617,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40843,
                        "src": "16583:25:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$40843_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 100618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40813,
                      "src": "16583:36:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 100619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16583:38:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 100616,
                  "id": 100620,
                  "nodeType": "Return",
                  "src": "16576:45:381"
                }
              ]
            },
            "baseFunctions": [
              40813,
              49109
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "16461:10:381",
            "overrides": {
              "id": 100613,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 100611,
                  "name": "Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49119,
                  "src": "16505:7:381"
                },
                {
                  "id": 100612,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40843,
                  "src": "16514:25:381"
                }
              ],
              "src": "16496:44:381"
            },
            "parameters": {
              "id": 100610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16471:2:381"
            },
            "returnParameters": {
              "id": 100616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100615,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "16558:6:381",
                  "nodeType": "VariableDeclaration",
                  "scope": 100622,
                  "src": "16550:14:381",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16550:7:381",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16549:16:381"
            },
            "scope": 100636,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 100635,
            "nodeType": "FunctionDefinition",
            "src": "16634:172:381",
            "nodes": [],
            "body": {
              "id": 100634,
              "nodeType": "Block",
              "src": "16746:60:381",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100630,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40843,
                        "src": "16763:25:381",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$40843_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 100631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40838,
                      "src": "16763:34:381",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 100632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16763:36:381",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 100629,
                  "id": 100633,
                  "nodeType": "Return",
                  "src": "16756:43:381"
                }
              ]
            },
            "baseFunctions": [
              40838,
              49118
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "16643:8:381",
            "overrides": {
              "id": 100626,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 100624,
                  "name": "Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49119,
                  "src": "16685:7:381"
                },
                {
                  "id": 100625,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40843,
                  "src": "16694:25:381"
                }
              ],
              "src": "16676:44:381"
            },
            "parameters": {
              "id": 100623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16651:2:381"
            },
            "returnParameters": {
              "id": 100629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100628,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100635,
                  "src": "16730:14:381",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 100627,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16730:5:381",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16729:16:381"
            },
            "scope": 100636,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 99617,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39526,
              "src": "2255:16:381"
            },
            "id": 99618,
            "nodeType": "InheritanceSpecifier",
            "src": "2255:16:381"
          },
          {
            "baseName": {
              "id": 99619,
              "name": "PlatformFee",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42603,
              "src": "2277:11:381"
            },
            "id": 99620,
            "nodeType": "InheritanceSpecifier",
            "src": "2277:11:381"
          },
          {
            "baseName": {
              "id": 99621,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43092,
              "src": "2294:7:381"
            },
            "id": 99622,
            "nodeType": "InheritanceSpecifier",
            "src": "2294:7:381"
          },
          {
            "baseName": {
              "id": 99623,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42704,
              "src": "2307:11:381"
            },
            "id": 99624,
            "nodeType": "InheritanceSpecifier",
            "src": "2307:11:381"
          },
          {
            "baseName": {
              "id": 99625,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41616,
              "src": "2324:7:381"
            },
            "id": 99626,
            "nodeType": "InheritanceSpecifier",
            "src": "2324:7:381"
          },
          {
            "baseName": {
              "id": 99627,
              "name": "BurnToClaim",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39418,
              "src": "2337:11:381"
            },
            "id": 99628,
            "nodeType": "InheritanceSpecifier",
            "src": "2337:11:381"
          },
          {
            "baseName": {
              "id": 99629,
              "name": "DelayedReveal",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39782,
              "src": "2354:13:381"
            },
            "id": 99630,
            "nodeType": "InheritanceSpecifier",
            "src": "2354:13:381"
          },
          {
            "baseName": {
              "id": 99631,
              "name": "LazyMint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41220,
              "src": "2373:8:381"
            },
            "id": 99632,
            "nodeType": "InheritanceSpecifier",
            "src": "2373:8:381"
          },
          {
            "baseName": {
              "id": 99633,
              "name": "Drop",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40552,
              "src": "2387:4:381"
            },
            "id": 99634,
            "nodeType": "InheritanceSpecifier",
            "src": "2387:4:381"
          },
          {
            "baseName": {
              "id": 99635,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40843,
              "src": "2397:25:381"
            },
            "id": 99636,
            "nodeType": "InheritanceSpecifier",
            "src": "2397:25:381"
          },
          {
            "baseName": {
              "id": 99637,
              "name": "DefaultOperatorFiltererUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39550,
              "src": "2428:34:381"
            },
            "id": 99638,
            "nodeType": "InheritanceSpecifier",
            "src": "2428:34:381"
          },
          {
            "baseName": {
              "id": 99639,
              "name": "ERC721AUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11709,
              "src": "2468:18:381"
            },
            "id": 99640,
            "nodeType": "InheritanceSpecifier",
            "src": "2468:18:381"
          }
        ],
        "canonicalName": "BurnToClaimDrop721Logic",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          100636,
          11709,
          15034,
          15080,
          14963,
          8680,
          39550,
          41483,
          41312,
          33936,
          40843,
          40552,
          33356,
          33091,
          33068,
          41220,
          39193,
          33595,
          39782,
          33251,
          39418,
          32993,
          41616,
          33959,
          42704,
          34121,
          43092,
          34185,
          14831,
          14687,
          49119,
          41093,
          42603,
          34100,
          39526,
          33220
        ],
        "name": "BurnToClaimDrop721Logic",
        "nameLocation": "2224:23:381",
        "scope": 100637,
        "usedErrors": [
          14975,
          14978,
          14981,
          14984,
          14987,
          14990,
          14993,
          14996,
          14999,
          15002,
          15005,
          15008,
          15011
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 381
}