{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entrypoint",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isAdmin",
          "type": "bool"
        }
      ],
      "name": "AdminUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "authorizingSigner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "targetSigner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "approvedTargets",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "nativeTokenLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "permissionStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "permissionEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "reqValidityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "reqValidityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct IAccountPermissions.SignerPermissionRequest",
          "name": "permissions",
          "type": "tuple"
        }
      ],
      "name": "SignerPermissionsUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "addDeposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllActiveSigners",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "approvedTargets",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "nativeTokenLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "startTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "endTimestamp",
              "type": "uint128"
            }
          ],
          "internalType": "struct IAccountPermissions.SignerPermissions[]",
          "name": "signers",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllAdmins",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllSigners",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "approvedTargets",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "nativeTokenLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "startTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "endTimestamp",
              "type": "uint128"
            }
          ],
          "internalType": "struct IAccountPermissions.SignerPermissions[]",
          "name": "signers",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "getPermissionsForSigner",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "approvedTargets",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "nativeTokenLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "startTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "endTimestamp",
              "type": "uint128"
            }
          ],
          "internalType": "struct IAccountPermissions.SignerPermissions",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "isActiveSigner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "magicValue",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "_userOp",
          "type": "tuple"
        }
      ],
      "name": "isValidSigner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isAdmin",
          "type": "bool"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "approvedTargets",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "nativeTokenLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "permissionStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "permissionEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "reqValidityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "reqValidityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct IAccountPermissions.SignerPermissionRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "setPermissionsForSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "missingAccountFunds",
          "type": "uint256"
        }
      ],
      "name": "validateUserOp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "validationData",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "approvedTargets",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "nativeTokenLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "permissionStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "permissionEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "reqValidityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "reqValidityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct IAccountPermissions.SignerPermissionRequest",
          "name": "req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "verifySignerPermissionRequest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawDepositTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6101806040523480156200001257600080fd5b506040516200326f3803806200326f833981016040819052620000359162000261565b60408051808201825260078152661058d8dbdd5b9d60ca1b6020808301918252835180850190945260018452603160f81b908401528151902060e08190527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f620001128184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060c05261012052506200012d925050620001479050565b6001600160a01b03908116610140521661016052620002a0565b60006200015e6200022460201b6200155d1760201c565b805490915060ff808216916101009004168015620001d25760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60ff82811610156200021f57825460ff191660ff90811784556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b7f627d6cbb4eb558f37de3c2ec08b04710e54e06be936a302f087f7bfb80f39ae090565b6001600160a01b03811681146200025e57600080fd5b50565b600080604083850312156200027557600080fd5b8251620002828162000248565b6020840151909250620002958162000248565b809150509250929050565b60805160a05160c05160e05161010051610120516101405161016051612f466200032960003960006110ff01526000818161031c0152818161187f015281816118af0152818161192b0152818161196e01526119ba015260006121c301526000612212015260006121ed01526000612146015260006121700152600061219a0152612f466000f3fe6080604052600436106100f35760003560e01c80631626ba7e146100ff5780631dd756c51461013d57806324d7806c1461016d5780633a871cdd1461018d57806340053da6146101bb5780634a58db19146101dd5780634b0bddd2146101e55780634d44560d1461020557806373e925d6146102255780637dff5a79146102645780638b52d72314610284578063ac9650d8146102a6578063b0d691fe146102d3578063c399ec88146102f5578063c45a01551461030a578063d087d2881461033e578063d1f5789414610353578063d42f2f3514610373578063e9523c9714610388578063f15d424e146103aa57600080fd5b366100fa57005b600080fd5b34801561010b57600080fd5b5061011f61011a366004612398565b6103d7565b6040516001600160e01b031990911681526020015b60405180910390f35b34801561014957600080fd5b5061015d61015836600461240c565b6104b7565b6040519015158152602001610134565b34801561017957600080fd5b5061015d610188366004612451565b610735565b34801561019957600080fd5b506101ad6101a836600461246e565b610765565b604051908152602001610134565b3480156101c757600080fd5b506101db6101d63660046124fc565b61078b565b005b6101db610b5d565b3480156101f157600080fd5b506101db61020036600461256d565b610bc5565b34801561021157600080fd5b506101db6102203660046125ab565b610bf8565b34801561023157600080fd5b506102456102403660046124fc565b610c8e565b6040805192151583526001600160a01b03909116602083015201610134565b34801561027057600080fd5b5061015d61027f366004612451565b610ce0565b34801561029057600080fd5b50610299610d8f565b6040516101349190612679565b3480156102b257600080fd5b506102c66102c13660046126db565b611009565b60405161013491906127ab565b3480156102df57600080fd5b506102e86110fd565b6040516101349190612800565b34801561030157600080fd5b506101ad611121565b34801561031657600080fd5b506102e87f000000000000000000000000000000000000000000000000000000000000000081565b34801561034a57600080fd5b506101ad61119c565b34801561035f57600080fd5b506101db61036e366004612814565b6111db565b34801561037f57600080fd5b50610299611301565b34801561039457600080fd5b5061039d61147f565b604051610134919061285b565b3480156103b657600080fd5b506103ca6103c5366004612451565b61149c565b60405161013491906128a8565b6000806103e48484611581565b90506103ef81610735565b156104045750630b135d3f60e11b90506104b1565b600061040e6115a5565b6001600160a01b03831660009081526006820160205260409020909150339061043790826115c9565b6104945760405162461bcd60e51b8152602060048201526024808201527f4163636f756e743a2063616c6c6572206e6f7420617070726f7665642074617260448201526333b2ba1760e11b60648201526084015b60405180910390fd5b61049d83610ce0565b156104ad57630b135d3f60e11b93505b5050505b92915050565b6000806104c26115a5565b6001600160a01b038516600090815260048201602052604090205490915060ff16156104f25760019150506104b1565b6001600160a01b03841660009081526005820160209081526040918290208251606081018452815481526001909101546001600160801b03808216938301849052600160801b909104169281019290925242108061055d575080604001516001600160801b03164210155b8061058857506001600160a01b03851660009081526006830160205260409020610586906115eb565b155b15610598576000925050506104b1565b60006105af6105aa60608701876128bb565b6115f5565b90506001600160e01b03198116635b0e93fb60e11b1415610633576000806105e26105dd60608901896128bb565b61162f565b91509150808460000151108061061957506001600160a01b0388166000908152600686016020526040902061061790836115c9565b155b1561062c576000955050505050506104b1565b5050610729565b6001600160e01b031981166323f0ed1560e11b141561071d5760008061066461065f60608901896128bb565b611694565b509150915060005b82518110156107155781818151811061068757610687612901565b6020026020010151856000015110806106ef57506106ed8382815181106106b0576106b0612901565b60200260200101518760060160008c6001600160a01b03166001600160a01b031681526020019081526020016000206115c990919063ffffffff16565b155b1561070357600096505050505050506104b1565b8061070d8161292d565b91505061066c565b505050610729565b600093505050506104b1565b50600195945050505050565b6000806107406115a5565b6001600160a01b03909316600090815260049093016020525050604090205460ff1690565b600061076f6116e1565b610779848461174a565b9050610784826117f1565b9392505050565b600061079a6020850185612451565b90506107a581610735565b156108095760405162461bcd60e51b815260206004820152602e60248201527f4163636f756e745065726d697373696f6e733a207369676e657220697320616c60448201526d3932b0b23c9030b71030b236b4b760911b606482015260840161048b565b4261081a60c0860160a08701612964565b6001600160801b031611158015610848575061083c60e0850160c08601612964565b6001600160801b031642105b6108b05760405162461bcd60e51b815260206004820152603360248201527f4163636f756e745065726d697373696f6e733a20696e76616c69642072657175604482015272195cdd081d985b1a591a5d1e481c195c9a5bd9606a1b606482015260840161048b565b6000806108be868686610c8e565b915091508161091d5760405162461bcd60e51b815260206004820152602560248201527f4163636f756e745065726d697373696f6e733a20696e76616c6964207369676e604482015264617475726560d81b606482015260840161048b565b60006109276115a5565b9050610936600282018561183e565b5060e08701356000908152600782016020908152604091829020805460ff19166001179055815160608082018452928a01358152919082019061097f9060808b01908b01612964565b6001600160801b0316815260200161099d60a08a0160808b01612964565b6001600160801b039081169091526001600160a01b038616600090815260058401602090815260408083208551815585830151958201518516600160801b02959094169490941760019093019290925560068401909152908120610a0090611853565b805190915060005b81811015610a7557610a62838281518110610a2557610a25612901565b60200260200101518560060160008a6001600160a01b03166001600160a01b0316815260200190815260200160002061186090919063ffffffff16565b50610a6e60018261297f565b9050610a08565b506000610a8560208b018b612997565b9050905060005b81811015610afc57610ae9610aa460208d018d612997565b83818110610ab457610ab4612901565b9050602002016020810190610ac99190612451565b6001600160a01b038a16600090815260068801602052604090209061183e565b50610af560018261297f565b9050610a8c565b50610b068a611875565b866001600160a01b0316856001600160a01b03167f09ac2cdf09c127af4eedd5aab0a6ca1224c4ae5586d5339657f7fa675d079b948c604051610b499190612a71565b60405180910390a350505050505050505050565b610b656110fd565b6001600160a01b031663b760faf934306040518363ffffffff1660e01b8152600401610b919190612800565b6000604051808303818588803b158015610baa57600080fd5b505af1158015610bbe573d6000803e3d6000fd5b5050505050565b610bce33610735565b610bea5760405162461bcd60e51b815260040161048b90612b45565b610bf48282611917565b5050565b610c0133610735565b610c1d5760405162461bcd60e51b815260040161048b90612b45565b610c256110fd565b60405163040b850f60e31b81526001600160a01b03848116600483015260248201849052919091169063205c2878906044015b600060405180830381600087803b158015610c7257600080fd5b505af1158015610c86573d6000803e3d6000fd5b505050505050565b6000806000610c9b6115a5565b9050610ca88686866119ef565b60e0870135600090815260078301602052604090205490925060ff16158015610cd55750610cd582610735565b925050935093915050565b600080610ceb6115a5565b6001600160a01b03841660009081526005820160209081526040918290208251606081018452815481526001909101546001600160801b03808216938301849052600160801b9091041692810192909252919250904210801590610d5b575080604001516001600160801b031642105b8015610d8757506001600160a01b03841660009081526006830160205260408120610d85906115eb565b115b949350505050565b60606000610d9b6115a5565b90506000610dab82600201611853565b8051909150600080826001600160401b03811115610dcb57610dcb6122e3565b604051908082528060200260200182016040528015610df4578160200160208202803683370190505b50905060005b83811015610e79576000858281518110610e1657610e16612901565b602002602001015190506000610e2b82610ce0565b905080848481518110610e4057610e40612901565b911515602092830291909101909101528015610e645784610e608161292d565b9550505b50610e72905060018261297f565b9050610dfa565b50816001600160401b03811115610e9257610e926122e3565b604051908082528060200260200182016040528015610ecb57816020015b610eb8612299565b815260200190600190039081610eb05790505b5095506000805b84811015610fff57828181518110610eec57610eec612901565b6020026020010151610efd57610fed565b6000868281518110610f1157610f11612901565b6020908102919091018101516001600160a01b038116600081815260058c01845260408082208151606081018352815481526001909101546001600160801b0380821683890152600160801b9091041681830152815160a08101835284815293835260068e018652912092945092909190820190610f8e90611853565b81526020018260000151815260200182602001516001600160801b0316815260200182604001516001600160801b03168152508a8580610fcd9061292d565b965081518110610fdf57610fdf612901565b602002602001018190525050505b610ff860018261297f565b9050610ed2565b5050505050505090565b6060816001600160401b03811115611023576110236122e3565b60405190808252806020026020018201604052801561105657816020015b60608152602001906001900390816110415790505b50905060005b828110156110f6576110c63085858481811061107a5761107a612901565b905060200281019061108c91906128bb565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a4b92505050565b8282815181106110d8576110d8612901565b602002602001018190525080806110ee9061292d565b91505061105c565b5092915050565b7f000000000000000000000000000000000000000000000000000000000000000090565b600061112b6110fd565b6001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016111569190612800565b602060405180830381865afa158015611173573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111979190612b8f565b905090565b60006111a66110fd565b604051631aab3f0d60e11b8152306004820152600060248201526001600160a01b0391909116906335567e1a90604401611156565b60006111e561155d565b805490915060ff808216916101009004168015808015611208575060018360ff16105b80611227575061121730611a70565b15801561122757508260ff166001145b61128a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161048b565b835460ff1916600117845580156112a957835461ff0019166101001784555b6112b4876001611917565b80156112f857835461ff0019168455604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6060600061130d6115a5565b9050600061131d82600201611853565b8051909150806001600160401b0381111561133a5761133a6122e3565b60405190808252806020026020018201604052801561137357816020015b611360612299565b8152602001906001900390816113585790505b50935060005b8181101561147857600083828151811061139557611395612901565b6020908102919091018101516001600160a01b038116600081815260058901845260408082208151606081018352815481526001909101546001600160801b0380821683890152600160801b9091041681830152815160a08101835284815293835260068b01865291209294509290919082019061141290611853565b81526020018260000151815260200182602001516001600160801b0316815260200182604001516001600160801b031681525087848151811061145757611457612901565b60200260200101819052505050600181611471919061297f565b9050611379565b5050505090565b6060600061148b6115a5565b905061149681611853565b91505090565b6114a4612299565b60006114ae6115a5565b6001600160a01b038416600081815260058301602090815260408083208151606081018352815481526001909101546001600160801b0380821683860152600160801b9091041681830152815160a081018352858152948452600686018352922093945090929082019061152190611853565b81526020018260000151815260200182602001516001600160801b0316815260200182604001516001600160801b031681525092505050919050565b7f627d6cbb4eb558f37de3c2ec08b04710e54e06be936a302f087f7bfb80f39ae090565b60008060006115908585611a7f565b9150915061159d81611ac5565b509392505050565b7ff2776159535489b2c8217c06dac58993e45cb245272f968642d4d3ef6aa7615090565b6001600160a01b03811660009081526001830160205260408120541515610784565b60006104b1825490565b600060048210156116185760405162461bcd60e51b815260040161048b90612ba8565b611626600460008486612bd0565b61078491612bfa565b60008060448310156116535760405162461bcd60e51b815260040161048b90612ba8565b611661602460048587612bd0565b81019061166e9190612451565b915061167e604460248587612bd0565b81019061168b9190612c2a565b90509250929050565b6060808060648410156116b95760405162461bcd60e51b815260040161048b90612ba8565b6116c68460048188612bd0565b8101906116d39190612d50565b919790965090945092505050565b6116e96110fd565b6001600160a01b0316336001600160a01b0316146117485760405162461bcd60e51b815260206004820152601c60248201527b1858d8dbdd5b9d0e881b9bdd08199c9bdb48115b9d1c9e541bda5b9d60221b604482015260640161048b565b565b7b0ca2ba3432b932bab69029b4b3b732b21026b2b9b9b0b3b29d05199960211b6000908152601c829052603c812060006117c861178b6101408701876128bb565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086939250506115819050565b90506117d481866104b7565b6117e3576001925050506104b1565b506000949350505050565b50565b80156117ee57604051600090339060001990849084818181858888f193505050503d8060008114610bbe576040519150601f19603f3d011682016040523d82523d6000602084013e610bbe565b6000610784836001600160a01b038416611c0e565b6060600061078483611c5d565b6000610784836001600160a01b038416611cb9565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163b156117ee576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ed9e4b7d6118e16020840184612451565b6040518263ffffffff1660e01b81526004016118fd9190612800565b600060405180830381600087803b158015610baa57600080fd5b6119218282611dac565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163b15610bf45780156119a35760405163ed9e4b7d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed9e4b7d90610c58908590600401612800565b60405163776c4eb960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063eed89d7290610c58908590600401612800565b6000610d8783838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a459250611a399150889050611e4e565b80519060200120611f77565b90611581565b60606107848383604051806060016040528060278152602001612eea60279139611fa4565b6001600160a01b03163b151590565b600080825160411415611ab65760208301516040840151606085015160001a611aaa8782858561207f565b94509450505050611abe565b506000905060025b9250929050565b6000816004811115611ad957611ad9612e35565b1415611ae25750565b6001816004811115611af657611af6612e35565b1415611b3f5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b604482015260640161048b565b6002816004811115611b5357611b53612e35565b1415611ba15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161048b565b6003816004811115611bb557611bb5612e35565b14156117ee5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161048b565b6000818152600183016020526040812054611c55575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104b1565b5060006104b1565b606081600001805480602002602001604051908101604052809291908181526020018280548015611cad57602002820191906000526020600020905b815481526020019060010190808311611c99575b50505050509050919050565b60008181526001830160205260408120548015611da2576000611cdd600183612e4b565b8554909150600090611cf190600190612e4b565b9050818114611d56576000866000018281548110611d1157611d11612901565b9060005260206000200154905080876000018481548110611d3457611d34612901565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611d6757611d67612e62565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104b1565b60009150506104b1565b6000611db66115a5565b6001600160a01b03841660009081526004820160205260409020805460ff19168415801591909117909155909150611df857611df2818461183e565b50611e04565b611e028184611860565b505b826001600160a01b03167f235bc17e7930760029e9f4d860a2a8089976de5b381cf8380fc11c1d88a1113383604051611e41911515815260200190565b60405180910390a2505050565b60607f1652558f82172f3162b9e179c9f4ce0654bac7c4802d6326a2868cc56afae202611e7e6020840184612451565b611e8b6020850185612997565b604051602001611e9c929190612e78565b604051602081830303815290604052805190602001208460400135856060016020810190611eca9190612964565b611eda60a0880160808901612964565b611eea60c0890160a08a01612964565b611efa60e08a0160c08b01612964565b6040805160208101999099526001600160a01b0390971696880196909652606087019490945260808601929092526001600160801b0390811660a086015290811660c085015290811660e0848101919091529116610100830152830135610120820152610140016040516020818303038152906040529050919050565b60006104b1611f84612139565b8360405161190160f01b8152600281019290925260228201526042902090565b6060611faf84611a70565b61200a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161048b565b600080856001600160a01b0316856040516120259190612eba565b600060405180830381855af49150503d8060008114612060576040519150601f19603f3d011682016040523d82523d6000602084013e612065565b606091505b5091509150612075828286612260565b9695505050505050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311156120ac5750600090506003612130565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612100573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661212957600060019250925050612130565b9150600090505b94509492505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561219257507f000000000000000000000000000000000000000000000000000000000000000046145b156121bc57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6060831561226f575081610784565b82511561227f5782518084602001fd5b8160405162461bcd60e51b815260040161048b9190612ed6565b6040518060a0016040528060006001600160a01b03168152602001606081526020016000815260200160006001600160801b0316815260200160006001600160801b031681525090565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612321576123216122e3565b604052919050565b600082601f83011261233a57600080fd5b81356001600160401b03811115612353576123536122e3565b612366601f8201601f19166020016122f9565b81815284602083860101111561237b57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156123ab57600080fd5b8235915060208301356001600160401b038111156123c857600080fd5b6123d485828601612329565b9150509250929050565b6001600160a01b03811681146117ee57600080fd5b6000610160828403121561240657600080fd5b50919050565b6000806040838503121561241f57600080fd5b823561242a816123de565b915060208301356001600160401b0381111561244557600080fd5b6123d4858286016123f3565b60006020828403121561246357600080fd5b8135610784816123de565b60008060006060848603121561248357600080fd5b83356001600160401b0381111561249957600080fd5b6124a5868287016123f3565b9660208601359650604090950135949350505050565b60008083601f8401126124cd57600080fd5b5081356001600160401b038111156124e457600080fd5b602083019150836020828501011115611abe57600080fd5b60008060006040848603121561251157600080fd5b83356001600160401b038082111561252857600080fd5b90850190610100828803121561253d57600080fd5b9093506020850135908082111561255357600080fd5b50612560868287016124bb565b9497909650939450505050565b6000806040838503121561258057600080fd5b823561258b816123de565b9150602083013580151581146125a057600080fd5b809150509250929050565b600080604083850312156125be57600080fd5b82356125c9816123de565b946020939093013593505050565b6001600160801b03169052565b80516001600160a01b03908116835260208083015160a082860181905281519086018190526000939183019290849060c08801905b8083101561263b57855185168252948301946001929092019190830190612619565b50604087015160408901526060870151945061265a60608901866125d7565b6080870151945061266e60808901866125d7565b979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156126ce57603f198886030184526126bc8583516125e4565b945092850192908501906001016126a0565b5092979650505050505050565b600080602083850312156126ee57600080fd5b82356001600160401b038082111561270557600080fd5b818501915085601f83011261271957600080fd5b81358181111561272857600080fd5b8660208260051b850101111561273d57600080fd5b60209290920196919550909350505050565b60005b8381101561276a578181015183820152602001612752565b83811115612779576000848401525b50505050565b6000815180845261279781602086016020860161274f565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156126ce57603f198886030184526127ee85835161277f565b945092850192908501906001016127d2565b6001600160a01b0391909116815260200190565b60008060006040848603121561282957600080fd5b8335612834816123de565b925060208401356001600160401b0381111561284f57600080fd5b612560868287016124bb565b6020808252825182820181905260009190848201906040850190845b8181101561289c5783516001600160a01b031683529284019291840191600101612877565b50909695505050505050565b60208152600061078460208301846125e4565b6000808335601e198436030181126128d257600080fd5b8301803591506001600160401b038211156128ec57600080fd5b602001915036819003821315611abe57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561294157612941612917565b5060010190565b80356001600160801b038116811461295f57600080fd5b919050565b60006020828403121561297657600080fd5b61078482612948565b6000821982111561299257612992612917565b500190565b6000808335601e198436030181126129ae57600080fd5b8301803591506001600160401b038211156129c857600080fd5b6020019150600581901b3603821315611abe57600080fd5b6000808335601e198436030181126129f757600080fd5b83016020810192503590506001600160401b03811115612a1657600080fd5b8060051b3603831315611abe57600080fd5b8183526000602080850194508260005b85811015612a66578135612a4b816123de565b6001600160a01b031687529582019590820190600101612a38565b509495945050505050565b6020815260008235612a82816123de565b6001600160a01b0316602083810191909152612aa0908401846129e0565b610100806040860152612ab861012086018385612a28565b925060408601356060860152612ad060608701612948565b9150612adf60808601836125d7565b612aeb60808701612948565b9150612afa60a08601836125d7565b612b0660a08701612948565b9150612b1560c08601836125d7565b612b2160c08701612948565b9150612b3060e08601836125d7565b60e08601358186015250508091505092915050565b6020808252602a908201527f4163636f756e745065726d697373696f6e733a2063616c6c6572206973206e6f6040820152693a1030b71030b236b4b760b11b606082015260800190565b600060208284031215612ba157600080fd5b5051919050565b6020808252600e908201526d11185d18481d1bdbc81cda1bdc9d60921b604082015260600190565b60008085851115612be057600080fd5b83861115612bed57600080fd5b5050820193919092039150565b6001600160e01b03198135818116916004851015612c225780818660040360031b1b83161692505b505092915050565b600060208284031215612c3c57600080fd5b5035919050565b60006001600160401b03821115612c5c57612c5c6122e3565b5060051b60200190565b600082601f830112612c7757600080fd5b81356020612c8c612c8783612c43565b6122f9565b82815260059290921b84018101918181019086841115612cab57600080fd5b8286015b84811015612cc65780358352918301918301612caf565b509695505050505050565b600082601f830112612ce257600080fd5b81356020612cf2612c8783612c43565b82815260059290921b84018101918181019086841115612d1157600080fd5b8286015b84811015612cc65780356001600160401b03811115612d345760008081fd5b612d428986838b0101612329565b845250918301918301612d15565b600080600060608486031215612d6557600080fd5b83356001600160401b0380821115612d7c57600080fd5b818601915086601f830112612d9057600080fd5b81356020612da0612c8783612c43565b82815260059290921b8401810191818101908a841115612dbf57600080fd5b948201945b83861015612de6578535612dd7816123de565b82529482019490820190612dc4565b97505087013592505080821115612dfc57600080fd5b612e0887838801612c66565b93506040860135915080821115612e1e57600080fd5b50612e2b86828701612cd1565b9150509250925092565b634e487b7160e01b600052602160045260246000fd5b600082821015612e5d57612e5d612917565b500390565b634e487b7160e01b600052603160045260246000fd5b60008184825b85811015612eaf578135612e91816123de565b6001600160a01b031683526020928301929190910190600101612e7e565b509095945050505050565b60008251612ecc81846020870161274f565b9190910192915050565b602081526000610784602083018461277f56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220fb6ee4b6c3a98a442ffa1e336598778dd230fa43d8364856fb7382dd535ff9b164736f6c634300080c0033",
    "sourceMap": "1314:8165:313:-:0;;;2167:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2455:602:240;;;;;;;;;;;-1:-1:-1;;;2455:602:240;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2455:602:240;;;;2541:22;;;;2778:25;;;;2597;2813:31;;;;2873:13;2854:32;;2455:602;;;2651:117;2923:58;2651:117;2541:22;2597:25;3633:73;;;;;;859:25:640;;;900:18;;;893:34;;;943:18;;;936:34;;;3677:13:240;986:18:640;;;979:34;3700:4:240;1029:19:640;;;1022:61;3597:7:240;;831:19:640;;3633:73:240;;;;;;;;;;;;3623:84;;;;;;3616:91;;3457:257;;;;;;2923:58;2896:85;;3014:4;2991:28;;3029:21;;-1:-1:-1;2255:22:313::1;::::0;-1:-1:-1;;2255:20:313::1;:22:::0;-1:-1:-1;2255:22:313:i:1;:::-;-1:-1:-1::0;;;;;2287:18:313;;::::1;;::::0;2315:32:::1;;::::0;1314:8165;;3835:446:176;3894:29;3926:25;:23;;;;;:25;;:::i;:::-;3982:16;;3894:57;;-1:-1:-1;3982:16:176;;;;;;4029:17;;;4065:14;;4057:66;;;;-1:-1:-1;;;4057:66:176;;1296:2:640;4057:66:176;;;1278:21:640;1335:2;1315:18;;;1308:30;1374:34;1354:18;;;1347:62;-1:-1:-1;;;1425:18:640;;;1418:37;1472:19;;4057:66:176;;;;;;;;4152:15;4137:30;;;;4133:142;;;4183:34;;-1:-1:-1;;4183:34:176;4202:15;4183:34;;;;;4236:28;;1644:36:640;;;4236:28:176;;1632:2:640;1617:18;4236:28:176;;;;;;;4133:142;3884:397;;;3835:446::o;497:193::-;242:25;;497:193::o;14:144:640:-;-1:-1:-1;;;;;102:31:640;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:432::-;263:6;271;324:2;312:9;303:7;299:23;295:32;292:52;;;340:1;337;330:12;292:52;372:9;366:16;391:44;429:5;391:44;:::i;:::-;504:2;489:18;;483:25;454:5;;-1:-1:-1;517:46:640;483:25;517:46;:::i;:::-;582:7;572:17;;;163:432;;;;;:::o;1502:184::-;1314:8165:313;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100f35760003560e01c80631626ba7e146100ff5780631dd756c51461013d57806324d7806c1461016d5780633a871cdd1461018d57806340053da6146101bb5780634a58db19146101dd5780634b0bddd2146101e55780634d44560d1461020557806373e925d6146102255780637dff5a79146102645780638b52d72314610284578063ac9650d8146102a6578063b0d691fe146102d3578063c399ec88146102f5578063c45a01551461030a578063d087d2881461033e578063d1f5789414610353578063d42f2f3514610373578063e9523c9714610388578063f15d424e146103aa57600080fd5b366100fa57005b600080fd5b34801561010b57600080fd5b5061011f61011a366004612398565b6103d7565b6040516001600160e01b031990911681526020015b60405180910390f35b34801561014957600080fd5b5061015d61015836600461240c565b6104b7565b6040519015158152602001610134565b34801561017957600080fd5b5061015d610188366004612451565b610735565b34801561019957600080fd5b506101ad6101a836600461246e565b610765565b604051908152602001610134565b3480156101c757600080fd5b506101db6101d63660046124fc565b61078b565b005b6101db610b5d565b3480156101f157600080fd5b506101db61020036600461256d565b610bc5565b34801561021157600080fd5b506101db6102203660046125ab565b610bf8565b34801561023157600080fd5b506102456102403660046124fc565b610c8e565b6040805192151583526001600160a01b03909116602083015201610134565b34801561027057600080fd5b5061015d61027f366004612451565b610ce0565b34801561029057600080fd5b50610299610d8f565b6040516101349190612679565b3480156102b257600080fd5b506102c66102c13660046126db565b611009565b60405161013491906127ab565b3480156102df57600080fd5b506102e86110fd565b6040516101349190612800565b34801561030157600080fd5b506101ad611121565b34801561031657600080fd5b506102e87f000000000000000000000000000000000000000000000000000000000000000081565b34801561034a57600080fd5b506101ad61119c565b34801561035f57600080fd5b506101db61036e366004612814565b6111db565b34801561037f57600080fd5b50610299611301565b34801561039457600080fd5b5061039d61147f565b604051610134919061285b565b3480156103b657600080fd5b506103ca6103c5366004612451565b61149c565b60405161013491906128a8565b6000806103e48484611581565b90506103ef81610735565b156104045750630b135d3f60e11b90506104b1565b600061040e6115a5565b6001600160a01b03831660009081526006820160205260409020909150339061043790826115c9565b6104945760405162461bcd60e51b8152602060048201526024808201527f4163636f756e743a2063616c6c6572206e6f7420617070726f7665642074617260448201526333b2ba1760e11b60648201526084015b60405180910390fd5b61049d83610ce0565b156104ad57630b135d3f60e11b93505b5050505b92915050565b6000806104c26115a5565b6001600160a01b038516600090815260048201602052604090205490915060ff16156104f25760019150506104b1565b6001600160a01b03841660009081526005820160209081526040918290208251606081018452815481526001909101546001600160801b03808216938301849052600160801b909104169281019290925242108061055d575080604001516001600160801b03164210155b8061058857506001600160a01b03851660009081526006830160205260409020610586906115eb565b155b15610598576000925050506104b1565b60006105af6105aa60608701876128bb565b6115f5565b90506001600160e01b03198116635b0e93fb60e11b1415610633576000806105e26105dd60608901896128bb565b61162f565b91509150808460000151108061061957506001600160a01b0388166000908152600686016020526040902061061790836115c9565b155b1561062c576000955050505050506104b1565b5050610729565b6001600160e01b031981166323f0ed1560e11b141561071d5760008061066461065f60608901896128bb565b611694565b509150915060005b82518110156107155781818151811061068757610687612901565b6020026020010151856000015110806106ef57506106ed8382815181106106b0576106b0612901565b60200260200101518760060160008c6001600160a01b03166001600160a01b031681526020019081526020016000206115c990919063ffffffff16565b155b1561070357600096505050505050506104b1565b8061070d8161292d565b91505061066c565b505050610729565b600093505050506104b1565b50600195945050505050565b6000806107406115a5565b6001600160a01b03909316600090815260049093016020525050604090205460ff1690565b600061076f6116e1565b610779848461174a565b9050610784826117f1565b9392505050565b600061079a6020850185612451565b90506107a581610735565b156108095760405162461bcd60e51b815260206004820152602e60248201527f4163636f756e745065726d697373696f6e733a207369676e657220697320616c60448201526d3932b0b23c9030b71030b236b4b760911b606482015260840161048b565b4261081a60c0860160a08701612964565b6001600160801b031611158015610848575061083c60e0850160c08601612964565b6001600160801b031642105b6108b05760405162461bcd60e51b815260206004820152603360248201527f4163636f756e745065726d697373696f6e733a20696e76616c69642072657175604482015272195cdd081d985b1a591a5d1e481c195c9a5bd9606a1b606482015260840161048b565b6000806108be868686610c8e565b915091508161091d5760405162461bcd60e51b815260206004820152602560248201527f4163636f756e745065726d697373696f6e733a20696e76616c6964207369676e604482015264617475726560d81b606482015260840161048b565b60006109276115a5565b9050610936600282018561183e565b5060e08701356000908152600782016020908152604091829020805460ff19166001179055815160608082018452928a01358152919082019061097f9060808b01908b01612964565b6001600160801b0316815260200161099d60a08a0160808b01612964565b6001600160801b039081169091526001600160a01b038616600090815260058401602090815260408083208551815585830151958201518516600160801b02959094169490941760019093019290925560068401909152908120610a0090611853565b805190915060005b81811015610a7557610a62838281518110610a2557610a25612901565b60200260200101518560060160008a6001600160a01b03166001600160a01b0316815260200190815260200160002061186090919063ffffffff16565b50610a6e60018261297f565b9050610a08565b506000610a8560208b018b612997565b9050905060005b81811015610afc57610ae9610aa460208d018d612997565b83818110610ab457610ab4612901565b9050602002016020810190610ac99190612451565b6001600160a01b038a16600090815260068801602052604090209061183e565b50610af560018261297f565b9050610a8c565b50610b068a611875565b866001600160a01b0316856001600160a01b03167f09ac2cdf09c127af4eedd5aab0a6ca1224c4ae5586d5339657f7fa675d079b948c604051610b499190612a71565b60405180910390a350505050505050505050565b610b656110fd565b6001600160a01b031663b760faf934306040518363ffffffff1660e01b8152600401610b919190612800565b6000604051808303818588803b158015610baa57600080fd5b505af1158015610bbe573d6000803e3d6000fd5b5050505050565b610bce33610735565b610bea5760405162461bcd60e51b815260040161048b90612b45565b610bf48282611917565b5050565b610c0133610735565b610c1d5760405162461bcd60e51b815260040161048b90612b45565b610c256110fd565b60405163040b850f60e31b81526001600160a01b03848116600483015260248201849052919091169063205c2878906044015b600060405180830381600087803b158015610c7257600080fd5b505af1158015610c86573d6000803e3d6000fd5b505050505050565b6000806000610c9b6115a5565b9050610ca88686866119ef565b60e0870135600090815260078301602052604090205490925060ff16158015610cd55750610cd582610735565b925050935093915050565b600080610ceb6115a5565b6001600160a01b03841660009081526005820160209081526040918290208251606081018452815481526001909101546001600160801b03808216938301849052600160801b9091041692810192909252919250904210801590610d5b575080604001516001600160801b031642105b8015610d8757506001600160a01b03841660009081526006830160205260408120610d85906115eb565b115b949350505050565b60606000610d9b6115a5565b90506000610dab82600201611853565b8051909150600080826001600160401b03811115610dcb57610dcb6122e3565b604051908082528060200260200182016040528015610df4578160200160208202803683370190505b50905060005b83811015610e79576000858281518110610e1657610e16612901565b602002602001015190506000610e2b82610ce0565b905080848481518110610e4057610e40612901565b911515602092830291909101909101528015610e645784610e608161292d565b9550505b50610e72905060018261297f565b9050610dfa565b50816001600160401b03811115610e9257610e926122e3565b604051908082528060200260200182016040528015610ecb57816020015b610eb8612299565b815260200190600190039081610eb05790505b5095506000805b84811015610fff57828181518110610eec57610eec612901565b6020026020010151610efd57610fed565b6000868281518110610f1157610f11612901565b6020908102919091018101516001600160a01b038116600081815260058c01845260408082208151606081018352815481526001909101546001600160801b0380821683890152600160801b9091041681830152815160a08101835284815293835260068e018652912092945092909190820190610f8e90611853565b81526020018260000151815260200182602001516001600160801b0316815260200182604001516001600160801b03168152508a8580610fcd9061292d565b965081518110610fdf57610fdf612901565b602002602001018190525050505b610ff860018261297f565b9050610ed2565b5050505050505090565b6060816001600160401b03811115611023576110236122e3565b60405190808252806020026020018201604052801561105657816020015b60608152602001906001900390816110415790505b50905060005b828110156110f6576110c63085858481811061107a5761107a612901565b905060200281019061108c91906128bb565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a4b92505050565b8282815181106110d8576110d8612901565b602002602001018190525080806110ee9061292d565b91505061105c565b5092915050565b7f000000000000000000000000000000000000000000000000000000000000000090565b600061112b6110fd565b6001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016111569190612800565b602060405180830381865afa158015611173573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111979190612b8f565b905090565b60006111a66110fd565b604051631aab3f0d60e11b8152306004820152600060248201526001600160a01b0391909116906335567e1a90604401611156565b60006111e561155d565b805490915060ff808216916101009004168015808015611208575060018360ff16105b80611227575061121730611a70565b15801561122757508260ff166001145b61128a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161048b565b835460ff1916600117845580156112a957835461ff0019166101001784555b6112b4876001611917565b80156112f857835461ff0019168455604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6060600061130d6115a5565b9050600061131d82600201611853565b8051909150806001600160401b0381111561133a5761133a6122e3565b60405190808252806020026020018201604052801561137357816020015b611360612299565b8152602001906001900390816113585790505b50935060005b8181101561147857600083828151811061139557611395612901565b6020908102919091018101516001600160a01b038116600081815260058901845260408082208151606081018352815481526001909101546001600160801b0380821683890152600160801b9091041681830152815160a08101835284815293835260068b01865291209294509290919082019061141290611853565b81526020018260000151815260200182602001516001600160801b0316815260200182604001516001600160801b031681525087848151811061145757611457612901565b60200260200101819052505050600181611471919061297f565b9050611379565b5050505090565b6060600061148b6115a5565b905061149681611853565b91505090565b6114a4612299565b60006114ae6115a5565b6001600160a01b038416600081815260058301602090815260408083208151606081018352815481526001909101546001600160801b0380821683860152600160801b9091041681830152815160a081018352858152948452600686018352922093945090929082019061152190611853565b81526020018260000151815260200182602001516001600160801b0316815260200182604001516001600160801b031681525092505050919050565b7f627d6cbb4eb558f37de3c2ec08b04710e54e06be936a302f087f7bfb80f39ae090565b60008060006115908585611a7f565b9150915061159d81611ac5565b509392505050565b7ff2776159535489b2c8217c06dac58993e45cb245272f968642d4d3ef6aa7615090565b6001600160a01b03811660009081526001830160205260408120541515610784565b60006104b1825490565b600060048210156116185760405162461bcd60e51b815260040161048b90612ba8565b611626600460008486612bd0565b61078491612bfa565b60008060448310156116535760405162461bcd60e51b815260040161048b90612ba8565b611661602460048587612bd0565b81019061166e9190612451565b915061167e604460248587612bd0565b81019061168b9190612c2a565b90509250929050565b6060808060648410156116b95760405162461bcd60e51b815260040161048b90612ba8565b6116c68460048188612bd0565b8101906116d39190612d50565b919790965090945092505050565b6116e96110fd565b6001600160a01b0316336001600160a01b0316146117485760405162461bcd60e51b815260206004820152601c60248201527b1858d8dbdd5b9d0e881b9bdd08199c9bdb48115b9d1c9e541bda5b9d60221b604482015260640161048b565b565b7b0ca2ba3432b932bab69029b4b3b732b21026b2b9b9b0b3b29d05199960211b6000908152601c829052603c812060006117c861178b6101408701876128bb565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086939250506115819050565b90506117d481866104b7565b6117e3576001925050506104b1565b506000949350505050565b50565b80156117ee57604051600090339060001990849084818181858888f193505050503d8060008114610bbe576040519150601f19603f3d011682016040523d82523d6000602084013e610bbe565b6000610784836001600160a01b038416611c0e565b6060600061078483611c5d565b6000610784836001600160a01b038416611cb9565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163b156117ee576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ed9e4b7d6118e16020840184612451565b6040518263ffffffff1660e01b81526004016118fd9190612800565b600060405180830381600087803b158015610baa57600080fd5b6119218282611dac565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163b15610bf45780156119a35760405163ed9e4b7d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed9e4b7d90610c58908590600401612800565b60405163776c4eb960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063eed89d7290610c58908590600401612800565b6000610d8783838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a459250611a399150889050611e4e565b80519060200120611f77565b90611581565b60606107848383604051806060016040528060278152602001612eea60279139611fa4565b6001600160a01b03163b151590565b600080825160411415611ab65760208301516040840151606085015160001a611aaa8782858561207f565b94509450505050611abe565b506000905060025b9250929050565b6000816004811115611ad957611ad9612e35565b1415611ae25750565b6001816004811115611af657611af6612e35565b1415611b3f5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b604482015260640161048b565b6002816004811115611b5357611b53612e35565b1415611ba15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161048b565b6003816004811115611bb557611bb5612e35565b14156117ee5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161048b565b6000818152600183016020526040812054611c55575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104b1565b5060006104b1565b606081600001805480602002602001604051908101604052809291908181526020018280548015611cad57602002820191906000526020600020905b815481526020019060010190808311611c99575b50505050509050919050565b60008181526001830160205260408120548015611da2576000611cdd600183612e4b565b8554909150600090611cf190600190612e4b565b9050818114611d56576000866000018281548110611d1157611d11612901565b9060005260206000200154905080876000018481548110611d3457611d34612901565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611d6757611d67612e62565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104b1565b60009150506104b1565b6000611db66115a5565b6001600160a01b03841660009081526004820160205260409020805460ff19168415801591909117909155909150611df857611df2818461183e565b50611e04565b611e028184611860565b505b826001600160a01b03167f235bc17e7930760029e9f4d860a2a8089976de5b381cf8380fc11c1d88a1113383604051611e41911515815260200190565b60405180910390a2505050565b60607f1652558f82172f3162b9e179c9f4ce0654bac7c4802d6326a2868cc56afae202611e7e6020840184612451565b611e8b6020850185612997565b604051602001611e9c929190612e78565b604051602081830303815290604052805190602001208460400135856060016020810190611eca9190612964565b611eda60a0880160808901612964565b611eea60c0890160a08a01612964565b611efa60e08a0160c08b01612964565b6040805160208101999099526001600160a01b0390971696880196909652606087019490945260808601929092526001600160801b0390811660a086015290811660c085015290811660e0848101919091529116610100830152830135610120820152610140016040516020818303038152906040529050919050565b60006104b1611f84612139565b8360405161190160f01b8152600281019290925260228201526042902090565b6060611faf84611a70565b61200a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161048b565b600080856001600160a01b0316856040516120259190612eba565b600060405180830381855af49150503d8060008114612060576040519150601f19603f3d011682016040523d82523d6000602084013e612065565b606091505b5091509150612075828286612260565b9695505050505050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311156120ac5750600090506003612130565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612100573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661212957600060019250925050612130565b9150600090505b94509492505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561219257507f000000000000000000000000000000000000000000000000000000000000000046145b156121bc57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6060831561226f575081610784565b82511561227f5782518084602001fd5b8160405162461bcd60e51b815260040161048b9190612ed6565b6040518060a0016040528060006001600160a01b03168152602001606081526020016000815260200160006001600160801b0316815260200160006001600160801b031681525090565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612321576123216122e3565b604052919050565b600082601f83011261233a57600080fd5b81356001600160401b03811115612353576123536122e3565b612366601f8201601f19166020016122f9565b81815284602083860101111561237b57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156123ab57600080fd5b8235915060208301356001600160401b038111156123c857600080fd5b6123d485828601612329565b9150509250929050565b6001600160a01b03811681146117ee57600080fd5b6000610160828403121561240657600080fd5b50919050565b6000806040838503121561241f57600080fd5b823561242a816123de565b915060208301356001600160401b0381111561244557600080fd5b6123d4858286016123f3565b60006020828403121561246357600080fd5b8135610784816123de565b60008060006060848603121561248357600080fd5b83356001600160401b0381111561249957600080fd5b6124a5868287016123f3565b9660208601359650604090950135949350505050565b60008083601f8401126124cd57600080fd5b5081356001600160401b038111156124e457600080fd5b602083019150836020828501011115611abe57600080fd5b60008060006040848603121561251157600080fd5b83356001600160401b038082111561252857600080fd5b90850190610100828803121561253d57600080fd5b9093506020850135908082111561255357600080fd5b50612560868287016124bb565b9497909650939450505050565b6000806040838503121561258057600080fd5b823561258b816123de565b9150602083013580151581146125a057600080fd5b809150509250929050565b600080604083850312156125be57600080fd5b82356125c9816123de565b946020939093013593505050565b6001600160801b03169052565b80516001600160a01b03908116835260208083015160a082860181905281519086018190526000939183019290849060c08801905b8083101561263b57855185168252948301946001929092019190830190612619565b50604087015160408901526060870151945061265a60608901866125d7565b6080870151945061266e60808901866125d7565b979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156126ce57603f198886030184526126bc8583516125e4565b945092850192908501906001016126a0565b5092979650505050505050565b600080602083850312156126ee57600080fd5b82356001600160401b038082111561270557600080fd5b818501915085601f83011261271957600080fd5b81358181111561272857600080fd5b8660208260051b850101111561273d57600080fd5b60209290920196919550909350505050565b60005b8381101561276a578181015183820152602001612752565b83811115612779576000848401525b50505050565b6000815180845261279781602086016020860161274f565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156126ce57603f198886030184526127ee85835161277f565b945092850192908501906001016127d2565b6001600160a01b0391909116815260200190565b60008060006040848603121561282957600080fd5b8335612834816123de565b925060208401356001600160401b0381111561284f57600080fd5b612560868287016124bb565b6020808252825182820181905260009190848201906040850190845b8181101561289c5783516001600160a01b031683529284019291840191600101612877565b50909695505050505050565b60208152600061078460208301846125e4565b6000808335601e198436030181126128d257600080fd5b8301803591506001600160401b038211156128ec57600080fd5b602001915036819003821315611abe57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561294157612941612917565b5060010190565b80356001600160801b038116811461295f57600080fd5b919050565b60006020828403121561297657600080fd5b61078482612948565b6000821982111561299257612992612917565b500190565b6000808335601e198436030181126129ae57600080fd5b8301803591506001600160401b038211156129c857600080fd5b6020019150600581901b3603821315611abe57600080fd5b6000808335601e198436030181126129f757600080fd5b83016020810192503590506001600160401b03811115612a1657600080fd5b8060051b3603831315611abe57600080fd5b8183526000602080850194508260005b85811015612a66578135612a4b816123de565b6001600160a01b031687529582019590820190600101612a38565b509495945050505050565b6020815260008235612a82816123de565b6001600160a01b0316602083810191909152612aa0908401846129e0565b610100806040860152612ab861012086018385612a28565b925060408601356060860152612ad060608701612948565b9150612adf60808601836125d7565b612aeb60808701612948565b9150612afa60a08601836125d7565b612b0660a08701612948565b9150612b1560c08601836125d7565b612b2160c08701612948565b9150612b3060e08601836125d7565b60e08601358186015250508091505092915050565b6020808252602a908201527f4163636f756e745065726d697373696f6e733a2063616c6c6572206973206e6f6040820152693a1030b71030b236b4b760b11b606082015260800190565b600060208284031215612ba157600080fd5b5051919050565b6020808252600e908201526d11185d18481d1bdbc81cda1bdc9d60921b604082015260600190565b60008085851115612be057600080fd5b83861115612bed57600080fd5b5050820193919092039150565b6001600160e01b03198135818116916004851015612c225780818660040360031b1b83161692505b505092915050565b600060208284031215612c3c57600080fd5b5035919050565b60006001600160401b03821115612c5c57612c5c6122e3565b5060051b60200190565b600082601f830112612c7757600080fd5b81356020612c8c612c8783612c43565b6122f9565b82815260059290921b84018101918181019086841115612cab57600080fd5b8286015b84811015612cc65780358352918301918301612caf565b509695505050505050565b600082601f830112612ce257600080fd5b81356020612cf2612c8783612c43565b82815260059290921b84018101918181019086841115612d1157600080fd5b8286015b84811015612cc65780356001600160401b03811115612d345760008081fd5b612d428986838b0101612329565b845250918301918301612d15565b600080600060608486031215612d6557600080fd5b83356001600160401b0380821115612d7c57600080fd5b818601915086601f830112612d9057600080fd5b81356020612da0612c8783612c43565b82815260059290921b8401810191818101908a841115612dbf57600080fd5b948201945b83861015612de6578535612dd7816123de565b82529482019490820190612dc4565b97505087013592505080821115612dfc57600080fd5b612e0887838801612c66565b93506040860135915080821115612e1e57600080fd5b50612e2b86828701612cd1565b9150509250925092565b634e487b7160e01b600052602160045260246000fd5b600082821015612e5d57612e5d612917565b500390565b634e487b7160e01b600052603160045260246000fd5b60008184825b85811015612eaf578135612e91816123de565b6001600160a01b031683526020928301929190910190600101612e7e565b509095945050505050565b60008251612ecc81846020870161274f565b9190910192915050565b602081526000610784602083018461277f56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220fb6ee4b6c3a98a442ffa1e336598778dd230fa43d8364856fb7382dd535ff9b164736f6c634300080c0033",
    "sourceMap": "1314:8165:313:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5874:636;;;;;;;;;;-1:-1:-1;5874:636:313;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1516:33:640;;;1498:52;;1486:2;1471:18;5874:636:313;;;;;;;;3198:2641;;;;;;;;;;-1:-1:-1;3198:2641:313;;;;;:::i;:::-;;:::i;:::-;;;2538:14:640;;2531:22;2513:41;;2501:2;2486:18;3198:2641:313;2373:187:640;4436:225:167;;;;;;;;;;-1:-1:-1;4436:225:167;;;;;:::i;:::-;;:::i;1456:379:315:-;;;;;;;;;;-1:-1:-1;1456:379:315;;;;;:::i;:::-;;:::i;:::-;;;3473:25:640;;;3461:2;3446:18;1456:379:315;3327:177:640;2579:1605:167;;;;;;;;;;-1:-1:-1;2579:1605:167;;;;;:::i;:::-;;:::i;:::-;;6765:111:313;;;:::i;2392:124:167:-;;;;;;;;;;-1:-1:-1;2392:124:167;;;;;:::i;:::-;;:::i;6947:158:313:-;;;;;;;;;;-1:-1:-1;6947:158:313;;;;;:::i;:::-;;:::i;5969:426:167:-;;;;;;;;;;-1:-1:-1;5969:426:167;;;;;:::i;:::-;;:::i;:::-;;;;5520:14:640;;5513:22;5495:41;;-1:-1:-1;;;;;5572:32:640;;;5567:2;5552:18;;5545:60;5468:18;5969:426:167;5327:284:640;4753:458:167;;;;;;;;;;-1:-1:-1;4753:458:167;;;;;:::i;:::-;;:::i;7387:1334::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;698:319:65:-;;;;;;;;;;-1:-1:-1;698:319:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2795:115:313:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2982:113::-;;;;;;;;;;;;;:::i;1739:32::-;;;;;;;;;;;;;;;933:121:315;;;;;;;;;;;;;:::i;2415:133:313:-;;;;;;;;;;-1:-1:-1;2415:133:313;;;;;:::i;:::-;;:::i;6473:828:167:-;;;;;;;;;;;;;:::i;8778:221::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;5305:585::-;;;;;;;;;;-1:-1:-1;5305:585:167;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5874:636:313:-;6018:17;;6068:25;:5;6082:10;6068:13;:25::i;:::-;6051:42;;6108:15;6116:6;6108:7;:15::i;:::-;6104:63;;;-1:-1:-1;;;;6146:10:313;-1:-1:-1;6139:17:313;;6104:63;6177:43;6223:53;:51;:53::i;:::-;-1:-1:-1;;;;;6331:28:313;;6286:14;6331:28;;;:20;;;:28;;;;;6177:99;;-1:-1:-1;6303:10:313;;6331:45;;6303:10;6331:37;:45::i;:::-;6323:94;;;;-1:-1:-1;;;6323:94:313;;11701:2:640;6323:94:313;;;11683:21:640;11740:2;11720:18;;;11713:30;11779:34;11759:18;;;11752:62;-1:-1:-1;;;11830:18:640;;;11823:34;11874:19;;6323:94:313;;;;;;;;;6432:22;6447:6;6432:14;:22::i;:::-;6428:76;;;-1:-1:-1;;;6483:10:313;-1:-1:-1;6428:76:313;6041:469;;;5874:636;;;;;:::o;3198:2641::-;3299:4;3497:43;3543:53;:51;:53::i;:::-;-1:-1:-1;;;;;3662:21:313;;;;;;:12;;;:21;;;;;;3497:99;;-1:-1:-1;3662:21:313;;3658:63;;;3706:4;3699:11;;;;;3658:63;-1:-1:-1;;;;;3776:31:313;;3731:42;3776:31;;;:22;;;:31;;;;;;;;;3731:76;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3731:76:313;;;;;;;;;-1:-1:-1;;;3731:76:313;;;;;;;;;;;3923:15;-1:-1:-1;3894:44:313;:103;;;3973:11;:24;;;-1:-1:-1;;;;;3954:43:313;:15;:43;;3894:103;:162;;;-1:-1:-1;;;;;;4013:29:313;;;;;;:20;;;:29;;;;;:38;;:36;:38::i;:::-;:43;3894:162;3877:274;;;4135:5;4128:12;;;;;;3877:274;4308:10;4321:38;4342:16;;;;:7;:16;:::i;:::-;4321:20;:38::i;:::-;4308:51;-1:-1:-1;;;;;;;4374:31:313;;-1:-1:-1;;;4374:31:313;4370:1441;;;4513:14;;4546:39;4568:16;;;;:7;:16;:::i;:::-;4546:21;:39::i;:::-;4512:73;;;;4742:5;4697:11;:42;;;:50;:101;;;-1:-1:-1;;;;;;4752:29:313;;;;;;:20;;;:29;;;;;:46;;4791:6;4752:38;:46::i;:::-;4751:47;4697:101;4693:228;;;4901:5;4894:12;;;;;;;;;4693:228;4407:524;;4370:1441;;;-1:-1:-1;;;;;;4941:36:313;;-1:-1:-1;;;4941:36:313;4937:874;;;5096:24;;5151:44;5178:16;;;;:7;:16;:::i;:::-;5151:26;:44::i;:::-;5095:100;;;;;5336:9;5331:383;5355:7;:14;5351:1;:18;5331:383;;;5464:6;5471:1;5464:9;;;;;;;;:::i;:::-;;;;;;;5419:11;:42;;;:54;:129;;;;5498:50;5537:7;5545:1;5537:10;;;;;;;;:::i;:::-;;;;;;;5498:4;:20;;:29;5519:7;-1:-1:-1;;;;;5498:29:313;-1:-1:-1;;;;;5498:29:313;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5497:51;5419:129;5394:306;;;5676:5;5669:12;;;;;;;;;;5394:306;5371:3;;;;:::i;:::-;;;;5331:383;;;;4979:745;;4937:874;;;5795:5;5788:12;;;;;;;4937:874;-1:-1:-1;5828:4:313;;3198:2641;-1:-1:-1;;;;;3198:2641:313:o;4436:225:167:-;4500:4;4516:43;4562:53;:51;:53::i;:::-;-1:-1:-1;;;;;4632:22:167;;;;;;;:12;;;;:22;;-1:-1:-1;;4632:22:167;;;;;;;4436:225::o;1456:379:315:-;1625:22;1659:24;:22;:24::i;:::-;1710:38;1729:6;1737:10;1710:18;:38::i;:::-;1693:55;;1796:32;1808:19;1796:11;:32::i;:::-;1456:379;;;;;:::o;2579:1605:167:-;2697:20;2720:11;;;;:4;:11;:::i;:::-;2697:34;;2750:21;2758:12;2750:7;:21::i;:::-;2749:22;2741:81;;;;-1:-1:-1;;;2741:81:167;;13036:2:640;2741:81:167;;;13018:21:640;13075:2;13055:18;;;13048:30;13114:34;13094:18;;;13087:62;-1:-1:-1;;;13165:18:640;;;13158:44;13219:19;;2741:81:167;12834:410:640;2741:81:167;2888:15;2854:30;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2854:49:167;;;:99;;;;-1:-1:-1;2925:28:167;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2907:46:167;:15;:46;2854:99;2833:197;;;;-1:-1:-1;;;2833:197:167;;13820:2:640;2833:197:167;;;13802:21:640;13859:2;13839:18;;;13832:30;13898:34;13878:18;;;13871:62;-1:-1:-1;;;13949:18:640;;;13942:49;14008:19;;2833:197:167;13618:415:640;2833:197:167;3042:12;3056:14;3074:47;3104:4;3110:10;;3074:29;:47::i;:::-;3041:80;;;;3139:7;3131:57;;;;-1:-1:-1;;;3131:57:167;;14240:2:640;3131:57:167;;;14222:21:640;14279:2;14259:18;;;14252:30;14318:34;14298:18;;;14291:62;-1:-1:-1;;;14369:18:640;;;14362:35;14414:19;;3131:57:167;14038:401:640;3131:57:167;3199:43;3245:53;:51;:53::i;:::-;3199:99;-1:-1:-1;3309:33:167;:15;;;3329:12;3309:19;:33::i;:::-;-1:-1:-1;3366:8:167;;;;3352:23;;;;:13;;;:23;;;;;;;;;:30;;-1:-1:-1;;3352:30:167;3378:4;3352:30;;;3432:166;;;;;;;;3469:35;;;;3432:166;;;;;;;3518:29;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3432:166:167;;;;;3561:27;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3432:166:167;;;;;;-1:-1:-1;;;;;3393:36:167;;;;;;:22;;;:36;;;;;;;;:205;;;;;;;;;;;;;;-1:-1:-1;;;3393:205:167;;;;;;;;;;;;;;;;;3643:20;;;:34;;;;;;:43;;:41;:43::i;:::-;3717:21;;3609:77;;-1:-1:-1;3696:18:167;3749:129;3773:10;3769:1;:14;3749:129;;;3807:60;3849:14;3864:1;3849:17;;;;;;;;:::i;:::-;;;;;;;3807:4;:20;;:34;3828:12;-1:-1:-1;;;;;3807:34:167;-1:-1:-1;;;;;3807:34:167;;;;;;;;;;;;:41;;:60;;;;:::i;:::-;-1:-1:-1;3785:6:167;3790:1;3785:6;;:::i;:::-;;;3749:129;;;-1:-1:-1;3888:11:167;3902:20;;;;:4;:20;:::i;:::-;:27;;3888:41;;3944:9;3939:125;3963:3;3959:1;:7;3939:125;;;3990:63;4029:20;;;;:4;:20;:::i;:::-;4050:1;4029:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3990:34:167;;;;;;:20;;;:34;;;;;;:38;:63::i;:::-;-1:-1:-1;3968:6:167;3973:1;3968:6;;:::i;:::-;;;3939:125;;;;4074:35;4104:4;4074:29;:35::i;:::-;4158:12;-1:-1:-1;;;;;4125:52:167;4150:6;-1:-1:-1;;;;;4125:52:167;;4172:4;4125:52;;;;;;:::i;:::-;;;;;;;;2687:1497;;;;;;;2579:1605;;;:::o;6765:111:313:-;6812:12;:10;:12::i;:::-;-1:-1:-1;;;;;6812:22:313;;6843:9;6863:4;6812:57;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6765:111::o;2392:124:167:-;2060:19;2068:10;2060:7;:19::i;:::-;2052:74;;;;-1:-1:-1;;;2052:74:167;;;;;;;:::i;:::-;2480:29:::1;2490:8;2500;2480:9;:29::i;:::-;2392:124:::0;;:::o;6947:158:313:-;2060:19:167;2068:10;2060:7;:19::i;:::-;2052:74;;;;-1:-1:-1;;;2052:74:167;;;;;;;:::i;:::-;7050:12:313::1;:10;:12::i;:::-;:48;::::0;-1:-1:-1;;;7050:48:313;;-1:-1:-1;;;;;18142:32:640;;;7050:48:313::1;::::0;::::1;18124:51:640::0;18191:18;;;18184:34;;;7050:23:313;;;::::1;::::0;::::1;::::0;18097:18:640;;7050:48:313::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6947:158:::0;;:::o;5969:426:167:-;6133:12;6147:14;6177:43;6223:53;:51;:53::i;:::-;6177:99;;6295:31;6311:3;6316:9;;6295:15;:31::i;:::-;6361:7;;;;6347:22;;;;:13;;;:22;;;;;;6286:40;;-1:-1:-1;6347:22:167;;6346:23;:42;;;;;6373:15;6381:6;6373:7;:15::i;:::-;6336:52;;6167:228;5969:426;;;;;;:::o;4753:458::-;4814:4;4830:43;4876:53;:51;:53::i;:::-;-1:-1:-1;;;;;4984:30:167;;4939:42;4984:30;;;:22;;;:30;;;;;;;;;4939:75;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4939:75:167;;;;;;;;;-1:-1:-1;;;4939:75:167;;;;;;;;;;;4830:99;;-1:-1:-1;4939:75:167;5074:15;-1:-1:-1;5044:45:167;;;:103;;;5123:11;:24;;;-1:-1:-1;;;;;5105:42:167;:15;:42;5044:103;:160;;;;-1:-1:-1;;;;;;5163:28:167;;5203:1;5163:28;;;:20;;;:28;;;;;:37;;:35;:37::i;:::-;:41;5044:160;5025:179;4753:458;-1:-1:-1;;;;4753:458:167:o;7387:1334::-;7441:34;7487:43;7533:53;:51;:53::i;:::-;7487:99;;7596:27;7626:24;:4;:15;;:22;:24::i;:::-;7675:17;;7596:54;;-1:-1:-1;7661:11:167;;7675:17;-1:-1:-1;;;;;7773:15:167;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7773:15:167;;7742:46;;7804:9;7799:267;7823:3;7819:1;:7;7799:267;;;7850:14;7867:10;7878:1;7867:13;;;;;;;;:::i;:::-;;;;;;;7850:30;;7895:13;7911:22;7926:6;7911:14;:22::i;:::-;7895:38;;7967:8;7947:14;7962:1;7947:17;;;;;;;;:::i;:::-;:28;;;:17;;;;;;;;;;;:28;7989:67;;;;8021:20;;;;:::i;:::-;;;;7989:67;-1:-1:-1;7828:6:167;;-1:-1:-1;7833:1:167;7828:6;;:::i;:::-;;;7799:267;;;;8110:18;-1:-1:-1;;;;;8086:43:167;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8076:53;;8139:13;8171:9;8166:549;8190:3;8186:1;:7;8166:549;;;8222:14;8237:1;8222:17;;;;;;;;:::i;:::-;;;;;;;8217:65;;8259:8;;8217:65;8295:14;8312:10;8323:1;8312:13;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;8384:30:167;;8339:42;8384:30;;;:22;;;:30;;;;;;8339:75;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8339:75:167;;;;;;;-1:-1:-1;;;8339:75:167;;;;;;;;8448:256;;;;;;;;;;8507:28;;;:20;;;:28;;;;8312:13;;-1:-1:-1;8339:75:167;8448:256;;;;;;8507:37;;:35;:37::i;:::-;8448:256;;;;8562:11;:42;;;8448:256;;;;8622:11;:26;;;-1:-1:-1;;;;;8448:256:167;;;;;8666:11;:24;;;-1:-1:-1;;;;;8448:256:167;;;;8429:7;8437;;;;;:::i;:::-;;;8429:16;;;;;;;;:::i;:::-;;;;;;:275;;;;8203:512;;8166:549;8195:6;8200:1;8195:6;;:::i;:::-;;;8166:549;;;;7477:1244;;;;;;7387:1334;:::o;698:319:65:-;775:22;831:4;-1:-1:-1;;;;;819:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:65;;-1:-1:-1;;;922:54:65:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;:::o;2795:115:313:-;2885:18;;2795:115::o;2982:113::-;3025:7;3051:12;:10;:12::i;:::-;-1:-1:-1;;;;;3051:22:313;;3082:4;3051:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3044:44;;2982:113;:::o;933:121:315:-;982:7;1008:12;:10;:12::i;:::-;:39;;-1:-1:-1;;;1008:39:315;;1038:4;1008:39;;;18600:51:640;1045:1:315;18667:18:640;;;18660:60;-1:-1:-1;;;;;1008:21:315;;;;;;;18573:18:640;;1008:39:315;18418:308:640;2415:133:313;1146:29:176;1178:25;:23;:25::i;:::-;1234:16;;1146:57;;-1:-1:-1;1234:16:176;;;;;;1281:17;;;1331:14;;;1377:34;;;;;1410:1;1395:12;:16;;;1377:34;1376:99;;;;1418:35;1447:4;1418:20;:35::i;:::-;1417:36;:57;;;;;1457:12;:17;;1473:1;1457:17;1417:57;1355:192;;;;-1:-1:-1;;;1355:192:176;;18933:2:640;1355:192:176;;;18915:21:640;18972:2;18952:18;;;18945:30;19011:34;18991:18;;;18984:62;-1:-1:-1;;;19062:18:640;;;19055:44;19116:19;;1355:192:176;18731:410:640;1355:192:176;1557:20;;-1:-1:-1;;1557:20:176;1576:1;1557:20;;;1587:69;;;;1621:24;;-1:-1:-1;;1621:24:176;;;;;1587:69;2511:30:313::1;2521:13;2536:4;2511:9;:30::i;:::-;1680:14:176::0;1676:103;;;1710:25;;-1:-1:-1;;1710:25:176;;;1754:14;;-1:-1:-1;19298:36:640;;1754:14:176;;19286:2:640;19271:18;1754:14:176;;;;;;;1676:103;1136:649;;;;2415:133:313;;;:::o;6473:828:167:-;6521:34;6567:43;6613:53;:51;:53::i;:::-;6567:99;;6676:27;6706:24;:4;:15;;:22;:24::i;:::-;6755:17;;6676:54;;-1:-1:-1;6755:17:167;-1:-1:-1;;;;;6792:28:167;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6782:38;;6835:9;6830:465;6854:3;6850:1;:7;6830:465;;;6881:14;6898:10;6909:1;6898:13;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;6970:30:167;;6925:42;6970:30;;;:22;;;:30;;;;;;6925:75;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6925:75:167;;;;;;;-1:-1:-1;;;6925:75:167;;;;;;;;7028:256;;;;;;;;;;7087:28;;;:20;;;:28;;;;6898:13;;-1:-1:-1;6925:75:167;7028:256;;;;;;7087:37;;:35;:37::i;:::-;7028:256;;;;7142:11;:42;;;7028:256;;;;7202:11;:26;;;-1:-1:-1;;;;;7028:256:167;;;;;7246:11;:24;;;-1:-1:-1;;;;;7028:256:167;;;;7015:7;7023:1;7015:10;;;;;;;;:::i;:::-;;;;;;:269;;;;6867:428;;6864:1;6859:6;;;;;:::i;:::-;;;6830:465;;;;6557:744;;;6473:828;:::o;8778:221::-;8825:16;8853:43;8899:53;:51;:53::i;:::-;8853:99;-1:-1:-1;8969:23:167;8853:99;8969:21;:23::i;:::-;8962:30;;;8778:221;:::o;5305:585::-;5377:24;;:::i;:::-;5413:43;5459:53;:51;:53::i;:::-;-1:-1:-1;;;;;5567:30:167;;5522:42;5567:30;;;:22;;;:30;;;;;;;;5522:75;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5522:75:167;;;;;;;-1:-1:-1;;;5522:75:167;;;;;;;;5627:256;;;;;;;;;;5686:28;;;:20;;;:28;;;;5413:99;;-1:-1:-1;5522:75:167;;5627:256;;;;5686:37;;:35;:37::i;:::-;5627:256;;;;5741:11;:42;;;5627:256;;;;5801:11;:26;;;-1:-1:-1;;;;;5627:256:167;;;;;5845:11;:24;;;-1:-1:-1;;;;;5627:256:167;;;;5608:275;;;;5305:585;;;:::o;497:193:176:-;242:25;;497:193::o;3676:227:239:-;3754:7;3774:17;3793:18;3815:27;3826:4;3832:9;3815:10;:27::i;:::-;3773:69;;;;3852:18;3864:5;3852:11;:18::i;:::-;-1:-1:-1;3887:9:239;3676:227;-1:-1:-1;;;3676:227:239:o;1269:250:167:-;385:40;;1269:250::o;8583:165:244:-;-1:-1:-1;;;;;8716:23:244;;8663:4;4250:19;;;:12;;;:19;;;;;;:24;;8686:55;4154:127;8829:115;8892:7;8918:19;8926:3;4444:18;;4362:107;7294:192:313;7368:23;7426:1;7411:16;;;7403:43;;;;-1:-1:-1;;;7403:43:313;;;;;;;:::i;:::-;7470:8;7476:1;7470:8;:4;;:8;:::i;:::-;7463:16;;;:::i;7492:393::-;7567:15;;7633:11;7618:26;;;7610:53;;;;-1:-1:-1;;;7610:53:313;;;;;;;:::i;:::-;7749:10;7756:2;7754:1;7749:4;;:10;:::i;:::-;7738:33;;;;;;;:::i;:::-;7728:43;-1:-1:-1;7855:11:313;7863:2;7860;7855:4;;:11;:::i;:::-;7844:34;;;;;;;:::i;:::-;7835:43;;7492:393;;;;;:::o;7891:405::-;8008:25;;;8157:16;8142:31;;;8134:58;;;;-1:-1:-1;;;8134:58:313;;;;;;;:::i;:::-;8247:8;:4;8252:1;8247:4;;:8;:::i;:::-;8236:53;;;;;;;:::i;:::-;8203:86;;;;-1:-1:-1;8203:86:313;;-1:-1:-1;7891:405:313;-1:-1:-1;;;7891:405:313:o;1916:149:315:-;2012:12;:10;:12::i;:::-;-1:-1:-1;;;;;1990:35:315;:10;-1:-1:-1;;;;;1990:35:315;;1982:76;;;;-1:-1:-1;;;1982:76:315;;24198:2:640;1982:76:315;;;24180:21:640;24237:2;24217:18;;;24210:30;-1:-1:-1;;;24256:18:640;;;24249:58;24324:18;;1982:76:315;23996:352:640;1982:76:315;1916:149::o;8363:391:313:-;-1:-1:-1;;;8509:22:313;7527:48:239;;;7595:4;7588:18;;;7646:4;7630:21;;8607:14:313;8624:30;8637:16;;;;:6;:16;:::i;:::-;8624:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8624:4:313;;:30;-1:-1:-1;;8624:12:313;:30;-1:-1:-1;8624:30:313:i;:::-;8607:47;;8670:29;8684:6;8692;8670:13;:29::i;:::-;8665:64;;744:1:315;8701:28:313;;;;;;8665:64;-1:-1:-1;8746:1:313;;8363:391;-1:-1:-1;;;;8363:391:313:o;3784:63:315:-;;:::o;4355:338::-;4436:24;;4432:255;;4495:82;;4477:12;;4503:10;;-1:-1:-1;;4554:17:315;4528:19;;4477:12;4495:82;4477:12;4495:82;4528:19;4503:10;4554:17;4495:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8028:150:244;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:244;;8121:4;:50::i;9982:300::-;10045:16;10073:22;10098:19;10106:3;10098:7;:19::i;8346:156::-;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:244;;8442:7;:53::i;9249:228:313:-;-1:-1:-1;;;;;9367:7:313;:19;;:23;9363:108;;-1:-1:-1;;;;;9425:7:313;9406:41;;9448:11;;;;:4;:11;:::i;:::-;9406:54;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;8810:382;8898:35;8914:8;8924;8898:15;:35::i;:::-;-1:-1:-1;;;;;8947:7:313;:19;;:23;8943:243;;8990:8;8986:190;;;9018:51;;-1:-1:-1;;;9018:51:313;;-1:-1:-1;;;;;9037:7:313;9018:41;;;;:51;;9060:8;;9018:51;;;:::i;8986:190::-;9108:53;;-1:-1:-1;;;9108:53:313;;-1:-1:-1;;;;;9127:7:313;9108:43;;;;:53;;9152:8;;9108:53;;;:::i;9874:260:167:-;10028:7;10058:69;10116:10;;10058:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10058:49:167;;-1:-1:-1;10085:20:167;;-1:-1:-1;10100:4:167;;-1:-1:-1;10085:14:167;:20::i;:::-;10075:31;;;;;;10058:16;:49::i;:::-;:57;;:69::i;6538:198:290:-;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;1137:320::-;-1:-1:-1;;;;;1427:19:290;;:23;;;1137:320::o;2160:730:239:-;2241:7;2250:12;2278:9;:16;2298:2;2278:22;2274:610;;;2614:4;2599:20;;2593:27;2663:4;2648:20;;2642:27;2720:4;2705:20;;2699:27;2316:9;2691:36;2761:25;2772:4;2691:36;2593:27;2642;2761:10;:25::i;:::-;2754:32;;;;;;;;;2274:610;-1:-1:-1;2833:1:239;;-1:-1:-1;2837:35:239;2274:610;2160:730;;;;;:::o;585:511::-;662:20;653:5;:29;;;;;;;;:::i;:::-;;649:441;;;585:511;:::o;649:441::-;758:29;749:5;:38;;;;;;;;:::i;:::-;;745:345;;;803:34;;-1:-1:-1;;;803:34:239;;24897:2:640;803:34:239;;;24879:21:640;24936:2;24916:18;;;24909:30;-1:-1:-1;;;24955:18:640;;;24948:54;25019:18;;803:34:239;24695:348:640;745:345:239;867:35;858:5;:44;;;;;;;;:::i;:::-;;854:236;;;918:41;;-1:-1:-1;;;918:41:239;;25250:2:640;918:41:239;;;25232:21:640;25289:2;25269:18;;;25262:30;25328:33;25308:18;;;25301:61;25379:18;;918:41:239;25048:355:640;854:236:239;989:30;980:5;:39;;;;;;;;:::i;:::-;;976:114;;;1035:44;;-1:-1:-1;;;1035:44:239;;25610:2:640;1035:44:239;;;25592:21:640;25649:2;25629:18;;;25622:30;25688:34;25668:18;;;25661:62;-1:-1:-1;;;25739:18:640;;;25732:32;25781:19;;1035:44:239;25408:398:640;2113:404:244;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:244;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:244;2488:12;;5469:109;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;2685:1388::-;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:244;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;9390:415:167;9469:43;9515:53;:51;:53::i;:::-;-1:-1:-1;;;;;9578:22:167;;;;;;:12;;;:22;;;;;:33;;-1:-1:-1;;9578:33:167;;;;;;;;;;;;:12;;-1:-1:-1;9622:129:167;;9650:28;:4;9669:8;9650:18;:28::i;:::-;;9622:129;;;9709:31;:4;9731:8;9709:21;:31::i;:::-;;9622:129;9779:8;-1:-1:-1;;;;;9766:32:167;;9789:8;9766:32;;;;2538:14:640;2531:22;2513:41;;2501:2;2486:18;;2373:187;9766:32:167;;;;;;;;9459:346;9390:415;;:::o;10219:555::-;10313:12;1725:281;10410:11;;;;:4;:11;:::i;:::-;10466:20;;;;:4;:20;:::i;:::-;10449:38;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10439:49;;;;;;10506:4;:35;;;10559:4;:29;;;;;;;;;;:::i;:::-;10606:27;;;;;;;;:::i;:::-;10651:30;;;;;;;;:::i;:::-;10699:28;;;;;;;;:::i;:::-;10356:411;;;;;;27069:25:640;;;;-1:-1:-1;;;;;27130:32:640;;;27110:18;;;27103:60;;;;27179:18;;;27172:34;;;;27222:18;;;27215:34;;;;-1:-1:-1;;;;;27324:15:640;;;27303:19;;;27296:44;27377:15;;;27356:19;;;27349:44;27430:15;;;10745:8:167;27409:19:640;;;27402:44;;;;27483:15;;27462:19;;;27455:44;10745:8:167;;;27515:19:640;;;27508:35;27041:19;;10356:411:167;;;;;;;;;;;;10337:430;;10219:555;;;:::o;4339:165:240:-;4416:7;4442:55;4464:20;:18;:20::i;:::-;4486:10;8689:4:239;8683:11;-1:-1:-1;;;8707:23:239;;8759:4;8750:14;;8743:39;;;;8811:4;8802:14;;8795:34;8865:4;8850:20;;;8489:397;6922:387:290;7063:12;7095:18;7106:6;7095:10;:18::i;:::-;7087:69;;;;-1:-1:-1;;;7087:69:290;;27756:2:640;7087:69:290;;;27738:21:640;27795:2;27775:18;;;27768:30;27834:34;27814:18;;;27807:62;-1:-1:-1;;;27885:18:640;;;27878:36;27931:19;;7087:69:290;27554:402:640;7087:69:290;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:290;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:290:o;5084:1494:239:-;5210:7;;-1:-1:-1;;;;;6121:79:239;;6117:161;;;-1:-1:-1;6232:1:239;;-1:-1:-1;6236:30:239;6216:51;;6117:161;6389:24;;;6372:14;6389:24;;;;;;;;;28467:25:640;;;28540:4;28528:17;;28508:18;;;28501:45;;;;28562:18;;;28555:34;;;28605:18;;;28598:34;;;6389:24:239;;28439:19:640;;6389:24:239;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6389:24:239;;-1:-1:-1;;6389:24:239;;;-1:-1:-1;;;;;;;6427:20:239;;6423:101;;6479:1;6483:29;6463:50;;;;;;;6423:101;6542:6;-1:-1:-1;6550:20:239;;-1:-1:-1;5084:1494:239;;;;;;;;:::o;3143:308:240:-;3196:7;3227:4;-1:-1:-1;;;;;3236:12:240;3219:29;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;-1:-1:-1;3308:24:240;;3143:308::o;3215:230::-;-1:-1:-1;3633:73:240;;;3392:10;3633:73;;;;29126:25:640;;;;3404:12:240;29167:18:640;;;29160:34;3418:15:240;29210:18:640;;;29203:34;3677:13:240;29253:18:640;;;29246:34;3700:4:240;29296:19:640;;;;29289:61;;;;3633:73:240;;;;;;;;;;29098:19:640;;;;3633:73:240;;;3623:84;;;;;;2982:113:313:o;7529:692:290:-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:290;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:290;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:640:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:640;247:40;;-1:-1:-1;;;;;302:34:640;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:640:o;426:530::-;468:5;521:3;514:4;506:6;502:17;498:27;488:55;;539:1;536;529:12;488:55;575:6;562:20;-1:-1:-1;;;;;597:2:640;594:26;591:52;;;623:18;;:::i;:::-;667:55;710:2;691:13;;-1:-1:-1;;687:27:640;716:4;683:38;667:55;:::i;:::-;747:2;738:7;731:19;793:3;786:4;781:2;773:6;769:15;765:26;762:35;759:55;;;810:1;807;800:12;759:55;875:2;868:4;860:6;856:17;849:4;840:7;836:18;823:55;923:1;898:16;;;916:4;894:27;887:38;;;;902:7;426:530;-1:-1:-1;;;426:530:640:o;961:388::-;1038:6;1046;1099:2;1087:9;1078:7;1074:23;1070:32;1067:52;;;1115:1;1112;1105:12;1067:52;1151:9;1138:23;1128:33;;1212:2;1201:9;1197:18;1184:32;-1:-1:-1;;;;;1231:6:640;1228:30;1225:50;;;1271:1;1268;1261:12;1225:50;1294:49;1335:7;1326:6;1315:9;1311:22;1294:49;:::i;:::-;1284:59;;;961:388;;;;;:::o;1561:131::-;-1:-1:-1;;;;;1636:31:640;;1626:42;;1616:70;;1682:1;1679;1672:12;1697:162;1763:5;1808:3;1799:6;1794:3;1790:16;1786:26;1783:46;;;1825:1;1822;1815:12;1783:46;-1:-1:-1;1847:6:640;1697:162;-1:-1:-1;1697:162:640:o;1864:504::-;1966:6;1974;2027:2;2015:9;2006:7;2002:23;1998:32;1995:52;;;2043:1;2040;2033:12;1995:52;2082:9;2069:23;2101:31;2126:5;2101:31;:::i;:::-;2151:5;-1:-1:-1;2207:2:640;2192:18;;2179:32;-1:-1:-1;;;;;2223:30:640;;2220:50;;;2266:1;2263;2256:12;2220:50;2289:73;2354:7;2345:6;2334:9;2330:22;2289:73;:::i;2565:247::-;2624:6;2677:2;2665:9;2656:7;2652:23;2648:32;2645:52;;;2693:1;2690;2683:12;2645:52;2732:9;2719:23;2751:31;2776:5;2751:31;:::i;2817:505::-;2928:6;2936;2944;2997:2;2985:9;2976:7;2972:23;2968:32;2965:52;;;3013:1;3010;3003:12;2965:52;3053:9;3040:23;-1:-1:-1;;;;;3078:6:640;3075:30;3072:50;;;3118:1;3115;3108:12;3072:50;3141:73;3206:7;3197:6;3186:9;3182:22;3141:73;:::i;:::-;3131:83;3261:2;3246:18;;3233:32;;-1:-1:-1;3312:2:640;3297:18;;;3284:32;;2817:505;-1:-1:-1;;;;2817:505:640:o;3509:347::-;3560:8;3570:6;3624:3;3617:4;3609:6;3605:17;3601:27;3591:55;;3642:1;3639;3632:12;3591:55;-1:-1:-1;3665:20:640;;-1:-1:-1;;;;;3697:30:640;;3694:50;;;3740:1;3737;3730:12;3694:50;3777:4;3769:6;3765:17;3753:29;;3829:3;3822:4;3813:6;3805;3801:19;3797:30;3794:39;3791:59;;;3846:1;3843;3836:12;3861:712;3984:6;3992;4000;4053:2;4041:9;4032:7;4028:23;4024:32;4021:52;;;4069:1;4066;4059:12;4021:52;4109:9;4096:23;-1:-1:-1;;;;;4179:2:640;4171:6;4168:14;4165:34;;;4195:1;4192;4185:12;4165:34;4218:22;;;;4274:3;4256:16;;;4252:26;4249:46;;;4291:1;4288;4281:12;4249:46;4314:2;;-1:-1:-1;4369:2:640;4354:18;;4341:32;;4385:16;;;4382:36;;;4414:1;4411;4404:12;4382:36;;4453:60;4505:7;4494:8;4483:9;4479:24;4453:60;:::i;:::-;3861:712;;4532:8;;-1:-1:-1;4427:86:640;;-1:-1:-1;;;;3861:712:640:o;4578:416::-;4643:6;4651;4704:2;4692:9;4683:7;4679:23;4675:32;4672:52;;;4720:1;4717;4710:12;4672:52;4759:9;4746:23;4778:31;4803:5;4778:31;:::i;:::-;4828:5;-1:-1:-1;4885:2:640;4870:18;;4857:32;4927:15;;4920:23;4908:36;;4898:64;;4958:1;4955;4948:12;4898:64;4981:7;4971:17;;;4578:416;;;;;:::o;4999:323::-;5075:6;5083;5136:2;5124:9;5115:7;5111:23;5107:32;5104:52;;;5152:1;5149;5142:12;5104:52;5191:9;5178:23;5210:31;5235:5;5210:31;:::i;:::-;5260:5;5312:2;5297:18;;;;5284:32;;-1:-1:-1;;;4999:323:640:o;5616:104::-;-1:-1:-1;;;;;5682:31:640;5670:44;;5616:104::o;5725:986::-;5892:12;;-1:-1:-1;;;;;5888:21:640;;;5876:34;;5929:4;5968:14;;;5962:21;5824:4;5999:12;;;5992:26;;;6067:19;;5815:14;;;6095:20;;;5785:3;;6169:21;;;;5929:4;5785:3;;6142;6133:13;;;6218:184;6232:6;6229:1;6226:13;6218:184;;;6299:13;;6295:22;;6281:37;;6377:15;;;;6254:1;6247:9;;;;;6340:14;;;;6218:184;;;6222:3;6451:4;6444:5;6440:16;6434:23;6427:4;6422:3;6418:14;6411:47;6506:4;6499:5;6495:16;6489:23;6467:45;;6521:50;6565:4;6560:3;6556:14;6540;6521:50;:::i;:::-;6619:4;6612:5;6608:16;6602:23;6580:45;;6634:50;6678:4;6673:3;6669:14;6653;6634:50;:::i;:::-;6700:5;5725:986;-1:-1:-1;;;;;;;5725:986:640:o;6716:873::-;6930:4;6959:2;6999;6988:9;6984:18;7029:2;7018:9;7011:21;7052:6;7087;7081:13;7118:6;7110;7103:22;7156:2;7145:9;7141:18;7134:25;;7218:2;7208:6;7205:1;7201:14;7190:9;7186:30;7182:39;7168:53;;7256:2;7248:6;7244:15;7277:1;7287:273;7301:6;7298:1;7295:13;7287:273;;;7394:2;7390:7;7378:9;7370:6;7366:22;7362:36;7357:3;7350:49;7422:58;7473:6;7464;7458:13;7422:58;:::i;:::-;7412:68;-1:-1:-1;7538:12:640;;;;7503:15;;;;7323:1;7316:9;7287:273;;;-1:-1:-1;7577:6:640;;6716:873;-1:-1:-1;;;;;;;6716:873:640:o;7594:626::-;7691:6;7699;7752:2;7740:9;7731:7;7727:23;7723:32;7720:52;;;7768:1;7765;7758:12;7720:52;7808:9;7795:23;-1:-1:-1;;;;;7878:2:640;7870:6;7867:14;7864:34;;;7894:1;7891;7884:12;7864:34;7932:6;7921:9;7917:22;7907:32;;7977:7;7970:4;7966:2;7962:13;7958:27;7948:55;;7999:1;7996;7989:12;7948:55;8039:2;8026:16;8065:2;8057:6;8054:14;8051:34;;;8081:1;8078;8071:12;8051:34;8134:7;8129:2;8119:6;8116:1;8112:14;8108:2;8104:23;8100:32;8097:45;8094:65;;;8155:1;8152;8145:12;8094:65;8186:2;8178:11;;;;;8208:6;;-1:-1:-1;7594:626:640;;-1:-1:-1;;;;7594:626:640:o;8225:258::-;8297:1;8307:113;8321:6;8318:1;8315:13;8307:113;;;8397:11;;;8391:18;8378:11;;;8371:39;8343:2;8336:10;8307:113;;;8438:6;8435:1;8432:13;8429:48;;;8473:1;8464:6;8459:3;8455:16;8448:27;8429:48;;8225:258;;;:::o;8488:257::-;8529:3;8567:5;8561:12;8594:6;8589:3;8582:19;8610:63;8666:6;8659:4;8654:3;8650:14;8643:4;8636:5;8632:16;8610:63;:::i;:::-;8727:2;8706:15;-1:-1:-1;;8702:29:640;8693:39;;;;8734:4;8689:50;;8488:257;-1:-1:-1;;8488:257:640:o;8750:800::-;8910:4;8939:2;8979;8968:9;8964:18;9009:2;8998:9;8991:21;9032:6;9067;9061:13;9098:6;9090;9083:22;9136:2;9125:9;9121:18;9114:25;;9198:2;9188:6;9185:1;9181:14;9170:9;9166:30;9162:39;9148:53;;9236:2;9228:6;9224:15;9257:1;9267:254;9281:6;9278:1;9275:13;9267:254;;;9374:2;9370:7;9358:9;9350:6;9346:22;9342:36;9337:3;9330:49;9402:39;9434:6;9425;9419:13;9402:39;:::i;:::-;9392:49;-1:-1:-1;9499:12:640;;;;9464:15;;;;9303:1;9296:9;9267:254;;9555:224;-1:-1:-1;;;;;9740:32:640;;;;9722:51;;9710:2;9695:18;;9555:224::o;9992:544::-;10071:6;10079;10087;10140:2;10128:9;10119:7;10115:23;10111:32;10108:52;;;10156:1;10153;10146:12;10108:52;10195:9;10182:23;10214:31;10239:5;10214:31;:::i;:::-;10264:5;-1:-1:-1;10320:2:640;10305:18;;10292:32;-1:-1:-1;;;;;10336:30:640;;10333:50;;;10379:1;10376;10369:12;10333:50;10418:58;10468:7;10459:6;10448:9;10444:22;10418:58;:::i;10541:658::-;10712:2;10764:21;;;10834:13;;10737:18;;;10856:22;;;10683:4;;10712:2;10935:15;;;;10909:2;10894:18;;;10683:4;10978:195;10992:6;10989:1;10986:13;10978:195;;;11057:13;;-1:-1:-1;;;;;11053:39:640;11041:52;;11148:15;;;;11113:12;;;;11089:1;11007:9;10978:195;;;-1:-1:-1;11190:3:640;;10541:658;-1:-1:-1;;;;;;10541:658:640:o;11204:290::-;11405:2;11394:9;11387:21;11368:4;11425:63;11484:2;11473:9;11469:18;11461:6;11425:63;:::i;11904:521::-;11981:4;11987:6;12047:11;12034:25;12141:2;12137:7;12126:8;12110:14;12106:29;12102:43;12082:18;12078:68;12068:96;;12160:1;12157;12150:12;12068:96;12187:33;;12239:20;;;-1:-1:-1;;;;;;12271:30:640;;12268:50;;;12314:1;12311;12304:12;12268:50;12347:4;12335:17;;-1:-1:-1;12378:14:640;12374:27;;;12364:38;;12361:58;;;12415:1;12412;12405:12;12430:127;12491:10;12486:3;12482:20;12479:1;12472:31;12522:4;12519:1;12512:15;12546:4;12543:1;12536:15;12562:127;12623:10;12618:3;12614:20;12611:1;12604:31;12654:4;12651:1;12644:15;12678:4;12675:1;12668:15;12694:135;12733:3;-1:-1:-1;;12754:17:640;;12751:43;;;12774:18;;:::i;:::-;-1:-1:-1;12821:1:640;12810:13;;12694:135::o;13249:173::-;13317:20;;-1:-1:-1;;;;;13366:31:640;;13356:42;;13346:70;;13412:1;13409;13402:12;13346:70;13249:173;;;:::o;13427:186::-;13486:6;13539:2;13527:9;13518:7;13514:23;13510:32;13507:52;;;13555:1;13552;13545:12;13507:52;13578:29;13597:9;13578:29;:::i;14444:128::-;14484:3;14515:1;14511:6;14508:1;14505:13;14502:39;;;14521:18;;:::i;:::-;-1:-1:-1;14557:9:640;;14444:128::o;14577:545::-;14670:4;14676:6;14736:11;14723:25;14830:2;14826:7;14815:8;14799:14;14795:29;14791:43;14771:18;14767:68;14757:96;;14849:1;14846;14839:12;14757:96;14876:33;;14928:20;;;-1:-1:-1;;;;;;14960:30:640;;14957:50;;;15003:1;15000;14993:12;14957:50;15036:4;15024:17;;-1:-1:-1;15087:1:640;15083:14;;;15067;15063:35;15053:46;;15050:66;;;15112:1;15109;15102:12;15127:523;15197:5;15204:6;15264:3;15251:17;15350:2;15346:7;15335:8;15319:14;15315:29;15311:43;15291:18;15287:68;15277:96;;15369:1;15366;15359:12;15277:96;15397:33;;15501:4;15488:18;;;-1:-1:-1;15449:21:640;;-1:-1:-1;;;;;;15518:30:640;;15515:50;;;15561:1;15558;15551:12;15515:50;15618:6;15615:1;15611:14;15595;15591:35;15581:8;15577:50;15574:70;;;15640:1;15637;15630:12;15655:522;15755:6;15750:3;15743:19;15725:3;15781:4;15810:2;15805:3;15801:12;15794:19;;15836:5;15859:1;15869:283;15883:6;15880:1;15877:13;15869:283;;;15960:6;15947:20;15980:33;16005:7;15980:33;:::i;:::-;-1:-1:-1;;;;;16038:33:640;16026:46;;16092:12;;;;16127:15;;;;16068:1;15898:9;15869:283;;;-1:-1:-1;16168:3:640;;15655:522;-1:-1:-1;;;;;15655:522:640:o;16182:1336::-;16397:2;16386:9;16379:21;16360:4;16435:6;16422:20;16451:31;16476:5;16451:31;:::i;:::-;-1:-1:-1;;;;;16518:31:640;16513:2;16498:18;;;16491:59;;;;16593:67;;16644:15;;16648:6;16593:67;:::i;:::-;16679:6;16721:2;16716;16705:9;16701:18;16694:30;16747:86;16828:3;16817:9;16813:19;16799:12;16785;16747:86;:::i;:::-;16733:100;;16894:2;16886:6;16882:15;16869:29;16864:2;16853:9;16849:18;16842:57;16930:35;16961:2;16953:6;16949:15;16930:35;:::i;:::-;16908:57;;16974:55;17024:3;17013:9;17009:19;16993:14;16974:55;:::i;:::-;17060:36;17091:3;17083:6;17079:16;17060:36;:::i;:::-;17038:58;;17105:55;17155:3;17144:9;17140:19;17124:14;17105:55;:::i;:::-;17191:36;17222:3;17214:6;17210:16;17191:36;:::i;:::-;17169:58;;17236:55;17286:3;17275:9;17271:19;17255:14;17236:55;:::i;:::-;17322:36;17353:3;17345:6;17341:16;17322:36;:::i;:::-;17300:58;;17367:55;17417:3;17406:9;17402:19;17386:14;17367:55;:::i;:::-;17483:3;17475:6;17471:16;17458:30;17453:2;17442:9;17438:18;17431:58;;;17506:6;17498:14;;;16182:1336;;;;:::o;17523:406::-;17725:2;17707:21;;;17764:2;17744:18;;;17737:30;17803:34;17798:2;17783:18;;17776:62;-1:-1:-1;;;17869:2:640;17854:18;;17847:40;17919:3;17904:19;;17523:406::o;18229:184::-;18299:6;18352:2;18340:9;18331:7;18327:23;18323:32;18320:52;;;18368:1;18365;18358:12;18320:52;-1:-1:-1;18391:16:640;;18229:184;-1:-1:-1;18229:184:640:o;19345:338::-;19547:2;19529:21;;;19586:2;19566:18;;;19559:30;-1:-1:-1;;;19620:2:640;19605:18;;19598:44;19674:2;19659:18;;19345:338::o;19688:331::-;19793:9;19804;19846:8;19834:10;19831:24;19828:44;;;19868:1;19865;19858:12;19828:44;19897:6;19887:8;19884:20;19881:40;;;19917:1;19914;19907:12;19881:40;-1:-1:-1;;19943:23:640;;;19988:25;;;;;-1:-1:-1;19688:331:640:o;20024:323::-;-1:-1:-1;;;;;;20144:19:640;;20220:11;;;;20251:1;20243:10;;20240:101;;;20328:2;20322;20315:3;20312:1;20308:11;20305:1;20301:19;20297:28;20293:2;20289:37;20285:46;20276:55;;20240:101;;;20024:323;;;;:::o;20612:180::-;20671:6;20724:2;20712:9;20703:7;20699:23;20695:32;20692:52;;;20740:1;20737;20730:12;20692:52;-1:-1:-1;20763:23:640;;20612:180;-1:-1:-1;20612:180:640:o;20797:183::-;20857:4;-1:-1:-1;;;;;20882:6:640;20879:30;20876:56;;;20912:18;;:::i;:::-;-1:-1:-1;20957:1:640;20953:14;20969:4;20949:25;;20797:183::o;20985:662::-;21039:5;21092:3;21085:4;21077:6;21073:17;21069:27;21059:55;;21110:1;21107;21100:12;21059:55;21146:6;21133:20;21172:4;21196:60;21212:43;21252:2;21212:43;:::i;:::-;21196:60;:::i;:::-;21290:15;;;21376:1;21372:10;;;;21360:23;;21356:32;;;21321:12;;;;21400:15;;;21397:35;;;21428:1;21425;21418:12;21397:35;21464:2;21456:6;21452:15;21476:142;21492:6;21487:3;21484:15;21476:142;;;21558:17;;21546:30;;21596:12;;;;21509;;21476:142;;;-1:-1:-1;21636:5:640;20985:662;-1:-1:-1;;;;;;20985:662:640:o;21652:886::-;21704:5;21757:3;21750:4;21742:6;21738:17;21734:27;21724:55;;21775:1;21772;21765:12;21724:55;21811:6;21798:20;21837:4;21861:60;21877:43;21917:2;21877:43;:::i;21861:60::-;21955:15;;;22041:1;22037:10;;;;22025:23;;22021:32;;;21986:12;;;;22065:15;;;22062:35;;;22093:1;22090;22083:12;22062:35;22129:2;22121:6;22117:15;22141:368;22157:6;22152:3;22149:15;22141:368;;;22243:3;22230:17;-1:-1:-1;;;;;22266:11:640;22263:35;22260:125;;;22339:1;22368:2;22364;22357:14;22260:125;22410:56;22462:3;22457:2;22443:11;22435:6;22431:24;22427:33;22410:56;:::i;:::-;22398:69;;-1:-1:-1;22487:12:640;;;;22174;;22141:368;;22543:1448;22704:6;22712;22720;22773:2;22761:9;22752:7;22748:23;22744:32;22741:52;;;22789:1;22786;22779:12;22741:52;22829:9;22816:23;-1:-1:-1;;;;;22899:2:640;22891:6;22888:14;22885:34;;;22915:1;22912;22905:12;22885:34;22953:6;22942:9;22938:22;22928:32;;22998:7;22991:4;22987:2;22983:13;22979:27;22969:55;;23020:1;23017;23010:12;22969:55;23056:2;23043:16;23078:4;23102:60;23118:43;23158:2;23118:43;:::i;23102:60::-;23196:15;;;23278:1;23274:10;;;;23266:19;;23262:28;;;23227:12;;;;23302:19;;;23299:39;;;23334:1;23331;23324:12;23299:39;23358:11;;;;23378:217;23394:6;23389:3;23386:15;23378:217;;;23474:3;23461:17;23491:31;23516:5;23491:31;:::i;:::-;23535:18;;23411:12;;;;23573;;;;23378:217;;;23614:5;-1:-1:-1;;23657:18:640;;23644:32;;-1:-1:-1;;23688:16:640;;;23685:36;;;23717:1;23714;23707:12;23685:36;23740:63;23795:7;23784:8;23773:9;23769:24;23740:63;:::i;:::-;23730:73;;23856:2;23845:9;23841:18;23828:32;23812:48;;23885:2;23875:8;23872:16;23869:36;;;23901:1;23898;23891:12;23869:36;;23924:61;23977:7;23966:8;23955:9;23951:24;23924:61;:::i;:::-;23914:71;;;22543:1448;;;;;:::o;24563:127::-;24624:10;24619:3;24615:20;24612:1;24605:31;24655:4;24652:1;24645:15;24679:4;24676:1;24669:15;25811:125;25851:4;25879:1;25876;25873:8;25870:34;;;25884:18;;:::i;:::-;-1:-1:-1;25921:9:640;;25811:125::o;25941:127::-;26002:10;25997:3;25993:20;25990:1;25983:31;26033:4;26030:1;26023:15;26057:4;26054:1;26047:15;26073:620;26244:3;26275;26322:6;26244:3;26356:310;26370:6;26367:1;26364:13;26356:310;;;26445:6;26432:20;26465:31;26490:5;26465:31;:::i;:::-;-1:-1:-1;;;;;26523:31:640;26509:46;;26578:4;26604:14;;;;26641:15;;;;;26551:1;26385:9;26356:310;;;-1:-1:-1;26682:5:640;;26073:620;-1:-1:-1;;;;;26073:620:640:o;27961:274::-;28090:3;28128:6;28122:13;28144:53;28190:6;28185:3;28178:4;28170:6;28166:17;28144:53;:::i;:::-;28213:16;;;;;27961:274;-1:-1:-1;;27961:274:640:o;28643:219::-;28792:2;28781:9;28774:21;28755:4;28812:44;28852:2;28841:9;28837:18;28829:6;28812:44;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "50387": [
        {
          "start": 8602,
          "length": 32
        }
      ],
      "50389": [
        {
          "start": 8560,
          "length": 32
        }
      ],
      "50391": [
        {
          "start": 8518,
          "length": 32
        }
      ],
      "50393": [
        {
          "start": 8685,
          "length": 32
        }
      ],
      "50395": [
        {
          "start": 8722,
          "length": 32
        }
      ],
      "50397": [
        {
          "start": 8643,
          "length": 32
        }
      ],
      "68088": [
        {
          "start": 796,
          "length": 32
        },
        {
          "start": 6271,
          "length": 32
        },
        {
          "start": 6319,
          "length": 32
        },
        {
          "start": 6443,
          "length": 32
        },
        {
          "start": 6510,
          "length": 32
        },
        {
          "start": 6586,
          "length": 32
        }
      ],
      "68092": [
        {
          "start": 4351,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addDeposit()": "4a58db19",
    "entryPoint()": "b0d691fe",
    "factory()": "c45a0155",
    "getAllActiveSigners()": "8b52d723",
    "getAllAdmins()": "e9523c97",
    "getAllSigners()": "d42f2f35",
    "getDeposit()": "c399ec88",
    "getNonce()": "d087d288",
    "getPermissionsForSigner(address)": "f15d424e",
    "initialize(address,bytes)": "d1f57894",
    "isActiveSigner(address)": "7dff5a79",
    "isAdmin(address)": "24d7806c",
    "isValidSignature(bytes32,bytes)": "1626ba7e",
    "isValidSigner(address,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": "1dd756c5",
    "multicall(bytes[])": "ac9650d8",
    "setAdmin(address,bool)": "4b0bddd2",
    "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)": "40053da6",
    "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "3a871cdd",
    "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)": "73e925d6",
    "withdrawDepositTo(address,uint256)": "4d44560d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entrypoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAdmin\",\"type\":\"bool\"}],\"name\":\"AdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authorizingSigner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetSigner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"approvedTargets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"nativeTokenLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"permissionStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"permissionEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reqValidityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reqValidityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct IAccountPermissions.SignerPermissionRequest\",\"name\":\"permissions\",\"type\":\"tuple\"}],\"name\":\"SignerPermissionsUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllActiveSigners\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"approvedTargets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"nativeTokenLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"startTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"endTimestamp\",\"type\":\"uint128\"}],\"internalType\":\"struct IAccountPermissions.SignerPermissions[]\",\"name\":\"signers\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAdmins\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSigners\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"approvedTargets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"nativeTokenLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"startTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"endTimestamp\",\"type\":\"uint128\"}],\"internalType\":\"struct IAccountPermissions.SignerPermissions[]\",\"name\":\"signers\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"getPermissionsForSigner\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"approvedTargets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"nativeTokenLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"startTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"endTimestamp\",\"type\":\"uint128\"}],\"internalType\":\"struct IAccountPermissions.SignerPermissions\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"isActiveSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"_userOp\",\"type\":\"tuple\"}],\"name\":\"isValidSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isAdmin\",\"type\":\"bool\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"approvedTargets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"nativeTokenLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"permissionStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"permissionEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reqValidityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reqValidityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct IAccountPermissions.SignerPermissionRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"setPermissionsForSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"approvedTargets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"nativeTokenLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"permissionStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"permissionEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reqValidityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reqValidityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct IAccountPermissions.SignerPermissionRequest\",\"name\":\"req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verifySignerPermissionRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawDepositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)\":{\"details\":\"Verifies that a request is signed by an authorized account.\"}},\"version\":1},\"userdoc\":{\"events\":{\"AdminUpdated(address,bool)\":{\"notice\":\"Emitted when an admin is set or removed.\"},\"SignerPermissionsUpdated(address,address,(address,address[],uint256,uint128,uint128,uint128,uint128,bytes32))\":{\"notice\":\"Emitted when permissions for a signer are updated.\"}},\"kind\":\"user\",\"methods\":{\"addDeposit()\":{\"notice\":\"Deposit funds for this account in Entrypoint.\"},\"entryPoint()\":{\"notice\":\"Returns the EIP 4337 entrypoint contract.\"},\"factory()\":{\"notice\":\"EIP 4337 factory for this contract.\"},\"getAllActiveSigners()\":{\"notice\":\"Returns all signers with active permissions to use the account.\"},\"getAllAdmins()\":{\"notice\":\"Returns all admins of the account.\"},\"getAllSigners()\":{\"notice\":\"Returns all active and inactive signers of the account.\"},\"getDeposit()\":{\"notice\":\"Returns the balance of the account in Entrypoint.\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"getPermissionsForSigner(address)\":{\"notice\":\"Returns the restrictions under which a signer can use the smart wallet.\"},\"initialize(address,bytes)\":{\"notice\":\"Initializes the smart contract wallet.\"},\"isActiveSigner(address)\":{\"notice\":\"Returns whether the given account is an active signer on the account.\"},\"isAdmin(address)\":{\"notice\":\"Returns whether the given account is an admin.\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"See EIP-1271\"},\"isValidSigner(address,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Returns whether a signer is authorized to perform transactions using the wallet.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"setAdmin(address,bool)\":{\"notice\":\"Adds / removes an account as an admin.\"},\"setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)\":{\"notice\":\"Sets the permissions for a given signer.\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\"},\"withdrawDepositTo(address,uint256)\":{\"notice\":\"Withdraw funds for this account from Entrypoint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/account/utils/AccountCore.sol\":\"AccountCore\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/eip/ERC1271.sol\":{\"keccak256\":\"0xce12f73b64a1d954ce3b96cc83974d9a9d7b1e6f34e75ed8c1fdcf19ed92574e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://ac19729c3f76aa804eff7dd0365bfaff3871b22953908a26cc0dd07a0319c6c0\",\"dweb:/ipfs/QmTQMZGceJ4QvWAwngCEbt6PfQhZMHWhuzE8wWVC8yR7Ro\"]},\"contracts/eip/ERC165.sol\":{\"keccak256\":\"0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c\",\"dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/interface/IAccountPermissions.sol\":{\"keccak256\":\"0xa2c0ef93db11c301cac994d254caa4a41d2a2d10184305806bcfa89be6944fa0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0bd17a3fba00aa55f8b5f4b8b96b1697cd99a0f16aa5f89cdb3441d144699850\",\"dweb:/ipfs/QmPkHohPxsZtp9B22i7EEkK2XrrmveyMy1rSYUGiWjU828\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/upgradeable/AccountPermissions.sol\":{\"keccak256\":\"0xae656e9b413055861211576d81606a3338ccfad31a9b23ac1c91de22feb4fceb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c9ee4f505d5faa2ba5dca2220b7a1be85fcc0491b6cae3d6b26c4ee9e90ac7bc\",\"dweb:/ipfs/QmWvBtYk92STuDgFKraDCxaqopvSjjDdhYPyLXKwPyRwhP\"]},\"contracts/extension/upgradeable/ContractMetadata.sol\":{\"keccak256\":\"0x93f8793291ab833930046db54aefb97749a2a59b35eb64e2a765c565dd7d553c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39827a9ffd5a684607a43ea3591d46ce4a256b7a73851d10cc90d898bc3b9463\",\"dweb:/ipfs/QmSt8AmxU8BLCmn1suJo4Q5nPjT77LXqkCvVwii3uahCWr\"]},\"contracts/extension/upgradeable/Initializable.sol\":{\"keccak256\":\"0x1679b562e7e9d9b5fa34abf9671cd4ada7bbc7f0f40bcf18fb8e05bf88962685\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://d97aac4f1dd707f1c3440c1614bc9aea4b0ef138bcb236d99632585341fcfd0d\",\"dweb:/ipfs/QmNyQ5giiw4sUUCxoNR23D6BQuGL3qpvThWsErZpTnLD1d\"]},\"contracts/external-deps/openzeppelin/proxy/Clones.sol\":{\"keccak256\":\"0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7\",\"dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5\"]},\"contracts/external-deps/openzeppelin/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xfa15dab6578501dc97f9b3fbb5c149f687556f1c9e05f8e308e203487202a826\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d78ecefcc13f40d148f851c3ee037c52e6bc4d9cf99bff47202372e8b12ebb4\",\"dweb:/ipfs/QmYSFk1hKNeW5M1SXg8JREVSw3EkTtheHm6je8kFzJCwfn\"]},\"contracts/external-deps/openzeppelin/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"contracts/external-deps/openzeppelin/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3105f99cacb873592e34c8a0ac41c082e640ca5ba5f1269f9d156f72780aabb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52d27f9e2e65e3f9cd8376a4cd30370b065d355f810458872115e0b23ca483d7\",\"dweb:/ipfs/QmQ9rofayAoymc4pgjqCss4AmkGGKJEsDcieqPMsKtKByC\"]},\"contracts/external-deps/openzeppelin/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"contracts/external-deps/openzeppelin/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"contracts/external-deps/openzeppelin/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x2e5b68f695b674731ee7f041a4924d7bb917b87d1efc8cf8ec00904ee7ab8b49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f0ead0687405faad7c08e19bfa4d26d3517ca30fa5bdf5b7b77f09d074f6918\",\"dweb:/ipfs/QmaovoMzoEnW8t8EbuA5XXrUxXvgEmNk7F9aqzR56BQA6v\"]},\"contracts/external-deps/openzeppelin/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"contracts/external-deps/openzeppelin/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/lib/BytesLib.sol\":{\"keccak256\":\"0xbed6b32c32e2fdbc25ffc9569b5ce8655b321ade31dff76fa2edcae97e56239c\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://2b068bd88b6141b2c501dffe39959b02bc39c3dcec9e7c4f6201d347d1f3c73f\",\"dweb:/ipfs/QmXXpP5roDyhBz1uPFRx6i3A9tzrPY4rcdo2GQ6THSmz2K\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/prebuilts/account/interface/IAccount.sol\":{\"keccak256\":\"0x98f2d41bd69f4b46a697957681d2e14cf2f10b6133ede864b838f821899d4e41\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ddaae235044c84994f693a38030d3923bb8e65f9b7f1fc5028a424a16f7a723c\",\"dweb:/ipfs/QmdXzv1k9mdECGxUDigBf6GAb3bn3qMdTKcmGadJ4EoLzL\"]},\"contracts/prebuilts/account/interface/IAccountCore.sol\":{\"keccak256\":\"0xd1fc238376d4fa8c881f06159662b4c5b855c633fad840d97b1abc368b701a83\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://990de8226236d213aa9b8eef60d96782c58cc226a0f4ec0ea6c0c63a2a3019bc\",\"dweb:/ipfs/QmWoUNKgiAH8vPfsNsjEtSNsg6Rmgnqp4fU9Zaej4iKRsE\"]},\"contracts/prebuilts/account/interface/IAccountFactory.sol\":{\"keccak256\":\"0x11fe2002d11d6d3341ae611e767f510ccd6bca402414d2bac4d8c208903f9bcb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://47b4d123bfa8f53cd0862c2e23dbc1297f9c0b76a3f7174e304e942e68bd53ad\",\"dweb:/ipfs/QmNcTheTGy1NgPyAAi1k7vPjcUsYz1t7wrha39HSqjo91e\"]},\"contracts/prebuilts/account/interface/IAggregator.sol\":{\"keccak256\":\"0xf933b69fee393c235a75d99f8d310091b955e8af0240d3855939e16e86a85873\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://772937aa4c500fac35a8edf31c413c59d307d8558c941272a51deba44c0f730e\",\"dweb:/ipfs/QmNvW9G3BCTLFvSBb15ZqJMzETWF5drE7gAfbLxkz6aknJ\"]},\"contracts/prebuilts/account/interface/IEntrypoint.sol\":{\"keccak256\":\"0xe94c12629f153c344d698c207f32a0744b49d3849df95101e631fbb96a8f6f8d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://810ae34240668bf730ffd252bff57ff6f94215c6a461c6d42bc9b8842a0e5114\",\"dweb:/ipfs/QmQ1SnuCxgvEAHS4z2y6Vz4P5scwCxRP1wBqYQvKcabqAK\"]},\"contracts/prebuilts/account/interface/INonceManager.sol\":{\"keccak256\":\"0xf509795f7336c849ac5d247d71af20376b67201c647aa847fd17ca8e7909dec3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b3418173e37999ba0015bb352ab1b9dfbe1296143a8565ea3d3ce7a9a9e087b4\",\"dweb:/ipfs/QmS93Dw1FfPj5kHk9cLrh1VssbwNyaKKo5LNmEHwxzDqNp\"]},\"contracts/prebuilts/account/interface/IStakeManager.sol\":{\"keccak256\":\"0x61562da096c3c3da5755bbb5b552ea713723d7be36975cd401022ff321753b73\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://e6bcd63477257007d2fcd92b38c8105cb82c2d0eae3836ac856839234481f4ab\",\"dweb:/ipfs/QmZuNE3y1RvtRXYiw3eiT25YQH2SAa1kFcpxAgW9KX6KtZ\"]},\"contracts/prebuilts/account/non-upgradeable/Account.sol\":{\"keccak256\":\"0xfd615d4c0986aa281a3084e82d9cf180cf77d3d3fd85eb1c474d0726595521ae\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://db7627279c77c1bd6c3e8b2e1ab9bf6645a49b087876ae31ab697e684b233dcf\",\"dweb:/ipfs/QmYvvZDDFKo4XRHb1MxQBQCWDmJ1aZWGKb4PzdcFb6UX4h\"]},\"contracts/prebuilts/account/utils/AccountCore.sol\":{\"keccak256\":\"0x66d1c10c5c9fa2bac8917fc5721749b3e48986b2c14d08b8dbd1463d94dac554\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://47053a529defcdfd67a89d7f4a4859d5e89fccf6cb070ed7f925b70037fde7ea\",\"dweb:/ipfs/QmUaS414g4Vq5reA96yyqxUdNBbpFBf7Tx9zqjdFnJj8Jt\"]},\"contracts/prebuilts/account/utils/BaseAccount.sol\":{\"keccak256\":\"0x87502116044c3de1707a3dc73d67d4e89faf3bc8aac7f4d6f77abbf164a9feec\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ea097b8c3bb46d6c9ed6d91836f8c11a84319af849f71aa82624b7bdce4d9e8d\",\"dweb:/ipfs/QmeXGaqW48WCCvFoHTmP7eRX5Jq4uMW9p6kfyvRGFbApfT\"]},\"contracts/prebuilts/account/utils/BaseAccountFactory.sol\":{\"keccak256\":\"0xf7120cb2a5d5aa5bf8b9431098bcaf6899ce04bbe5430c3a8c6548f5599cec41\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e65d6e7d3c99928cdda70548cdb0811f016ebf5303056e31659ba73629481f9b\",\"dweb:/ipfs/QmbCCfFhVuUaW5CzGryR9gh5nURhboec7h6DC7y3hWdpe4\"]},\"contracts/prebuilts/account/utils/Helpers.sol\":{\"keccak256\":\"0xb7d1f138c5d0a2d3302c2256d2bd0ab8976baf89edfe0d2de35c5017aeb079c7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a2a8db74e00c5e83f03f35f067a341df50b2171877f1847cd1b544fac6457561\",\"dweb:/ipfs/QmZyhkL5WD97uMmpiXWqjipiWGN1GLhZgadXR56eLQMZEh\"]},\"contracts/prebuilts/account/utils/UserOperation.sol\":{\"keccak256\":\"0x3f3aa133687f459f9fb538835a54aa769418dd6303a02c9fa691690fcc397964\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://993f8daa2320ca301167767fff33a6989697394fe6dc65905edc4b32368850b5\",\"dweb:/ipfs/Qmaymg8dsE6mrfAWJPs4DXbHR1wxESJnxyFhNkm7AmKBCK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entrypoint",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_factory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "isAdmin",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "authorizingSigner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "targetSigner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IAccountPermissions.SignerPermissionRequest",
              "name": "permissions",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "approvedTargets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "nativeTokenLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "permissionStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "permissionEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "reqValidityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "reqValidityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SignerPermissionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "addDeposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllActiveSigners",
          "outputs": [
            {
              "internalType": "struct IAccountPermissions.SignerPermissions[]",
              "name": "signers",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "approvedTargets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "nativeTokenLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "startTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "endTimestamp",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllAdmins",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllSigners",
          "outputs": [
            {
              "internalType": "struct IAccountPermissions.SignerPermissions[]",
              "name": "signers",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "approvedTargets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "nativeTokenLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "startTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "endTimestamp",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPermissionsForSigner",
          "outputs": [
            {
              "internalType": "struct IAccountPermissions.SignerPermissions",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "approvedTargets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "nativeTokenLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "startTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "endTimestamp",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isActiveSigner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAdmin",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "magicValue",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_signer",
              "type": "address"
            },
            {
              "internalType": "struct UserOperation",
              "name": "_userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSigner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isAdmin",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "struct IAccountPermissions.SignerPermissionRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "approvedTargets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "nativeTokenLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "permissionStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "permissionEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "reqValidityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "reqValidityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPermissionsForSigner"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "missingAccountFunds",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validateUserOp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IAccountPermissions.SignerPermissionRequest",
              "name": "req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "approvedTargets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "nativeTokenLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "permissionStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "permissionEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "reqValidityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "reqValidityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifySignerPermissionRequest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawDepositTo"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)": {
            "details": "Verifies that a request is signed by an authorized account."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addDeposit()": {
            "notice": "Deposit funds for this account in Entrypoint."
          },
          "entryPoint()": {
            "notice": "Returns the EIP 4337 entrypoint contract."
          },
          "factory()": {
            "notice": "EIP 4337 factory for this contract."
          },
          "getAllActiveSigners()": {
            "notice": "Returns all signers with active permissions to use the account."
          },
          "getAllAdmins()": {
            "notice": "Returns all admins of the account."
          },
          "getAllSigners()": {
            "notice": "Returns all active and inactive signers of the account."
          },
          "getDeposit()": {
            "notice": "Returns the balance of the account in Entrypoint."
          },
          "getNonce()": {
            "notice": "Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"
          },
          "getPermissionsForSigner(address)": {
            "notice": "Returns the restrictions under which a signer can use the smart wallet."
          },
          "initialize(address,bytes)": {
            "notice": "Initializes the smart contract wallet."
          },
          "isActiveSigner(address)": {
            "notice": "Returns whether the given account is an active signer on the account."
          },
          "isAdmin(address)": {
            "notice": "Returns whether the given account is an admin."
          },
          "isValidSignature(bytes32,bytes)": {
            "notice": "See EIP-1271"
          },
          "isValidSigner(address,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
            "notice": "Returns whether a signer is authorized to perform transactions using the wallet."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "setAdmin(address,bool)": {
            "notice": "Adds / removes an account as an admin."
          },
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)": {
            "notice": "Sets the permissions for a given signer."
          },
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "notice": "Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods."
          },
          "withdrawDepositTo(address,uint256)": {
            "notice": "Withdraw funds for this account from Entrypoint."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/account/utils/AccountCore.sol": "AccountCore"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/ERC1271.sol": {
        "keccak256": "0xce12f73b64a1d954ce3b96cc83974d9a9d7b1e6f34e75ed8c1fdcf19ed92574e",
        "urls": [
          "bzz-raw://ac19729c3f76aa804eff7dd0365bfaff3871b22953908a26cc0dd07a0319c6c0",
          "dweb:/ipfs/QmTQMZGceJ4QvWAwngCEbt6PfQhZMHWhuzE8wWVC8yR7Ro"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/ERC165.sol": {
        "keccak256": "0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b",
        "urls": [
          "bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c",
          "dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IAccountPermissions.sol": {
        "keccak256": "0xa2c0ef93db11c301cac994d254caa4a41d2a2d10184305806bcfa89be6944fa0",
        "urls": [
          "bzz-raw://0bd17a3fba00aa55f8b5f4b8b96b1697cd99a0f16aa5f89cdb3441d144699850",
          "dweb:/ipfs/QmPkHohPxsZtp9B22i7EEkK2XrrmveyMy1rSYUGiWjU828"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/upgradeable/AccountPermissions.sol": {
        "keccak256": "0xae656e9b413055861211576d81606a3338ccfad31a9b23ac1c91de22feb4fceb",
        "urls": [
          "bzz-raw://c9ee4f505d5faa2ba5dca2220b7a1be85fcc0491b6cae3d6b26c4ee9e90ac7bc",
          "dweb:/ipfs/QmWvBtYk92STuDgFKraDCxaqopvSjjDdhYPyLXKwPyRwhP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/ContractMetadata.sol": {
        "keccak256": "0x93f8793291ab833930046db54aefb97749a2a59b35eb64e2a765c565dd7d553c",
        "urls": [
          "bzz-raw://39827a9ffd5a684607a43ea3591d46ce4a256b7a73851d10cc90d898bc3b9463",
          "dweb:/ipfs/QmSt8AmxU8BLCmn1suJo4Q5nPjT77LXqkCvVwii3uahCWr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Initializable.sol": {
        "keccak256": "0x1679b562e7e9d9b5fa34abf9671cd4ada7bbc7f0f40bcf18fb8e05bf88962685",
        "urls": [
          "bzz-raw://d97aac4f1dd707f1c3440c1614bc9aea4b0ef138bcb236d99632585341fcfd0d",
          "dweb:/ipfs/QmNyQ5giiw4sUUCxoNR23D6BQuGL3qpvThWsErZpTnLD1d"
        ],
        "license": "Apache 2.0"
      },
      "contracts/external-deps/openzeppelin/proxy/Clones.sol": {
        "keccak256": "0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10",
        "urls": [
          "bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7",
          "dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xfa15dab6578501dc97f9b3fbb5c149f687556f1c9e05f8e308e203487202a826",
        "urls": [
          "bzz-raw://7d78ecefcc13f40d148f851c3ee037c52e6bc4d9cf99bff47202372e8b12ebb4",
          "dweb:/ipfs/QmYSFk1hKNeW5M1SXg8JREVSw3EkTtheHm6je8kFzJCwfn"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC1155/utils/ERC1155Holder.sol": {
        "keccak256": "0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3",
        "urls": [
          "bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519",
          "dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC1155/utils/ERC1155Receiver.sol": {
        "keccak256": "0x3105f99cacb873592e34c8a0ac41c082e640ca5ba5f1269f9d156f72780aabb8",
        "urls": [
          "bzz-raw://52d27f9e2e65e3f9cd8376a4cd30370b065d355f810458872115e0b23ca483d7",
          "dweb:/ipfs/QmQ9rofayAoymc4pgjqCss4AmkGGKJEsDcieqPMsKtKByC"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC721/utils/ERC721Holder.sol": {
        "keccak256": "0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028",
        "urls": [
          "bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf",
          "dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x2e5b68f695b674731ee7f041a4924d7bb917b87d1efc8cf8ec00904ee7ab8b49",
        "urls": [
          "bzz-raw://9f0ead0687405faad7c08e19bfa4d26d3517ca30fa5bdf5b7b77f09d074f6918",
          "dweb:/ipfs/QmaovoMzoEnW8t8EbuA5XXrUxXvgEmNk7F9aqzR56BQA6v"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/cryptography/EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "contracts/lib/BytesLib.sol": {
        "keccak256": "0xbed6b32c32e2fdbc25ffc9569b5ce8655b321ade31dff76fa2edcae97e56239c",
        "urls": [
          "bzz-raw://2b068bd88b6141b2c501dffe39959b02bc39c3dcec9e7c4f6201d347d1f3c73f",
          "dweb:/ipfs/QmXXpP5roDyhBz1uPFRx6i3A9tzrPY4rcdo2GQ6THSmz2K"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/account/interface/IAccount.sol": {
        "keccak256": "0x98f2d41bd69f4b46a697957681d2e14cf2f10b6133ede864b838f821899d4e41",
        "urls": [
          "bzz-raw://ddaae235044c84994f693a38030d3923bb8e65f9b7f1fc5028a424a16f7a723c",
          "dweb:/ipfs/QmdXzv1k9mdECGxUDigBf6GAb3bn3qMdTKcmGadJ4EoLzL"
        ],
        "license": "GPL-3.0"
      },
      "contracts/prebuilts/account/interface/IAccountCore.sol": {
        "keccak256": "0xd1fc238376d4fa8c881f06159662b4c5b855c633fad840d97b1abc368b701a83",
        "urls": [
          "bzz-raw://990de8226236d213aa9b8eef60d96782c58cc226a0f4ec0ea6c0c63a2a3019bc",
          "dweb:/ipfs/QmWoUNKgiAH8vPfsNsjEtSNsg6Rmgnqp4fU9Zaej4iKRsE"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/account/interface/IAccountFactory.sol": {
        "keccak256": "0x11fe2002d11d6d3341ae611e767f510ccd6bca402414d2bac4d8c208903f9bcb",
        "urls": [
          "bzz-raw://47b4d123bfa8f53cd0862c2e23dbc1297f9c0b76a3f7174e304e942e68bd53ad",
          "dweb:/ipfs/QmNcTheTGy1NgPyAAi1k7vPjcUsYz1t7wrha39HSqjo91e"
        ],
        "license": "GPL-3.0"
      },
      "contracts/prebuilts/account/interface/IAggregator.sol": {
        "keccak256": "0xf933b69fee393c235a75d99f8d310091b955e8af0240d3855939e16e86a85873",
        "urls": [
          "bzz-raw://772937aa4c500fac35a8edf31c413c59d307d8558c941272a51deba44c0f730e",
          "dweb:/ipfs/QmNvW9G3BCTLFvSBb15ZqJMzETWF5drE7gAfbLxkz6aknJ"
        ],
        "license": "GPL-3.0"
      },
      "contracts/prebuilts/account/interface/IEntrypoint.sol": {
        "keccak256": "0xe94c12629f153c344d698c207f32a0744b49d3849df95101e631fbb96a8f6f8d",
        "urls": [
          "bzz-raw://810ae34240668bf730ffd252bff57ff6f94215c6a461c6d42bc9b8842a0e5114",
          "dweb:/ipfs/QmQ1SnuCxgvEAHS4z2y6Vz4P5scwCxRP1wBqYQvKcabqAK"
        ],
        "license": "GPL-3.0"
      },
      "contracts/prebuilts/account/interface/INonceManager.sol": {
        "keccak256": "0xf509795f7336c849ac5d247d71af20376b67201c647aa847fd17ca8e7909dec3",
        "urls": [
          "bzz-raw://b3418173e37999ba0015bb352ab1b9dfbe1296143a8565ea3d3ce7a9a9e087b4",
          "dweb:/ipfs/QmS93Dw1FfPj5kHk9cLrh1VssbwNyaKKo5LNmEHwxzDqNp"
        ],
        "license": "GPL-3.0"
      },
      "contracts/prebuilts/account/interface/IStakeManager.sol": {
        "keccak256": "0x61562da096c3c3da5755bbb5b552ea713723d7be36975cd401022ff321753b73",
        "urls": [
          "bzz-raw://e6bcd63477257007d2fcd92b38c8105cb82c2d0eae3836ac856839234481f4ab",
          "dweb:/ipfs/QmZuNE3y1RvtRXYiw3eiT25YQH2SAa1kFcpxAgW9KX6KtZ"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/prebuilts/account/non-upgradeable/Account.sol": {
        "keccak256": "0xfd615d4c0986aa281a3084e82d9cf180cf77d3d3fd85eb1c474d0726595521ae",
        "urls": [
          "bzz-raw://db7627279c77c1bd6c3e8b2e1ab9bf6645a49b087876ae31ab697e684b233dcf",
          "dweb:/ipfs/QmYvvZDDFKo4XRHb1MxQBQCWDmJ1aZWGKb4PzdcFb6UX4h"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/account/utils/AccountCore.sol": {
        "keccak256": "0x66d1c10c5c9fa2bac8917fc5721749b3e48986b2c14d08b8dbd1463d94dac554",
        "urls": [
          "bzz-raw://47053a529defcdfd67a89d7f4a4859d5e89fccf6cb070ed7f925b70037fde7ea",
          "dweb:/ipfs/QmUaS414g4Vq5reA96yyqxUdNBbpFBf7Tx9zqjdFnJj8Jt"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/account/utils/BaseAccount.sol": {
        "keccak256": "0x87502116044c3de1707a3dc73d67d4e89faf3bc8aac7f4d6f77abbf164a9feec",
        "urls": [
          "bzz-raw://ea097b8c3bb46d6c9ed6d91836f8c11a84319af849f71aa82624b7bdce4d9e8d",
          "dweb:/ipfs/QmeXGaqW48WCCvFoHTmP7eRX5Jq4uMW9p6kfyvRGFbApfT"
        ],
        "license": "GPL-3.0"
      },
      "contracts/prebuilts/account/utils/BaseAccountFactory.sol": {
        "keccak256": "0xf7120cb2a5d5aa5bf8b9431098bcaf6899ce04bbe5430c3a8c6548f5599cec41",
        "urls": [
          "bzz-raw://e65d6e7d3c99928cdda70548cdb0811f016ebf5303056e31659ba73629481f9b",
          "dweb:/ipfs/QmbCCfFhVuUaW5CzGryR9gh5nURhboec7h6DC7y3hWdpe4"
        ],
        "license": "GPL-3.0"
      },
      "contracts/prebuilts/account/utils/Helpers.sol": {
        "keccak256": "0xb7d1f138c5d0a2d3302c2256d2bd0ab8976baf89edfe0d2de35c5017aeb079c7",
        "urls": [
          "bzz-raw://a2a8db74e00c5e83f03f35f067a341df50b2171877f1847cd1b544fac6457561",
          "dweb:/ipfs/QmZyhkL5WD97uMmpiXWqjipiWGN1GLhZgadXR56eLQMZEh"
        ],
        "license": "GPL-3.0"
      },
      "contracts/prebuilts/account/utils/UserOperation.sol": {
        "keccak256": "0x3f3aa133687f459f9fb538835a54aa769418dd6303a02c9fa691690fcc397964",
        "urls": [
          "bzz-raw://993f8daa2320ca301167767fff33a6989697394fe6dc65905edc4b32368850b5",
          "dweb:/ipfs/Qmaymg8dsE6mrfAWJPs4DXbHR1wxESJnxyFhNkm7AmKBCK"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/account/utils/AccountCore.sol",
    "id": 68645,
    "exportedSymbols": {
      "Account": [
        67156
      ],
      "AccountCore": [
        68644
      ],
      "AccountPermissions": [
        38899
      ],
      "AccountPermissionsStorage": [
        38142
      ],
      "BaseAccount": [
        69054
      ],
      "BaseAccountFactory": [
        69410
      ],
      "BytesLib": [
        64031
      ],
      "Clones": [
        46503
      ],
      "ECDSA": [
        50381
      ],
      "EIP712": [
        50535
      ],
      "ERC1271": [
        8656
      ],
      "EnumerableSet": [
        51927
      ],
      "IAccount": [
        65702
      ],
      "IAccountCore": [
        65720
      ],
      "IAccountFactory": [
        65798
      ],
      "IAccountPermissions": [
        32934
      ],
      "IAggregator": [
        65832
      ],
      "IEntryPoint": [
        66036
      ],
      "IMulticall": [
        33709
      ],
      "INonceManager": [
        66055
      ],
      "IStakeManager": [
        66195
      ],
      "InitStorage": [
        40871
      ],
      "Initializable": [
        41093
      ],
      "Multicall": [
        21413
      ],
      "TWAddress": [
        64850
      ],
      "TWStrings": [
        65550
      ],
      "UserOperation": [
        72684
      ],
      "UserOperationLib": [
        72854
      ],
      "ValidationData": [
        71734
      ],
      "_intersectTimeRange": [
        71878
      ],
      "_packValidationData": [
        71915,
        71953
      ],
      "_parseValidationData": [
        71793
      ],
      "calldataKeccak": [
        71963
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9441:313",
    "nodes": [
      {
        "id": 68056,
        "nodeType": "PragmaDirective",
        "src": "39:24:313",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 68057,
        "nodeType": "ImportDirective",
        "src": "195:36:313",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/account/utils/BaseAccount.sol",
        "file": "./../utils/BaseAccount.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68645,
        "sourceUnit": 69055,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 68058,
        "nodeType": "ImportDirective",
        "src": "253:42:313",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../../../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68645,
        "sourceUnit": 21414,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 68059,
        "nodeType": "ImportDirective",
        "src": "296:58:313",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Initializable.sol",
        "file": "../../../extension/upgradeable/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68645,
        "sourceUnit": 41094,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 68060,
        "nodeType": "ImportDirective",
        "src": "355:34:313",
        "nodes": [],
        "absolutePath": "contracts/eip/ERC1271.sol",
        "file": "../../../eip/ERC1271.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68645,
        "sourceUnit": 8657,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 68061,
        "nodeType": "ImportDirective",
        "src": "390:63:313",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/AccountPermissions.sol",
        "file": "../../../extension/upgradeable/AccountPermissions.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68645,
        "sourceUnit": 38900,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 68062,
        "nodeType": "ImportDirective",
        "src": "464:34:313",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/account/utils/BaseAccountFactory.sol",
        "file": "./BaseAccountFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68645,
        "sourceUnit": 69411,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 68064,
        "nodeType": "ImportDirective",
        "src": "499:57:313",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/account/non-upgradeable/Account.sol",
        "file": "../non-upgradeable/Account.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68645,
        "sourceUnit": 67157,
        "symbolAliases": [
          {
            "foreign": {
              "id": 68063,
              "name": "Account",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67156,
              "src": "508:7:313",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Account_$67156_$",
                "typeString": "type(contract Account)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 68065,
        "nodeType": "ImportDirective",
        "src": "557:74:313",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/utils/cryptography/ECDSA.sol",
        "file": "../../../external-deps/openzeppelin/utils/cryptography/ECDSA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68645,
        "sourceUnit": 50382,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 68066,
        "nodeType": "ImportDirective",
        "src": "633:39:313",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/account/interface/IAccountCore.sol",
        "file": "../interface/IAccountCore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68645,
        "sourceUnit": 65721,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 68644,
        "nodeType": "ContractDefinition",
        "src": "1314:8165:313",
        "nodes": [
          {
            "id": 68081,
            "nodeType": "UsingForDirective",
            "src": "1425:24:313",
            "nodes": [],
            "libraryName": {
              "id": 68079,
              "name": "ECDSA",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50381,
              "src": "1431:5:313"
            },
            "typeName": {
              "id": 68080,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1441:7:313",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "id": 68085,
            "nodeType": "UsingForDirective",
            "src": "1454:49:313",
            "nodes": [],
            "libraryName": {
              "id": 68082,
              "name": "EnumerableSet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 51927,
              "src": "1460:13:313"
            },
            "typeName": {
              "id": 68084,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 68083,
                "name": "EnumerableSet.AddressSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 51640,
                "src": "1478:24:313"
              },
              "referencedDeclaration": 51640,
              "src": "1478:24:313",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$51640_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "id": 68088,
            "nodeType": "VariableDeclaration",
            "src": "1739:32:313",
            "nodes": [],
            "baseFunctions": [
              65719
            ],
            "constant": false,
            "documentation": {
              "id": 68086,
              "nodeType": "StructuredDocumentation",
              "src": "1687:47:313",
              "text": "@notice EIP 4337 factory for this contract."
            },
            "functionSelector": "c45a0155",
            "mutability": "immutable",
            "name": "factory",
            "nameLocation": "1764:7:313",
            "scope": 68644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 68087,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1739:7:313",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 68092,
            "nodeType": "VariableDeclaration",
            "src": "1824:48:313",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 68089,
              "nodeType": "StructuredDocumentation",
              "src": "1778:41:313",
              "text": "@notice EIP 4337 Entrypoint contract."
            },
            "mutability": "immutable",
            "name": "entrypointContract",
            "nameLocation": "1854:18:313",
            "scope": 68644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IEntryPoint_$66036",
              "typeString": "contract IEntryPoint"
            },
            "typeName": {
              "id": 68091,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 68090,
                "name": "IEntryPoint",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 66036,
                "src": "1824:11:313"
              },
              "referencedDeclaration": 66036,
              "src": "1824:11:313",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEntryPoint_$66036",
                "typeString": "contract IEntryPoint"
              }
            },
            "visibility": "private"
          },
          {
            "id": 68096,
            "nodeType": "FunctionDefinition",
            "src": "2124:37:313",
            "nodes": [],
            "body": {
              "id": 68095,
              "nodeType": "Block",
              "src": "2159:2:313",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 68093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2131:2:313"
            },
            "returnParameters": {
              "id": 68094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2159:0:313"
            },
            "scope": 68644,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 68120,
            "nodeType": "FunctionDefinition",
            "src": "2167:187:313",
            "nodes": [],
            "body": {
              "id": 68119,
              "nodeType": "Block",
              "src": "2245:109:313",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 68108,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41092,
                      "src": "2255:20:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 68109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2255:22:313",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68110,
                  "nodeType": "ExpressionStatement",
                  "src": "2255:22:313"
                },
                {
                  "expression": {
                    "id": 68113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 68111,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68088,
                      "src": "2287:7:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 68112,
                      "name": "_factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68101,
                      "src": "2297:8:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2287:18:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 68114,
                  "nodeType": "ExpressionStatement",
                  "src": "2287:18:313"
                },
                {
                  "expression": {
                    "id": 68117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 68115,
                      "name": "entrypointContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68092,
                      "src": "2315:18:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEntryPoint_$66036",
                        "typeString": "contract IEntryPoint"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 68116,
                      "name": "_entrypoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68099,
                      "src": "2336:11:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEntryPoint_$66036",
                        "typeString": "contract IEntryPoint"
                      }
                    },
                    "src": "2315:32:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$66036",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "id": 68118,
                  "nodeType": "ExpressionStatement",
                  "src": "2315:32:313"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4163636f756e74",
                    "id": 68104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2229:9:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f0729608244859f656d32ae4cbc6b0367695d68d8e941a28f5e2d33c6d5182dd",
                      "typeString": "literal_string \"Account\""
                    },
                    "value": "Account"
                  },
                  {
                    "hexValue": "31",
                    "id": 68105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2240:3:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                      "typeString": "literal_string \"1\""
                    },
                    "value": "1"
                  }
                ],
                "id": 68106,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 68103,
                  "name": "EIP712",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50535,
                  "src": "2222:6:313"
                },
                "nodeType": "ModifierInvocation",
                "src": "2222:22:313"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 68102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68099,
                  "mutability": "mutable",
                  "name": "_entrypoint",
                  "nameLocation": "2191:11:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68120,
                  "src": "2179:23:313",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$66036",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 68098,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 68097,
                      "name": "IEntryPoint",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66036,
                      "src": "2179:11:313"
                    },
                    "referencedDeclaration": 66036,
                    "src": "2179:11:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$66036",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68101,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "2212:8:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68120,
                  "src": "2204:16:313",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2204:7:313",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2178:43:313"
            },
            "returnParameters": {
              "id": 68107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2245:0:313"
            },
            "scope": 68644,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68136,
            "nodeType": "FunctionDefinition",
            "src": "2415:133:313",
            "nodes": [],
            "body": {
              "id": 68135,
              "nodeType": "Block",
              "src": "2501:47:313",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68131,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68123,
                        "src": "2521:13:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 68132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2536:4:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 68130,
                      "name": "_setAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        68619
                      ],
                      "referencedDeclaration": 68619,
                      "src": "2511:9:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 68133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2511:30:313",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68134,
                  "nodeType": "ExpressionStatement",
                  "src": "2511:30:313"
                }
              ]
            },
            "documentation": {
              "id": 68121,
              "nodeType": "StructuredDocumentation",
              "src": "2360:50:313",
              "text": "@notice Initializes the smart contract wallet."
            },
            "functionSelector": "d1f57894",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 68128,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 68127,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40957,
                  "src": "2489:11:313"
                },
                "nodeType": "ModifierInvocation",
                "src": "2489:11:313"
              }
            ],
            "name": "initialize",
            "nameLocation": "2424:10:313",
            "parameters": {
              "id": 68126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68123,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2443:13:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68136,
                  "src": "2435:21:313",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2435:7:313",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68125,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 68136,
                  "src": "2458:14:313",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 68124,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2458:5:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2434:39:313"
            },
            "returnParameters": {
              "id": 68129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2501:0:313"
            },
            "scope": 68644,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 68147,
            "nodeType": "FunctionDefinition",
            "src": "2795:115:313",
            "nodes": [],
            "body": {
              "id": 68146,
              "nodeType": "Block",
              "src": "2868:42:313",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 68144,
                    "name": "entrypointContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 68092,
                    "src": "2885:18:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$66036",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "functionReturnParameters": 68143,
                  "id": 68145,
                  "nodeType": "Return",
                  "src": "2878:25:313"
                }
              ]
            },
            "baseFunctions": [
              68951
            ],
            "documentation": {
              "id": 68137,
              "nodeType": "StructuredDocumentation",
              "src": "2737:53:313",
              "text": "@notice Returns the EIP 4337 entrypoint contract."
            },
            "functionSelector": "b0d691fe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "entryPoint",
            "nameLocation": "2804:10:313",
            "overrides": {
              "id": 68139,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2837:8:313"
            },
            "parameters": {
              "id": 68138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2814:2:313"
            },
            "returnParameters": {
              "id": 68143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68142,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 68147,
                  "src": "2855:11:313",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$66036",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 68141,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 68140,
                      "name": "IEntryPoint",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66036,
                      "src": "2855:11:313"
                    },
                    "referencedDeclaration": 66036,
                    "src": "2855:11:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$66036",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2854:13:313"
            },
            "scope": 68644,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 68163,
            "nodeType": "FunctionDefinition",
            "src": "2982:113:313",
            "nodes": [],
            "body": {
              "id": 68162,
              "nodeType": "Block",
              "src": "3034:61:313",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68158,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3082:4:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AccountCore_$68644",
                              "typeString": "contract AccountCore"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AccountCore_$68644",
                              "typeString": "contract AccountCore"
                            }
                          ],
                          "id": 68157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3074:7:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 68156,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3074:7:313",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 68159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3074:13:313",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 68153,
                          "name": "entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            68147
                          ],
                          "referencedDeclaration": 68147,
                          "src": "3051:10:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$66036_$",
                            "typeString": "function () view returns (contract IEntryPoint)"
                          }
                        },
                        "id": 68154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3051:12:313",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntryPoint_$66036",
                          "typeString": "contract IEntryPoint"
                        }
                      },
                      "id": 68155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66164,
                      "src": "3051:22:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 68160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3051:37:313",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 68152,
                  "id": 68161,
                  "nodeType": "Return",
                  "src": "3044:44:313"
                }
              ]
            },
            "documentation": {
              "id": 68148,
              "nodeType": "StructuredDocumentation",
              "src": "2916:61:313",
              "text": "@notice Returns the balance of the account in Entrypoint."
            },
            "functionSelector": "c399ec88",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeposit",
            "nameLocation": "2991:10:313",
            "parameters": {
              "id": 68149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3001:2:313"
            },
            "returnParameters": {
              "id": 68152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68151,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 68163,
                  "src": "3025:7:313",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3025:7:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3024:9:313"
            },
            "scope": 68644,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68323,
            "nodeType": "FunctionDefinition",
            "src": "3198:2641:313",
            "nodes": [],
            "body": {
              "id": 68322,
              "nodeType": "Block",
              "src": "3305:2534:313",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    68178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68178,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "3536:4:313",
                      "nodeType": "VariableDeclaration",
                      "scope": 68322,
                      "src": "3497:43:313",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$38129_storage_ptr",
                        "typeString": "struct AccountPermissionsStorage.Data"
                      },
                      "typeName": {
                        "id": 68177,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 68176,
                          "name": "AccountPermissionsStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38129,
                          "src": "3497:30:313"
                        },
                        "referencedDeclaration": 38129,
                        "src": "3497:30:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$38129_storage_ptr",
                          "typeString": "struct AccountPermissionsStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68182,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 68179,
                        "name": "AccountPermissionsStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38142,
                        "src": "3543:25:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AccountPermissionsStorage_$38142_$",
                          "typeString": "type(library AccountPermissionsStorage)"
                        }
                      },
                      "id": 68180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "accountPermissionsStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38141,
                      "src": "3543:51:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$38129_storage_ptr_$",
                        "typeString": "function () pure returns (struct AccountPermissionsStorage.Data storage pointer)"
                      }
                    },
                    "id": 68181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3543:53:313",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$38129_storage_ptr",
                      "typeString": "struct AccountPermissionsStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3497:99:313"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "expression": {
                        "id": 68183,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68178,
                        "src": "3662:4:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$38129_storage_ptr",
                          "typeString": "struct AccountPermissionsStorage.Data storage pointer"
                        }
                      },
                      "id": 68184,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isAdmin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38111,
                      "src": "3662:12:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 68186,
                    "indexExpression": {
                      "id": 68185,
                      "name": "_signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68166,
                      "src": "3675:7:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3662:21:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68190,
                  "nodeType": "IfStatement",
                  "src": "3658:63:313",
                  "trueBody": {
                    "id": 68189,
                    "nodeType": "Block",
                    "src": "3685:36:313",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 68187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3706:4:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 68173,
                        "id": 68188,
                        "nodeType": "Return",
                        "src": "3699:11:313"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    68193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68193,
                      "mutability": "mutable",
                      "name": "permissions",
                      "nameLocation": "3762:11:313",
                      "nodeType": "VariableDeclaration",
                      "scope": 68322,
                      "src": "3731:42:313",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SignerPermissionsStatic_$32838_memory_ptr",
                        "typeString": "struct IAccountPermissions.SignerPermissionsStatic"
                      },
                      "typeName": {
                        "id": 68192,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 68191,
                          "name": "SignerPermissionsStatic",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32838,
                          "src": "3731:23:313"
                        },
                        "referencedDeclaration": 32838,
                        "src": "3731:23:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignerPermissionsStatic_$32838_storage_ptr",
                          "typeString": "struct IAccountPermissions.SignerPermissionsStatic"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68198,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "id": 68194,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68178,
                        "src": "3776:4:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$38129_storage_ptr",
                          "typeString": "struct AccountPermissionsStorage.Data storage pointer"
                        }
                      },
                      "id": 68195,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "signerPermissions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38117,
                      "src": "3776:22:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SignerPermissionsStatic_$32838_storage_$",
                        "typeString": "mapping(address => struct IAccountPermissions.SignerPermissionsStatic storage ref)"
                      }
                    },
                    "id": 68197,
                    "indexExpression": {
                      "id": 68196,
                      "name": "_signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68166,
                      "src": "3799:7:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3776:31:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignerPermissionsStatic_$32838_storage",
                      "typeString": "struct IAccountPermissions.SignerPermissionsStatic storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3731:76:313"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 68218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 68209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 68203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 68199,
                            "name": "permissions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68193,
                            "src": "3894:11:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SignerPermissionsStatic_$32838_memory_ptr",
                              "typeString": "struct IAccountPermissions.SignerPermissionsStatic memory"
                            }
                          },
                          "id": 68200,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32835,
                          "src": "3894:26:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 68201,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3923:5:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 68202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3923:15:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3894:44:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 68208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 68204,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3954:5:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 68205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3954:15:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 68206,
                            "name": "permissions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68193,
                            "src": "3973:11:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SignerPermissionsStatic_$32838_memory_ptr",
                              "typeString": "struct IAccountPermissions.SignerPermissionsStatic memory"
                            }
                          },
                          "id": 68207,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32837,
                          "src": "3973:24:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "3954:43:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "3894:103:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 68217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "id": 68210,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68178,
                                "src": "4013:4:313",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Data_$38129_storage_ptr",
                                  "typeString": "struct AccountPermissionsStorage.Data storage pointer"
                                }
                              },
                              "id": 68211,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approvedTargets",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 38123,
                              "src": "4013:20:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$51640_storage_$",
                                "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                              }
                            },
                            "id": 68213,
                            "indexExpression": {
                              "id": 68212,
                              "name": "_signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68166,
                              "src": "4034:7:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4013:29:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$51640_storage",
                              "typeString": "struct EnumerableSet.AddressSet storage ref"
                            }
                          },
                          "id": 68214,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51736,
                          "src": "4013:36:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$51640_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$51640_storage_ptr_$",
                            "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 68215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4013:38:313",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 68216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4055:1:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4013:43:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3894:162:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68222,
                  "nodeType": "IfStatement",
                  "src": "3877:274:313",
                  "trueBody": {
                    "id": 68221,
                    "nodeType": "Block",
                    "src": "4067:84:313",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 68219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4135:5:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 68173,
                        "id": 68220,
                        "nodeType": "Return",
                        "src": "4128:12:313"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    68224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68224,
                      "mutability": "mutable",
                      "name": "sig",
                      "nameLocation": "4315:3:313",
                      "nodeType": "VariableDeclaration",
                      "scope": 68322,
                      "src": "4308:10:313",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 68223,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "4308:6:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68229,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 68226,
                          "name": "_userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68169,
                          "src": "4342:7:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$72684_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 68227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "callData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72669,
                        "src": "4342:16:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 68225,
                      "name": "getFunctionSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68441,
                      "src": "4321:20:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (bytes calldata) pure returns (bytes4)"
                      }
                    },
                    "id": 68228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4321:38:313",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4308:51:313"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 68234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 68230,
                      "name": "sig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68224,
                      "src": "4374:3:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 68231,
                          "name": "Account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67156,
                          "src": "4381:7:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Account_$67156_$",
                            "typeString": "type(contract Account)"
                          }
                        },
                        "id": 68232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "execute",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66764,
                        "src": "4381:15:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                          "typeString": "function Account.execute(address,uint256,bytes calldata)"
                        }
                      },
                      "id": 68233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "4381:24:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "4374:31:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 68266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 68262,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68224,
                        "src": "4941:3:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "expression": {
                            "id": 68263,
                            "name": "Account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67156,
                            "src": "4948:7:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Account_$67156_$",
                              "typeString": "type(contract Account)"
                            }
                          },
                          "id": 68264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "executeBatch",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66823,
                          "src": "4948:20:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_address_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                            "typeString": "function Account.executeBatch(address[] calldata,uint256[] calldata,bytes calldata[] calldata)"
                          }
                        },
                        "id": 68265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "4948:29:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4941:36:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 68317,
                      "nodeType": "Block",
                      "src": "5730:81:313",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "66616c7365",
                            "id": 68315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5795:5:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "functionReturnParameters": 68173,
                          "id": 68316,
                          "nodeType": "Return",
                          "src": "5788:12:313"
                        }
                      ]
                    },
                    "id": 68318,
                    "nodeType": "IfStatement",
                    "src": "4937:874:313",
                    "trueBody": {
                      "id": 68314,
                      "nodeType": "Block",
                      "src": "4979:745:313",
                      "statements": [
                        {
                          "assignments": [
                            68271,
                            68274,
                            null
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 68271,
                              "mutability": "mutable",
                              "name": "targets",
                              "nameLocation": "5113:7:313",
                              "nodeType": "VariableDeclaration",
                              "scope": 68314,
                              "src": "5096:24:313",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[]"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 68269,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5096:7:313",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 68270,
                                "nodeType": "ArrayTypeName",
                                "src": "5096:9:313",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                  "typeString": "address[]"
                                }
                              },
                              "visibility": "internal"
                            },
                            {
                              "constant": false,
                              "id": 68274,
                              "mutability": "mutable",
                              "name": "values",
                              "nameLocation": "5139:6:313",
                              "nodeType": "VariableDeclaration",
                              "scope": 68314,
                              "src": "5122:23:313",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[]"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 68272,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5122:7:313",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 68273,
                                "nodeType": "ArrayTypeName",
                                "src": "5122:9:313",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                  "typeString": "uint256[]"
                                }
                              },
                              "visibility": "internal"
                            },
                            null
                          ],
                          "id": 68279,
                          "initialValue": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 68276,
                                  "name": "_userOp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68169,
                                  "src": "5178:7:313",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserOperation_$72684_calldata_ptr",
                                    "typeString": "struct UserOperation calldata"
                                  }
                                },
                                "id": 68277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "callData",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 72669,
                                "src": "5178:16:313",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "id": 68275,
                              "name": "decodeExecuteBatchCalldata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68540,
                              "src": "5151:26:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (bytes calldata) pure returns (address[] memory,uint256[] memory,bytes memory[] memory)"
                              }
                            },
                            "id": 68278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5151:44:313",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "tuple(address[] memory,uint256[] memory,bytes memory[] memory)"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5095:100:313"
                        },
                        {
                          "body": {
                            "id": 68312,
                            "nodeType": "Block",
                            "src": "5376:338:313",
                            "statements": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 68307,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 68296,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 68291,
                                        "name": "permissions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 68193,
                                        "src": "5419:11:313",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_SignerPermissionsStatic_$32838_memory_ptr",
                                          "typeString": "struct IAccountPermissions.SignerPermissionsStatic memory"
                                        }
                                      },
                                      "id": 68292,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "nativeTokenLimitPerTransaction",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 32833,
                                      "src": "5419:42:313",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "id": 68293,
                                        "name": "values",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 68274,
                                        "src": "5464:6:313",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 68295,
                                      "indexExpression": {
                                        "id": 68294,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 68281,
                                        "src": "5471:1:313",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5464:9:313",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5419:54:313",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "id": 68306,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "!",
                                    "prefix": true,
                                    "src": "5497:51:313",
                                    "subExpression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 68302,
                                            "name": "targets",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 68271,
                                            "src": "5537:7:313",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 68304,
                                          "indexExpression": {
                                            "id": 68303,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 68281,
                                            "src": "5545:1:313",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5537:10:313",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 68297,
                                              "name": "data",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 68178,
                                              "src": "5498:4:313",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Data_$38129_storage_ptr",
                                                "typeString": "struct AccountPermissionsStorage.Data storage pointer"
                                              }
                                            },
                                            "id": 68298,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "approvedTargets",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 38123,
                                            "src": "5498:20:313",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$51640_storage_$",
                                              "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                                            }
                                          },
                                          "id": 68300,
                                          "indexExpression": {
                                            "id": 68299,
                                            "name": "_signer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 68166,
                                            "src": "5519:7:313",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5498:29:313",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_AddressSet_$51640_storage",
                                            "typeString": "struct EnumerableSet.AddressSet storage ref"
                                          }
                                        },
                                        "id": 68301,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "contains",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 51721,
                                        "src": "5498:38:313",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$51640_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$51640_storage_ptr_$",
                                          "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                                        }
                                      },
                                      "id": 68305,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5498:50:313",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "5419:129:313",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 68311,
                                "nodeType": "IfStatement",
                                "src": "5394:306:313",
                                "trueBody": {
                                  "id": 68310,
                                  "nodeType": "Block",
                                  "src": "5567:133:313",
                                  "statements": [
                                    {
                                      "expression": {
                                        "hexValue": "66616c7365",
                                        "id": 68308,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5676:5:313",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      },
                                      "functionReturnParameters": 68173,
                                      "id": 68309,
                                      "nodeType": "Return",
                                      "src": "5669:12:313"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 68287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 68284,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68281,
                              "src": "5351:1:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "expression": {
                                "id": 68285,
                                "name": "targets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68271,
                                "src": "5355:7:313",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 68286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "5355:14:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5351:18:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 68313,
                          "initializationExpression": {
                            "assignments": [
                              68281
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 68281,
                                "mutability": "mutable",
                                "name": "i",
                                "nameLocation": "5344:1:313",
                                "nodeType": "VariableDeclaration",
                                "scope": 68313,
                                "src": "5336:9:313",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 68280,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5336:7:313",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 68283,
                            "initialValue": {
                              "hexValue": "30",
                              "id": 68282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5348:1:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "5336:13:313"
                          },
                          "loopExpression": {
                            "expression": {
                              "id": 68289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "5371:3:313",
                              "subExpression": {
                                "id": 68288,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68281,
                                "src": "5371:1:313",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 68290,
                            "nodeType": "ExpressionStatement",
                            "src": "5371:3:313"
                          },
                          "nodeType": "ForStatement",
                          "src": "5331:383:313"
                        }
                      ]
                    }
                  },
                  "id": 68319,
                  "nodeType": "IfStatement",
                  "src": "4370:1441:313",
                  "trueBody": {
                    "id": 68261,
                    "nodeType": "Block",
                    "src": "4407:524:313",
                    "statements": [
                      {
                        "assignments": [
                          68236,
                          68238
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 68236,
                            "mutability": "mutable",
                            "name": "target",
                            "nameLocation": "4521:6:313",
                            "nodeType": "VariableDeclaration",
                            "scope": 68261,
                            "src": "4513:14:313",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 68235,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4513:7:313",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 68238,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "4537:5:313",
                            "nodeType": "VariableDeclaration",
                            "scope": 68261,
                            "src": "4529:13:313",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 68237,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4529:7:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 68243,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 68240,
                                "name": "_userOp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68169,
                                "src": "4568:7:313",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserOperation_$72684_calldata_ptr",
                                  "typeString": "struct UserOperation calldata"
                                }
                              },
                              "id": 68241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "callData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 72669,
                              "src": "4568:16:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 68239,
                            "name": "decodeExecuteCalldata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68489,
                            "src": "4546:21:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_address_$_t_uint256_$",
                              "typeString": "function (bytes calldata) pure returns (address,uint256)"
                            }
                          },
                          "id": 68242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4546:39:313",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                            "typeString": "tuple(address,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4512:73:313"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 68256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 68247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 68244,
                                "name": "permissions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68193,
                                "src": "4697:11:313",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SignerPermissionsStatic_$32838_memory_ptr",
                                  "typeString": "struct IAccountPermissions.SignerPermissionsStatic memory"
                                }
                              },
                              "id": 68245,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nativeTokenLimitPerTransaction",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32833,
                              "src": "4697:42:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 68246,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68238,
                              "src": "4742:5:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4697:50:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "id": 68255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4751:47:313",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 68253,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68236,
                                  "src": "4791:6:313",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 68248,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68178,
                                      "src": "4752:4:313",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Data_$38129_storage_ptr",
                                        "typeString": "struct AccountPermissionsStorage.Data storage pointer"
                                      }
                                    },
                                    "id": 68249,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "approvedTargets",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38123,
                                    "src": "4752:20:313",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$51640_storage_$",
                                      "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                                    }
                                  },
                                  "id": 68251,
                                  "indexExpression": {
                                    "id": 68250,
                                    "name": "_signer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68166,
                                    "src": "4773:7:313",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4752:29:313",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AddressSet_$51640_storage",
                                    "typeString": "struct EnumerableSet.AddressSet storage ref"
                                  }
                                },
                                "id": 68252,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "contains",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 51721,
                                "src": "4752:38:313",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$51640_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$51640_storage_ptr_$",
                                  "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                                }
                              },
                              "id": 68254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4752:46:313",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4697:101:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 68260,
                        "nodeType": "IfStatement",
                        "src": "4693:228:313",
                        "trueBody": {
                          "id": 68259,
                          "nodeType": "Block",
                          "src": "4800:121:313",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 68257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4901:5:313",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 68173,
                              "id": 68258,
                              "nodeType": "Return",
                              "src": "4894:12:313"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 68320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5828:4:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 68173,
                  "id": 68321,
                  "nodeType": "Return",
                  "src": "5821:11:313"
                }
              ]
            },
            "documentation": {
              "id": 68164,
              "nodeType": "StructuredDocumentation",
              "src": "3101:92:313",
              "text": "@notice Returns whether a signer is authorized to perform transactions using the wallet."
            },
            "functionSelector": "1dd756c5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSigner",
            "nameLocation": "3207:13:313",
            "parameters": {
              "id": 68170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68166,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "3229:7:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68323,
                  "src": "3221:15:313",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68165,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3221:7:313",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68169,
                  "mutability": "mutable",
                  "name": "_userOp",
                  "nameLocation": "3261:7:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68323,
                  "src": "3238:30:313",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$72684_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 68168,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 68167,
                      "name": "UserOperation",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 72684,
                      "src": "3238:13:313"
                    },
                    "referencedDeclaration": 72684,
                    "src": "3238:13:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$72684_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3220:49:313"
            },
            "returnParameters": {
              "id": 68173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68172,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 68323,
                  "src": "3299:4:313",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 68171,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3299:4:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3298:6:313"
            },
            "scope": 68644,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 68383,
            "nodeType": "FunctionDefinition",
            "src": "5874:636:313",
            "nodes": [],
            "body": {
              "id": 68382,
              "nodeType": "Block",
              "src": "6041:469:313",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    68335
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68335,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "6059:6:313",
                      "nodeType": "VariableDeclaration",
                      "scope": 68382,
                      "src": "6051:14:313",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 68334,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6051:7:313",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68340,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 68338,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68328,
                        "src": "6082:10:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 68336,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68326,
                        "src": "6068:5:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 68337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50142,
                      "src": "6068:13:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 68339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6068:25:313",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6051:42:313"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 68342,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68335,
                        "src": "6116:6:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 68341,
                      "name": "isAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38384,
                      "src": "6108:7:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 68343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6108:15:313",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68347,
                  "nodeType": "IfStatement",
                  "src": "6104:63:313",
                  "trueBody": {
                    "id": 68346,
                    "nodeType": "Block",
                    "src": "6125:42:313",
                    "statements": [
                      {
                        "expression": {
                          "id": 68344,
                          "name": "MAGICVALUE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8645,
                          "src": "6146:10:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "functionReturnParameters": 68333,
                        "id": 68345,
                        "nodeType": "Return",
                        "src": "6139:17:313"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    68352
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68352,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "6216:4:313",
                      "nodeType": "VariableDeclaration",
                      "scope": 68382,
                      "src": "6177:43:313",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$38129_storage_ptr",
                        "typeString": "struct AccountPermissionsStorage.Data"
                      },
                      "typeName": {
                        "id": 68351,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 68350,
                          "name": "AccountPermissionsStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38129,
                          "src": "6177:30:313"
                        },
                        "referencedDeclaration": 38129,
                        "src": "6177:30:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$38129_storage_ptr",
                          "typeString": "struct AccountPermissionsStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68356,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 68353,
                        "name": "AccountPermissionsStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38142,
                        "src": "6223:25:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AccountPermissionsStorage_$38142_$",
                          "typeString": "type(library AccountPermissionsStorage)"
                        }
                      },
                      "id": 68354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "accountPermissionsStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38141,
                      "src": "6223:51:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$38129_storage_ptr_$",
                        "typeString": "function () pure returns (struct AccountPermissionsStorage.Data storage pointer)"
                      }
                    },
                    "id": 68355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6223:53:313",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$38129_storage_ptr",
                      "typeString": "struct AccountPermissionsStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6177:99:313"
                },
                {
                  "assignments": [
                    68358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68358,
                      "mutability": "mutable",
                      "name": "caller",
                      "nameLocation": "6294:6:313",
                      "nodeType": "VariableDeclaration",
                      "scope": 68382,
                      "src": "6286:14:313",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 68357,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6286:7:313",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68361,
                  "initialValue": {
                    "expression": {
                      "id": 68359,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "6303:3:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 68360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "6303:10:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6286:27:313"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68368,
                            "name": "caller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68358,
                            "src": "6369:6:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "id": 68363,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68352,
                                "src": "6331:4:313",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Data_$38129_storage_ptr",
                                  "typeString": "struct AccountPermissionsStorage.Data storage pointer"
                                }
                              },
                              "id": 68364,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approvedTargets",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 38123,
                              "src": "6331:20:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$51640_storage_$",
                                "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                              }
                            },
                            "id": 68366,
                            "indexExpression": {
                              "id": 68365,
                              "name": "signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68335,
                              "src": "6352:6:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6331:28:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$51640_storage",
                              "typeString": "struct EnumerableSet.AddressSet storage ref"
                            }
                          },
                          "id": 68367,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "contains",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51721,
                          "src": "6331:37:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$51640_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$51640_storage_ptr_$",
                            "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                          }
                        },
                        "id": 68369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6331:45:313",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e743a2063616c6c6572206e6f7420617070726f766564207461726765742e",
                        "id": 68370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6378:38:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df95de02fe768cfc461af2b115e5107aca0a0e36835e7a43fb57ea398d7095c3",
                          "typeString": "literal_string \"Account: caller not approved target.\""
                        },
                        "value": "Account: caller not approved target."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df95de02fe768cfc461af2b115e5107aca0a0e36835e7a43fb57ea398d7095c3",
                          "typeString": "literal_string \"Account: caller not approved target.\""
                        }
                      ],
                      "id": 68362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6323:7:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 68371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6323:94:313",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68372,
                  "nodeType": "ExpressionStatement",
                  "src": "6323:94:313"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 68374,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68335,
                        "src": "6447:6:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 68373,
                      "name": "isActiveSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38431,
                      "src": "6432:14:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 68375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6432:22:313",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68381,
                  "nodeType": "IfStatement",
                  "src": "6428:76:313",
                  "trueBody": {
                    "id": 68380,
                    "nodeType": "Block",
                    "src": "6456:48:313",
                    "statements": [
                      {
                        "expression": {
                          "id": 68378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 68376,
                            "name": "magicValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68332,
                            "src": "6470:10:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 68377,
                            "name": "MAGICVALUE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8645,
                            "src": "6483:10:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "6470:23:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 68379,
                        "nodeType": "ExpressionStatement",
                        "src": "6470:23:313"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              8655
            ],
            "documentation": {
              "id": 68324,
              "nodeType": "StructuredDocumentation",
              "src": "5845:24:313",
              "text": "@notice See EIP-1271"
            },
            "functionSelector": "1626ba7e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nameLocation": "5883:16:313",
            "overrides": {
              "id": 68330,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5992:8:313"
            },
            "parameters": {
              "id": 68329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68326,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "5908:5:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68383,
                  "src": "5900:13:313",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 68325,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5900:7:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68328,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5928:10:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68383,
                  "src": "5915:23:313",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 68327,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5915:5:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5899:40:313"
            },
            "returnParameters": {
              "id": 68333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68332,
                  "mutability": "mutable",
                  "name": "magicValue",
                  "nameLocation": "6025:10:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68383,
                  "src": "6018:17:313",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 68331,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6018:6:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6017:19:313"
            },
            "scope": 68644,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 68400,
            "nodeType": "FunctionDefinition",
            "src": "6765:111:313",
            "nodes": [],
            "body": {
              "id": 68399,
              "nodeType": "Block",
              "src": "6802:74:313",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68395,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6863:4:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AccountCore_$68644",
                              "typeString": "contract AccountCore"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AccountCore_$68644",
                              "typeString": "contract AccountCore"
                            }
                          ],
                          "id": 68394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6855:7:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 68393,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6855:7:313",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 68396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6855:13:313",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 68387,
                            "name": "entryPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              68147
                            ],
                            "referencedDeclaration": 68147,
                            "src": "6812:10:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$66036_$",
                              "typeString": "function () view returns (contract IEntryPoint)"
                            }
                          },
                          "id": 68388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6812:12:313",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEntryPoint_$66036",
                            "typeString": "contract IEntryPoint"
                          }
                        },
                        "id": 68389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "depositTo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66170,
                        "src": "6812:22:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 68392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 68390,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6843:3:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 68391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "6843:9:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "6812:42:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 68397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6812:57:313",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68398,
                  "nodeType": "ExpressionStatement",
                  "src": "6812:57:313"
                }
              ]
            },
            "documentation": {
              "id": 68384,
              "nodeType": "StructuredDocumentation",
              "src": "6703:57:313",
              "text": "@notice Deposit funds for this account in Entrypoint."
            },
            "functionSelector": "4a58db19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addDeposit",
            "nameLocation": "6774:10:313",
            "parameters": {
              "id": 68385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6784:2:313"
            },
            "returnParameters": {
              "id": 68386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6802:0:313"
            },
            "scope": 68644,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68418,
            "nodeType": "FunctionDefinition",
            "src": "6947:158:313",
            "nodes": [],
            "body": {
              "id": 68417,
              "nodeType": "Block",
              "src": "7040:65:313",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68413,
                        "name": "withdrawAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68403,
                        "src": "7074:15:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 68414,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68405,
                        "src": "7091:6:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 68410,
                          "name": "entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            68147
                          ],
                          "referencedDeclaration": 68147,
                          "src": "7050:10:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$66036_$",
                            "typeString": "function () view returns (contract IEntryPoint)"
                          }
                        },
                        "id": 68411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7050:12:313",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntryPoint_$66036",
                          "typeString": "contract IEntryPoint"
                        }
                      },
                      "id": 68412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66194,
                      "src": "7050:23:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256) external"
                      }
                    },
                    "id": 68415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7050:48:313",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68416,
                  "nodeType": "ExpressionStatement",
                  "src": "7050:48:313"
                }
              ]
            },
            "documentation": {
              "id": 68401,
              "nodeType": "StructuredDocumentation",
              "src": "6882:60:313",
              "text": "@notice Withdraw funds for this account from Entrypoint."
            },
            "functionSelector": "4d44560d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 68408,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 68407,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38170,
                  "src": "7030:9:313"
                },
                "nodeType": "ModifierInvocation",
                "src": "7030:9:313"
              }
            ],
            "name": "withdrawDepositTo",
            "nameLocation": "6956:17:313",
            "parameters": {
              "id": 68406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68403,
                  "mutability": "mutable",
                  "name": "withdrawAddress",
                  "nameLocation": "6990:15:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68418,
                  "src": "6974:31:313",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 68402,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6974:15:313",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68405,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7015:6:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68418,
                  "src": "7007:14:313",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7007:7:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6973:49:313"
            },
            "returnParameters": {
              "id": 68409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7040:0:313"
            },
            "scope": 68644,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68441,
            "nodeType": "FunctionDefinition",
            "src": "7294:192:313",
            "nodes": [],
            "body": {
              "id": 68440,
              "nodeType": "Block",
              "src": "7393:93:313",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 68429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 68426,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68420,
                            "src": "7411:4:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 68427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7411:11:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 68428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7426:1:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "7411:16:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4461746120746f6f2073686f7274",
                        "id": 68430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7429:16:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94",
                          "typeString": "literal_string \"Data too short\""
                        },
                        "value": "Data too short"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94",
                          "typeString": "literal_string \"Data too short\""
                        }
                      ],
                      "id": 68425,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7403:7:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 68431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7403:43:313",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68432,
                  "nodeType": "ExpressionStatement",
                  "src": "7403:43:313"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 68435,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68420,
                          "src": "7470:4:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "endExpression": {
                          "hexValue": "34",
                          "id": 68436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7476:1:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "id": 68437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexRangeAccess",
                        "src": "7470:8:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        }
                      ],
                      "id": 68434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7463:6:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes4_$",
                        "typeString": "type(bytes4)"
                      },
                      "typeName": {
                        "id": 68433,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "7463:6:313",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 68438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7463:16:313",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 68424,
                  "id": 68439,
                  "nodeType": "Return",
                  "src": "7456:23:313"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFunctionSignature",
            "nameLocation": "7303:20:313",
            "parameters": {
              "id": 68421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68420,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7339:4:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68441,
                  "src": "7324:19:313",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 68419,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7324:5:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7323:21:313"
            },
            "returnParameters": {
              "id": 68424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68423,
                  "mutability": "mutable",
                  "name": "functionSelector",
                  "nameLocation": "7375:16:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68441,
                  "src": "7368:23:313",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 68422,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "7368:6:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7367:25:313"
            },
            "scope": 68644,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 68489,
            "nodeType": "FunctionDefinition",
            "src": "7492:393:313",
            "nodes": [],
            "body": {
              "id": 68488,
              "nodeType": "Block",
              "src": "7600:285:313",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 68458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 68451,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68443,
                            "src": "7618:4:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 68452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7618:11:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_68_by_1",
                            "typeString": "int_const 68"
                          },
                          "id": 68457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_36_by_1",
                              "typeString": "int_const 36"
                            },
                            "id": 68455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "34",
                              "id": 68453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7633:1:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "3332",
                              "id": 68454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7637:2:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              },
                              "value": "32"
                            },
                            "src": "7633:6:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_36_by_1",
                              "typeString": "int_const 36"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3332",
                            "id": 68456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7642:2:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "7633:11:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_68_by_1",
                            "typeString": "int_const 68"
                          }
                        },
                        "src": "7618:26:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4461746120746f6f2073686f7274",
                        "id": 68459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7646:16:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94",
                          "typeString": "literal_string \"Data too short\""
                        },
                        "value": "Data too short"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94",
                          "typeString": "literal_string \"Data too short\""
                        }
                      ],
                      "id": 68450,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7610:7:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 68460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7610:53:313",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68461,
                  "nodeType": "ExpressionStatement",
                  "src": "7610:53:313"
                },
                {
                  "expression": {
                    "id": 68473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 68462,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68446,
                      "src": "7728:7:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 68465,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68443,
                            "src": "7749:4:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "endExpression": {
                            "hexValue": "3336",
                            "id": 68467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7756:2:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_36_by_1",
                              "typeString": "int_const 36"
                            },
                            "value": "36"
                          },
                          "id": 68468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexRangeAccess",
                          "src": "7749:10:313",
                          "startExpression": {
                            "hexValue": "34",
                            "id": 68466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7754:1:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 68470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7762:7:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 68469,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7762:7:313",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 68471,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7761:9:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          },
                          {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          }
                        ],
                        "expression": {
                          "id": 68463,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "7738:3:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 68464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "7738:10:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 68472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7738:33:313",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "7728:43:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 68474,
                  "nodeType": "ExpressionStatement",
                  "src": "7728:43:313"
                },
                {
                  "expression": {
                    "id": 68486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 68475,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68448,
                      "src": "7835:6:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 68478,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68443,
                            "src": "7855:4:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "endExpression": {
                            "hexValue": "3638",
                            "id": 68480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7863:2:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_68_by_1",
                              "typeString": "int_const 68"
                            },
                            "value": "68"
                          },
                          "id": 68481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexRangeAccess",
                          "src": "7855:11:313",
                          "startExpression": {
                            "hexValue": "3336",
                            "id": 68479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7860:2:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_36_by_1",
                              "typeString": "int_const 36"
                            },
                            "value": "36"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 68483,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7869:7:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 68482,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7869:7:313",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 68484,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7868:9:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          },
                          {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          }
                        ],
                        "expression": {
                          "id": 68476,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "7844:3:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 68477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "7844:10:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 68485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7844:34:313",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7835:43:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 68487,
                  "nodeType": "ExpressionStatement",
                  "src": "7835:43:313"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decodeExecuteCalldata",
            "nameLocation": "7501:21:313",
            "parameters": {
              "id": 68444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68443,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7538:4:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68489,
                  "src": "7523:19:313",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 68442,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7523:5:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7522:21:313"
            },
            "returnParameters": {
              "id": 68449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68446,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "7575:7:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68489,
                  "src": "7567:15:313",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7567:7:313",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68448,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "7592:6:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68489,
                  "src": "7584:14:313",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7584:7:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7566:33:313"
            },
            "scope": 68644,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 68540,
            "nodeType": "FunctionDefinition",
            "src": "7891:405:313",
            "nodes": [],
            "body": {
              "id": 68539,
              "nodeType": "Block",
              "src": "8124:172:313",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 68513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 68504,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68491,
                            "src": "8142:4:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 68505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8142:11:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "id": 68512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_68_by_1",
                              "typeString": "int_const 68"
                            },
                            "id": 68510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              },
                              "id": 68508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "34",
                                "id": 68506,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8157:1:313",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "3332",
                                "id": 68507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8161:2:313",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "8157:6:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "3332",
                              "id": 68509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8166:2:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              },
                              "value": "32"
                            },
                            "src": "8157:11:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_68_by_1",
                              "typeString": "int_const 68"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3332",
                            "id": 68511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8171:2:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "8157:16:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        },
                        "src": "8142:31:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4461746120746f6f2073686f7274",
                        "id": 68514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8175:16:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94",
                          "typeString": "literal_string \"Data too short\""
                        },
                        "value": "Data too short"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94",
                          "typeString": "literal_string \"Data too short\""
                        }
                      ],
                      "id": 68503,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8134:7:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 68515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8134:58:313",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68516,
                  "nodeType": "ExpressionStatement",
                  "src": "8134:58:313"
                },
                {
                  "expression": {
                    "id": 68537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 68517,
                          "name": "_targets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68495,
                          "src": "8204:8:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 68518,
                          "name": "_values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68498,
                          "src": "8214:7:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 68519,
                          "name": "_callData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68501,
                          "src": "8223:9:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          }
                        }
                      ],
                      "id": 68520,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "8203:30:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(address[] memory,uint256[] memory,bytes memory[] memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 68523,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68491,
                            "src": "8247:4:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 68525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexRangeAccess",
                          "src": "8247:8:313",
                          "startExpression": {
                            "hexValue": "34",
                            "id": 68524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8252:1:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          }
                        },
                        {
                          "components": [
                            {
                              "baseExpression": {
                                "id": 68527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8258:7:313",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 68526,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8258:7:313",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 68528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8258:9:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                                "typeString": "type(address[] memory)"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 68530,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8269:7:313",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 68529,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8269:7:313",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 68531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8269:9:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "type(uint256[] memory)"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 68533,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8280:5:313",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 68532,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8280:5:313",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 68534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8280:7:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "type(bytes memory[] memory)"
                              }
                            }
                          ],
                          "id": 68535,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8257:31:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_$",
                            "typeString": "tuple(type(address[] memory),type(uint256[] memory),type(bytes memory[] memory))"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_$",
                            "typeString": "tuple(type(address[] memory),type(uint256[] memory),type(bytes memory[] memory))"
                          }
                        ],
                        "expression": {
                          "id": 68521,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "8236:3:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 68522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "8236:10:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 68536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8236:53:313",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(address[] memory,uint256[] memory,bytes memory[] memory)"
                      }
                    },
                    "src": "8203:86:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68538,
                  "nodeType": "ExpressionStatement",
                  "src": "8203:86:313"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decodeExecuteBatchCalldata",
            "nameLocation": "7900:26:313",
            "parameters": {
              "id": 68492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68491,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7942:4:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68540,
                  "src": "7927:19:313",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 68490,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7927:5:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7926:21:313"
            },
            "returnParameters": {
              "id": 68502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68495,
                  "mutability": "mutable",
                  "name": "_targets",
                  "nameLocation": "8025:8:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68540,
                  "src": "8008:25:313",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 68493,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8008:7:313",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 68494,
                    "nodeType": "ArrayTypeName",
                    "src": "8008:9:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68498,
                  "mutability": "mutable",
                  "name": "_values",
                  "nameLocation": "8064:7:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68540,
                  "src": "8047:24:313",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 68496,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8047:7:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 68497,
                    "nodeType": "ArrayTypeName",
                    "src": "8047:9:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68501,
                  "mutability": "mutable",
                  "name": "_callData",
                  "nameLocation": "8100:9:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68540,
                  "src": "8085:24:313",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 68499,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "8085:5:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 68500,
                    "nodeType": "ArrayTypeName",
                    "src": "8085:7:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7994:125:313"
            },
            "scope": 68644,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 68577,
            "nodeType": "FunctionDefinition",
            "src": "8363:391:313",
            "nodes": [],
            "body": {
              "id": 68576,
              "nodeType": "Block",
              "src": "8537:217:313",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    68553
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68553,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "8555:4:313",
                      "nodeType": "VariableDeclaration",
                      "scope": 68576,
                      "src": "8547:12:313",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 68552,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8547:7:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68557,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 68554,
                        "name": "userOpHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68546,
                        "src": "8562:10:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 68555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toEthSignedMessageHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50326,
                      "src": "8562:33:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 68556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8562:35:313",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8547:50:313"
                },
                {
                  "assignments": [
                    68559
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68559,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "8615:6:313",
                      "nodeType": "VariableDeclaration",
                      "scope": 68576,
                      "src": "8607:14:313",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 68558,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8607:7:313",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68565,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 68562,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68544,
                          "src": "8637:6:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$72684_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 68563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "signature",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72683,
                        "src": "8637:16:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 68560,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68553,
                        "src": "8624:4:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 68561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50142,
                      "src": "8624:12:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 68564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8624:30:313",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8607:47:313"
                },
                {
                  "condition": {
                    "id": 68570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "8669:30:313",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 68567,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68559,
                          "src": "8684:6:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 68568,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68544,
                          "src": "8692:6:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$72684_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_struct$_UserOperation_$72684_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        ],
                        "id": 68566,
                        "name": "isValidSigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68323,
                        "src": "8670:13:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_UserOperation_$72684_calldata_ptr_$returns$_t_bool_$",
                          "typeString": "function (address,struct UserOperation calldata) view returns (bool)"
                        }
                      },
                      "id": 68569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8670:29:313",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68573,
                  "nodeType": "IfStatement",
                  "src": "8665:64:313",
                  "trueBody": {
                    "expression": {
                      "id": 68571,
                      "name": "SIG_VALIDATION_FAILED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68927,
                      "src": "8708:21:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 68551,
                    "id": 68572,
                    "nodeType": "Return",
                    "src": "8701:28:313"
                  }
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 68574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8746:1:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 68551,
                  "id": 68575,
                  "nodeType": "Return",
                  "src": "8739:8:313"
                }
              ]
            },
            "baseFunctions": [
              69013
            ],
            "documentation": {
              "id": 68541,
              "nodeType": "StructuredDocumentation",
              "src": "8302:56:313",
              "text": "@notice Validates the signature of a user operation."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateSignature",
            "nameLocation": "8372:18:313",
            "overrides": {
              "id": 68548,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8483:8:313"
            },
            "parameters": {
              "id": 68547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68544,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "8414:6:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68577,
                  "src": "8391:29:313",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$72684_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 68543,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 68542,
                      "name": "UserOperation",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 72684,
                      "src": "8391:13:313"
                    },
                    "referencedDeclaration": 72684,
                    "src": "8391:13:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$72684_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68546,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "8430:10:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68577,
                  "src": "8422:18:313",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 68545,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8422:7:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8390:51:313"
            },
            "returnParameters": {
              "id": 68551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68550,
                  "mutability": "mutable",
                  "name": "validationData",
                  "nameLocation": "8517:14:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68577,
                  "src": "8509:22:313",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8509:7:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8508:24:313"
            },
            "scope": 68644,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 68619,
            "nodeType": "FunctionDefinition",
            "src": "8810:382:313",
            "nodes": [],
            "body": {
              "id": 68618,
              "nodeType": "Block",
              "src": "8888:304:313",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68589,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68580,
                        "src": "8914:8:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 68590,
                        "name": "_isAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68582,
                        "src": "8924:8:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 68586,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8898:5:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_AccountCore_$68644_$",
                          "typeString": "type(contract super AccountCore)"
                        }
                      },
                      "id": 68588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setAdmin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38839,
                      "src": "8898:15:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 68591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8898:35:313",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68592,
                  "nodeType": "ExpressionStatement",
                  "src": "8898:35:313"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 68597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 68593,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68088,
                          "src": "8947:7:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 68594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "8947:12:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 68595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8947:19:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 68596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8969:1:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8947:23:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68617,
                  "nodeType": "IfStatement",
                  "src": "8943:243:313",
                  "trueBody": {
                    "id": 68616,
                    "nodeType": "Block",
                    "src": "8972:214:313",
                    "statements": [
                      {
                        "condition": {
                          "id": 68598,
                          "name": "_isAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68582,
                          "src": "8990:8:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 68614,
                          "nodeType": "Block",
                          "src": "9090:86:313",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 68611,
                                    "name": "_account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68580,
                                    "src": "9152:8:313",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 68608,
                                        "name": "factory",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 68088,
                                        "src": "9127:7:313",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 68607,
                                      "name": "BaseAccountFactory",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 69410,
                                      "src": "9108:18:313",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_BaseAccountFactory_$69410_$",
                                        "typeString": "type(contract BaseAccountFactory)"
                                      }
                                    },
                                    "id": 68609,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9108:27:313",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BaseAccountFactory_$69410",
                                      "typeString": "contract BaseAccountFactory"
                                    }
                                  },
                                  "id": 68610,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "onSignerRemoved",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 69271,
                                  "src": "9108:43:313",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 68612,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9108:53:313",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 68613,
                              "nodeType": "ExpressionStatement",
                              "src": "9108:53:313"
                            }
                          ]
                        },
                        "id": 68615,
                        "nodeType": "IfStatement",
                        "src": "8986:190:313",
                        "trueBody": {
                          "id": 68606,
                          "nodeType": "Block",
                          "src": "9000:84:313",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 68603,
                                    "name": "_account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68580,
                                    "src": "9060:8:313",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 68600,
                                        "name": "factory",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 68088,
                                        "src": "9037:7:313",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 68599,
                                      "name": "BaseAccountFactory",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 69410,
                                      "src": "9018:18:313",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_BaseAccountFactory_$69410_$",
                                        "typeString": "type(contract BaseAccountFactory)"
                                      }
                                    },
                                    "id": 68601,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9018:27:313",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BaseAccountFactory_$69410",
                                      "typeString": "contract BaseAccountFactory"
                                    }
                                  },
                                  "id": 68602,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "onSignerAdded",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 69235,
                                  "src": "9018:41:313",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 68604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9018:51:313",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 68605,
                              "nodeType": "ExpressionStatement",
                              "src": "9018:51:313"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              38839
            ],
            "documentation": {
              "id": 68578,
              "nodeType": "StructuredDocumentation",
              "src": "8760:45:313",
              "text": "@notice Makes the given account an admin."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setAdmin",
            "nameLocation": "8819:9:313",
            "overrides": {
              "id": 68584,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8879:8:313"
            },
            "parameters": {
              "id": 68583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68580,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "8837:8:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68619,
                  "src": "8829:16:313",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8829:7:313",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68582,
                  "mutability": "mutable",
                  "name": "_isAdmin",
                  "nameLocation": "8852:8:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68619,
                  "src": "8847:13:313",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 68581,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8847:4:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8828:33:313"
            },
            "returnParameters": {
              "id": 68585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8888:0:313"
            },
            "scope": 68644,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 68643,
            "nodeType": "FunctionDefinition",
            "src": "9249:228:313",
            "nodes": [],
            "body": {
              "id": 68642,
              "nodeType": "Block",
              "src": "9353:124:313",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 68631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 68627,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68088,
                          "src": "9367:7:313",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 68628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "9367:12:313",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 68629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9367:19:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 68630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9389:1:313",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9367:23:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68641,
                  "nodeType": "IfStatement",
                  "src": "9363:108:313",
                  "trueBody": {
                    "id": 68640,
                    "nodeType": "Block",
                    "src": "9392:79:313",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 68636,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68623,
                                "src": "9448:4:313",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SignerPermissionRequest_$32819_calldata_ptr",
                                  "typeString": "struct IAccountPermissions.SignerPermissionRequest calldata"
                                }
                              },
                              "id": 68637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "signer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32803,
                              "src": "9448:11:313",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 68633,
                                  "name": "factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68088,
                                  "src": "9425:7:313",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 68632,
                                "name": "BaseAccountFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69410,
                                "src": "9406:18:313",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_BaseAccountFactory_$69410_$",
                                  "typeString": "type(contract BaseAccountFactory)"
                                }
                              },
                              "id": 68634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9406:27:313",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BaseAccountFactory_$69410",
                                "typeString": "contract BaseAccountFactory"
                              }
                            },
                            "id": 68635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onSignerAdded",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69235,
                            "src": "9406:41:313",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 68638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9406:54:313",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 68639,
                        "nodeType": "ExpressionStatement",
                        "src": "9406:54:313"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              38788
            ],
            "documentation": {
              "id": 68620,
              "nodeType": "StructuredDocumentation",
              "src": "9198:46:313",
              "text": "@notice Runs after every `changeRole` run."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterSignerPermissionsUpdate",
            "nameLocation": "9258:29:313",
            "overrides": {
              "id": 68625,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9344:8:313"
            },
            "parameters": {
              "id": 68624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68623,
                  "mutability": "mutable",
                  "name": "_req",
                  "nameLocation": "9321:4:313",
                  "nodeType": "VariableDeclaration",
                  "scope": 68643,
                  "src": "9288:37:313",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignerPermissionRequest_$32819_calldata_ptr",
                    "typeString": "struct IAccountPermissions.SignerPermissionRequest"
                  },
                  "typeName": {
                    "id": 68622,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 68621,
                      "name": "SignerPermissionRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32819,
                      "src": "9288:23:313"
                    },
                    "referencedDeclaration": 32819,
                    "src": "9288:23:313",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignerPermissionRequest_$32819_storage_ptr",
                      "typeString": "struct IAccountPermissions.SignerPermissionRequest"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9287:39:313"
            },
            "returnParameters": {
              "id": 68626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9353:0:313"
            },
            "scope": 68644,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 68067,
              "name": "IAccountCore",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 65720,
              "src": "1338:12:313"
            },
            "id": 68068,
            "nodeType": "InheritanceSpecifier",
            "src": "1338:12:313"
          },
          {
            "baseName": {
              "id": 68069,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41093,
              "src": "1352:13:313"
            },
            "id": 68070,
            "nodeType": "InheritanceSpecifier",
            "src": "1352:13:313"
          },
          {
            "baseName": {
              "id": 68071,
              "name": "Multicall",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21413,
              "src": "1367:9:313"
            },
            "id": 68072,
            "nodeType": "InheritanceSpecifier",
            "src": "1367:9:313"
          },
          {
            "baseName": {
              "id": 68073,
              "name": "BaseAccount",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 69054,
              "src": "1378:11:313"
            },
            "id": 68074,
            "nodeType": "InheritanceSpecifier",
            "src": "1378:11:313"
          },
          {
            "baseName": {
              "id": 68075,
              "name": "ERC1271",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8656,
              "src": "1391:7:313"
            },
            "id": 68076,
            "nodeType": "InheritanceSpecifier",
            "src": "1391:7:313"
          },
          {
            "baseName": {
              "id": 68077,
              "name": "AccountPermissions",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38899,
              "src": "1400:18:313"
            },
            "id": 68078,
            "nodeType": "InheritanceSpecifier",
            "src": "1400:18:313"
          }
        ],
        "canonicalName": "AccountCore",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          68644,
          38899,
          50535,
          8656,
          69054,
          21413,
          41093,
          65720,
          33709,
          32934,
          65702
        ],
        "name": "AccountCore",
        "nameLocation": "1323:11:313",
        "scope": 68645,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 313
}