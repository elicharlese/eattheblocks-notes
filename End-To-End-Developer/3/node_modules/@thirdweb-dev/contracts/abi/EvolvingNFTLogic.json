{
  "abi": [
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidQueryRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintERC2309QuantityExceedsLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnershipNotInitializedForExtraData",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "claimConditions",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ConsecutiveTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "restriction",
          "type": "bool"
        }
      ],
      "name": "OperatorRestriction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "SharedMetadataDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "imageURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "animationURI",
          "type": "string"
        }
      ],
      "name": "SharedMetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimConditionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        }
      ],
      "name": "deleteSharedMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "explicitOwnershipOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "startTimestamp",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "burned",
              "type": "bool"
            },
            {
              "internalType": "uint24",
              "name": "extraData",
              "type": "uint24"
            }
          ],
          "internalType": "struct IERC721AUpgradeable.TokenOwnership",
          "name": "ownership",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveClaimConditionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllSharedMetadata",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "imageURI",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "animationURI",
                  "type": "string"
                }
              ],
              "internalType": "struct ISharedMetadataBatch.SharedMetadataInfo",
              "name": "metadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct ISharedMetadataBatch.SharedMetadataWithId[]",
          "name": "metadata",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        }
      ],
      "name": "getClaimConditionById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supplyClaimedByWallet",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorRestriction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "_conditions",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_restriction",
          "type": "bool"
        }
      ],
      "name": "setOperatorRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "imageURI",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "animationURI",
              "type": "string"
            }
          ],
          "internalType": "struct ISharedMetadataBatch.SharedMetadataInfo",
          "name": "metadata",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        }
      ],
      "name": "setSharedMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_subscription",
          "type": "address"
        }
      ],
      "name": "subscribeToRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stop",
          "type": "uint256"
        }
      ],
      "name": "tokensOfOwnerIn",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1832:9822:384:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1832:9822:384:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4263:301;;;;;;;;;;-1:-1:-1;4263:301:384;;;;;:::i;:::-;;:::i;:::-;;;661:14:640;;654:22;636:41;;624:2;609:18;4263:301:384;;;;;;;;9336:122:46;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;988:197:184:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;16415:247:46:-;;;;;;;;;;-1:-1:-1;16415:247:46;;;;;:::i;:::-;;:::i;10089:240:384:-;;;;;;:::i;:::-;;:::i;:::-;;1644:173:180;;;;;;;;;;-1:-1:-1;1644:173:180;;;;;:::i;:::-;;:::i;4918:365:46:-;;;;;;;;;;;;;:::i;:::-;;;2708:25:640;;;2696:2;2681:18;4918:365:46;2562:177:640;1360:374:188;;;;;;;;;;-1:-1:-1;1360:374:188;;;;;:::i;:::-;;:::i;5374:2299:173:-;;;;;;;;;;-1:-1:-1;5374:2299:173;;;;;:::i;:::-;;:::i;10376:240:384:-;;;;;;:::i;:::-;;:::i;1777:347:186:-;;;;;;;;;;-1:-1:-1;1777:347:186;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;243:208:67:-;;;;;;;;;;-1:-1:-1;243:208:67;;;;;:::i;:::-;;:::i;8623:99:384:-;;;;;;;;;;;;;:::i;10667:248::-;;;;;;:::i;:::-;;:::i;8947:184::-;;;;;;;;;;-1:-1:-1;8947:184:384;;;;;:::i;:::-;;:::i;2364:473:186:-;;;;;;;;;;-1:-1:-1;2364:473:186;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5508:32:640;;;5490:51;;5589:6;5577:19;;;5572:2;5557:18;;5550:47;5463:18;2364:473:186;5318:285:640;205:31:67;;;;;;;;;;-1:-1:-1;205:31:67;;;;;;;;918:134:211;;;;;;;;;;-1:-1:-1;918:134:211;;;;;:::i;:::-;;:::i;509:199:56:-;;;;;;;;;;-1:-1:-1;509:199:56;;;;;:::i;:::-;;:::i;3621:256:186:-;;;;;;;;;;-1:-1:-1;3621:256:186;;;;;:::i;:::-;;:::i;10745:150:46:-;;;;;;;;;;-1:-1:-1;10745:150:46;;;;;:::i;:::-;;:::i;1073:233:188:-;;;;;;;;;;-1:-1:-1;1073:233:188;;;;;:::i;:::-;;:::i;1594:228:184:-;;;;;;;;;;-1:-1:-1;1594:228:184;;;;;:::i;:::-;;:::i;8326:249:173:-;;;;;;;;;;-1:-1:-1;8326:249:173;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6165:263:46:-;;;;;;;;;;-1:-1:-1;6165:263:46;;;;;:::i;:::-;;:::i;2405:2872:173:-;;;;;;;;;;-1:-1:-1;2405:2872:173;;;;;:::i;:::-;;:::i;3016:319:44:-;;;;;;;;;;-1:-1:-1;3016:319:44;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1078:1264:173:-;;;;;;:::i;:::-;;:::i;1301:167:180:-;;;;;;;;;;;;;:::i;1439:188:170:-;;;;;;;;;;-1:-1:-1;1439:188:170;;;;;:::i;:::-;;:::i;9529:126:46:-;;;;;;;;;;;;;:::i;2364:217:44:-;;;;;;;;;;-1:-1:-1;2364:217:44;;;;;:::i;:::-;;:::i;4902:288:186:-;;;;;;;;;;-1:-1:-1;4902:288:186;;;;;:::i;:::-;;:::i;9805:243:384:-;;;;;;;;;;-1:-1:-1;9805:243:384;;;;;:::i;:::-;;:::i;8396:145::-;;;;;;;;;;;;;:::i;8657:327:173:-;;;;;;;;;;-1:-1:-1;8657:327:173;;;;;:::i;:::-;;:::i;2947:230:186:-;;;;;;;;;;;;;:::i;10966:281:384:-;;;;;;:::i;:::-;;:::i;1411:579:44:-;;;;;;;;;;-1:-1:-1;1411:579:44;;;;;:::i;:::-;;:::i;:::-;;;;;;13157:13:640;;-1:-1:-1;;;;;13153:39:640;13135:58;;13253:4;13241:17;;;13235:24;-1:-1:-1;;;;;13231:49:640;13209:20;;;13202:79;13351:4;13339:17;;;13333:24;13326:32;13319:40;13297:20;;;13290:70;13420:4;13408:17;;;13402:24;13428:8;13398:39;13376:20;;;13369:69;;;;13122:3;13107:19;;12922:522;7761:500:173;;;;;;;;;;;;;:::i;3173:1059:384:-;;;;;;;;;;-1:-1:-1;3173:1059:384;;;;;:::i;:::-;;:::i;631:219:173:-;;;;;;;;;;;;;:::i;:::-;;;;13623:25:640;;;13679:2;13664:18;;13657:34;;;;13596:18;631:219:173;13449:248:640;4717:93:384;;;;;;;;;;-1:-1:-1;4703:1:384;4717:93;8623:99;2064:219:170;;;;;;;;;;;;;:::i;17394:186:46:-;;;;;;;;;;-1:-1:-1;17394:186:46;;;;;:::i;:::-;;:::i;1780:375:188:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4263:301:384:-;4438:4;4465:36;4489:11;4465:23;:36::i;:::-;:92;;;-1:-1:-1;;;;;;;;;;4505:52:384;;;4465:92;4458:99;4263:301;-1:-1:-1;;4263:301:384:o;9336:122:46:-;9390:13;9422:23;:21;:23::i;:::-;:29;;9415:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9336:122;:::o;988:197:184:-;1050:7;1069:36;1108:39;:37;:39::i;:::-;1164:14;-1:-1:-1;;;;;1164:14:184;;988:197;-1:-1:-1;;988:197:184:o;16415:247:46:-;16491:7;16515:16;16523:7;16515;:16::i;:::-;16510:73;;16533:50;-1:-1:-1;;;16533:7:46;:50::i;:::-;16601:23;:21;:23::i;:::-;:48;;;;:39;;:48;;-1:-1:-1;16601:48:46;;;:54;-1:-1:-1;;;;;16601:54:46;;16415:247::o;10089:240:384:-;1886:19:69;;10266:8:384;;1886:19:69;;1882:286;;;391:42;1925:45;:49;1921:237;;1999:67;;-1:-1:-1;;;1999:67:69;;391:42;;1999;;:67;;2050:4;;2057:8;;1999:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1994:150;;2116:8;2097:28;;-1:-1:-1;;;2097:28:69;;;;;;;;:::i;:::-;;;;;;;;1994:150;10290:32:384::1;10304:8;10314:7;10290:13;:32::i;:::-;10089:240:::0;;;:::o;1644:173:180:-;1714:14;:12;:14::i;:::-;1709:70;;1744:24;;-1:-1:-1;;;1744:24:180;;;;;;;:::i;1709:70::-;1788:22;1800:9;1788:11;:22::i;:::-;1644:173;:::o;4918:365:46:-;4979:7;4703:1:384;5212:23:46;:21;:23::i;:::-;:36;;;5172:23;:21;:23::i;:::-;:37;:76;:94;;4918:365;-1:-1:-1;4918:365:46:o;1360:374:188:-;1430:23;:21;:23::i;:::-;1422:83;;;;-1:-1:-1;;;1422:83:188;;;;;;;:::i;:::-;1523:45;1564:3;1523:29;:27;:29::i;:::-;:33;:40;:45::i;:::-;1515:109;;;;-1:-1:-1;;;1515:109:188;;17870:2:640;1515:109:188;;;17852:21:640;17909:2;17889:18;;;17882:30;17948:34;17928:18;;;17921:62;-1:-1:-1;;;17999:18:640;;;17992:49;18058:19;;1515:109:188;17668:415:640;1515:109:188;1642:29;:27;:29::i;:::-;:43;;;;:38;;;;;:43;;;;;1635:50;;;1642:43;1635:50;;;1642:43;1635:50;;1642:43;1635:50;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;1701:26:188;;1723:3;;-1:-1:-1;1701:26:188;;-1:-1:-1;1701:26:188;;;1360:374;:::o;5374:2299:173:-;5613:15;5640:29;5672:25;:23;:25::i;:::-;5707:39;5749:44;;;:30;;;;:44;;;;;;;;5707:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5707:86:173;;;;;;;;;;5640:57;;-1:-1:-1;5707:39:173;;:86;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5707:86:173;;;;-1:-1:-1;;;5824:40:173;;;;5895:31;;;;5960:26;;;;6001:28;;;;5707:86;;-1:-1:-1;5824:40:173;;5895:31;;5960:26;6001:42;5997:515;;6076:425;6112:21;:15;;:21;:::i;:::-;6076:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6151:28:173;;;;;;-1:-1:-1;6270:8:173;;6304:38;;;;;6368:29;;;;;6423:24;;;;;;;;:::i;:::-;6228:241;;-1:-1:-1;;;;;;18873:2:640;18909:15;;;18905:24;;6228:241:173;;;18893:37:640;18946:12;;;18939:28;;;;18983:12;;;18976:28;;;;19038:15;;;19034:24;19020:12;;;19013:46;19075:13;;6228:241:173;;;;;;;;;;;;6197:290;;;;;;6076:18;:425::i;:::-;-1:-1:-1;6059:442:173;-1:-1:-1;5997:515:173;6526:10;6522:534;;;6565:38;;;;:129;;6684:10;6565:129;;;6627:15;:38;;;6565:129;6552:142;;-1:-1:-1;;6721:15:173;:29;;;:50;;:127;;6838:10;6721:127;;;6790:15;:29;;;6721:127;6708:140;;-1:-1:-1;;6878:15:173;:29;;;:50;;:92;;;;-1:-1:-1;6968:1:173;6932:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6932:38:173;;;6878:92;:167;;7032:13;6878:167;;;6989:24;;;;;;;;:::i;:::-;6862:183;;6522:534;7066:29;7098:4;:19;;:41;;:55;7140:12;7098:55;;;;;;;;;;;:65;7154:8;-1:-1:-1;;;;;7098:65:173;-1:-1:-1;;;;;7098:65:173;;;;;;;;;;;;;7066:97;;7191:13;-1:-1:-1;;;;;7178:26:173;:9;-1:-1:-1;;;;;7178:26:173;;;:58;;;;7226:10;7208:14;:28;;7178:58;7174:115;;;7252:26;;-1:-1:-1;;;7252:26:173;;19301:2:640;7252:26:173;;;19283:21:640;19340:2;19320:18;;;19313:30;-1:-1:-1;;;19359:18:640;;;19352:46;19415:18;;7252:26:173;19099:340:640;7174:115:173;7303:14;;;:66;;-1:-1:-1;7358:10:173;7322:33;7334:21;7322:9;:33;:::i;:::-;:46;7303:66;7299:111;;;7385:14;;-1:-1:-1;;;7385:14:173;;;;;;19911:2:640;19893:21;;;19950:1;19930:18;;;19923:29;-1:-1:-1;;;19983:2:640;19968:18;;19961:34;20027:2;20012:18;;19709:327;7299:111:173;7469:17;:36;;;7457:9;7423:17;:31;;;:43;;;;:::i;:::-;:82;7419:133;;;7521:20;;-1:-1:-1;;;7521:20:173;;20243:2:640;7521:20:173;;;20225:21:640;20282:2;20262:18;;;20255:30;-1:-1:-1;;;20301:18:640;;;20294:40;20351:18;;7521:20:173;20041:334:640;7419:133:173;7566:32;;7601:15;-1:-1:-1;7562:105:173;;;7632:24;;-1:-1:-1;;;7632:24:173;;20582:2:640;7632:24:173;;;20564:21:640;20621:2;20601:18;;;20594:30;-1:-1:-1;;;20640:18:640;;;20633:44;20694:18;;7632:24:173;20380:338:640;7562:105:173;5630:2043;;;;;;5374:2299;;;;;;;;:::o;10376:240:384:-;1064:19:69;;10556:4:384;;1064:19:69;;1060:621;;;391:42;1103:45;:49;1099:572;;-1:-1:-1;;;;;1396:18:69;;1404:10;1396:18;1392:94;;;10572:37:384::1;10591:4;10597:2;10601:7;10572:18;:37::i;:::-;1461:7:69::0;;1392:94;1508:69;;-1:-1:-1;;;1508:69:69;;391:42;;1508;;:69;;1559:4;;1566:10;;1508:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:154;;1627:10;1608:30;;-1:-1:-1;;;1608:30:69;;;;;;;;:::i;1503:154::-;10572:37:384::1;10591:4;10597:2;10601:7;10572:18;:37::i;:::-;10376:240:::0;;;;:::o;1777:347:186:-;1914:16;1932:21;1970:17;1989:11;2004:31;2027:7;2004:22;:31::i;:::-;1969:66;;-1:-1:-1;1969:66:186;;-1:-1:-1;1969:66:186;;;-1:-1:-1;2111:6:186;2092:15;1969:66;2092:9;:15;:::i;:::-;2091:26;;;;:::i;:::-;2075:42;;1959:165;;1777:347;;;;;:::o;243:208:67:-;321:28;:26;:28::i;:::-;313:84;;;;-1:-1:-1;;;313:84:67;;21355:2:640;313:84:67;;;21337:21:640;21394:2;21374:18;;;21367:30;21433:34;21413:18;;;21406:62;-1:-1:-1;;;21484:18:640;;;21477:41;21535:19;;313:84:67;21153:407:640;313:84:67;407:37;431:12;407:23;:37::i;8623:99:384:-;8675:7;8701:14;:12;:14::i;:::-;8694:21;;8623:99;:::o;10667:248::-;1064:19:69;;10851:4:384;;1064:19:69;;1060:621;;;391:42;1103:45;:49;1099:572;;-1:-1:-1;;;;;1396:18:69;;1404:10;1396:18;1392:94;;;10867:41:384::1;10890:4;10896:2;10900:7;10867:22;:41::i;1392:94:69:-:0;1508:69;;-1:-1:-1;;;1508:69:69;;391:42;;1508;;:69;;1559:4;;1566:10;;1508:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:154;;1627:10;1608:30;;-1:-1:-1;;;1608:30:69;;;;;;;;:::i;1503:154::-;10867:41:384::1;10890:4;10896:2;10900:7;10867:22;:41::i;8947:184::-:0;9104:20;9110:7;9119:4;9104:5;:20::i;2364:473:186:-;2444:7;2453:6;2471:32;2506:31;:29;:31::i;:::-;2548:34;2585;;;:24;;;;:34;;;;;;;;;2548:71;;;;;;;;;;-1:-1:-1;;;;;2548:71:186;;;;;;;;;;;2471:66;;-1:-1:-1;2548:71:186;2649:39;:181;;2775:25;;2809:19;;;;2649:181;;;2708:21;;-1:-1:-1;;;;;2708:21:186;;;-1:-1:-1;;;2738:15:186;;;;2649:181;2630:200;;;;;;2364:473;;;:::o;918:134:211:-;-1:-1:-1;;;;;1017:28:211;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;509:199:56:-;588:28;:26;:28::i;:::-;580:81;;;;-1:-1:-1;;;580:81:56;;21767:2:640;580:81:56;;;21749:21:640;21806:2;21786:18;;;21779:30;21845:34;21825:18;;;21818:62;-1:-1:-1;;;21896:18:640;;;21889:38;21944:19;;580:81:56;21565:404:640;580:81:56;671:30;681:13;696:4;671:9;:30::i;3621:256:186:-;3733:20;:18;:20::i;:::-;3728:76;;3769:24;;-1:-1:-1;;;3769:24:186;;;;;;;:::i;3728:76::-;3814:56;3839:17;3858:11;3814:24;:56::i;:::-;3621:256;;:::o;10745:150:46:-;10817:7;10859:27;10878:7;10859:18;:27::i;1073:233:188:-;1178:23;:21;:23::i;:::-;1170:83;;;;-1:-1:-1;;;1170:83:188;;;;;;;:::i;:::-;1263:36;1285:8;1295:3;1263:21;:36::i;1594:228:184:-;1684:29;:27;:29::i;:::-;1679:85;;1729:24;;-1:-1:-1;;;1729:24:184;;;;;;;:::i;1679:85::-;1773:42;1800:14;1773:26;:42::i;8326:249:173:-;8402:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8402:31:173;8445:29;8477:25;:23;:25::i;:::-;8524:19;:44;;;:30;;;;:44;;;;;;;;;8512:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8512:56:173;;;;;;;;;;8445:57;;-1:-1:-1;8512:56:173;;8524:44;;8512:56;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8435:140;8326:249;;;:::o;6165:263:46:-;6237:7;-1:-1:-1;;;;;6260:19:46;;6256:69;;6281:44;-1:-1:-1;;;6281:7:46;:44::i;:::-;-1:-1:-1;;;;;6342:23:46;:21;:23::i;:::-;:42;;:49;6385:5;-1:-1:-1;;;;;6342:49:46;-1:-1:-1;;;;;6342:49:46;;;;;;;;;;;;;:79;6335:86;;6165:263;;;:::o;2405:2872:173:-;2570:24;:22;:24::i;:::-;2565:80;;2610:24;;-1:-1:-1;;;2610:24:173;;;;;;;:::i;2565:80::-;2655:29;2687:25;:23;:25::i;:::-;2751:34;;2824:25;;;;2655:57;;-1:-1:-1;2751:34:173;;3266:108;;;;3324:39;3345:18;3324;:39;:::i;:::-;3308:55;;3266:108;3384:25;;;:46;;;3440:50;;;3384:19;;3546:658;3566:22;;;3546:658;;;3617:6;;;:69;;;3657:11;;3669:1;3657:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;3627:59;;3617:69;3609:84;;;;-1:-1:-1;;;3609:84:173;;22646:2:640;3609:84:173;;;22628:21:640;22685:1;22665:18;;;22658:29;-1:-1:-1;;;22703:18:640;;;22696:32;22745:18;;3609:84:173;22444:325:640;3609:84:173;3708:28;3739:30;;;3708:28;3770:17;3786:1;3770:13;:17;:::i;:::-;3739:49;;;;;;;;;;;:63;;;3708:94;;3843:11;;3855:1;3843:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;3820:20;:56;3816:123;;;3896:28;;-1:-1:-1;;;3896:28:173;;22976:2:640;3896:28:173;;;22958:21:640;23015:2;22995:18;;;22988:30;-1:-1:-1;;;23034:18:640;;;23027:48;23092:18;;3896:28:173;22774:342:640;3816:123:173;4005:11;;4017:1;4005:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3953:30;;;:19;3984:17;4000:1;3984:13;:17;:::i;:::-;3953:49;;;;;;;;;;;:66;;;;;;:::i;:::-;-1:-1:-1;4099:20:173;;-1:-1:-1;4033:30:173;;;:19;4064:17;4080:1;4064:13;:17;:::i;:::-;4033:49;;;;;;;;;;;-1:-1:-1;4033:49:173;:63;;:86;4164:11;;4176:1;4164:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;-1:-1:-1;3590:3:173;;-1:-1:-1;3590:3:173;;;:::i;:::-;;;;3546:658;;;;4744:22;4740:456;;;4799:18;4782:134;4823:13;4819:1;:17;4782:134;;;4868:19;:33;;;:30;;;;:33;;;;;4861:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4861:40:173;;;4868:33;4861:40;;;;4868:19;4861:40;:::i;:::-;;;4838:3;;;;;:::i;:::-;;;;4782:134;;;;4740:456;;;4950:39;;;4946:240;;;5026:11;5009:163;5050:18;5046:1;:22;5009:163;;;5104:30;;;:19;5135:17;5151:1;5135:13;:17;:::i;:::-;5104:49;;;;;;;;;;;-1:-1:-1;5104:49:173;;;5097:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5097:56:173;;;5104:49;5097:56;;;;-1:-1:-1;5097:56:173;:::i;:::-;;;5070:3;;;;;:::i;:::-;;;;5009:163;;;;4946:240;5211:59;5234:11;;5247:22;5211:59;;;;;;;;:::i;:::-;;;;;;;;2555:2722;;;;;2405:2872;;;:::o;3016:319:44:-;3094:16;4703:1:384;3122:13:44;3178:14;:12;:14::i;:::-;3163:29;;3202:25;3250:4;3241:5;:13;3237:66;;3267:36;3284:5;3291;3298:4;3267:16;:36::i;:::-;3256:47;;3237:66;3320:8;3016:319;-1:-1:-1;;;;3016:319:44:o;1078:1264:173:-;1427:25;1455:27;:25;:27::i;:::-;1427:55;;1493:103;1505:17;1524:16;:14;:16::i;:::-;1542:9;1553;1564:14;1580:15;1493:11;:103::i;:::-;;1641:29;1673:25;:23;:25::i;:::-;1708:19;:49;;;:30;;;;:49;;;;;:63;:76;;1641:57;;-1:-1:-1;1775:9:173;;1708:63;;:19;:76;;1775:9;;1708:76;:::i;:::-;;;;-1:-1:-1;;1794:19:173;:60;;;:41;;;:60;;;;;1876:9;;1855:16;:14;:16::i;:::-;-1:-1:-1;;;;;1794:78:173;-1:-1:-1;;;;;1794:78:173;;;;;;;;;;;;;:91;;;;;;;:::i;:::-;;;;-1:-1:-1;1942:70:173;;-1:-1:-1;1971:1:173;1975:9;1986;1997:14;1942:20;:70::i;:::-;2071:20;2094:44;2117:9;2128;2094:22;:44::i;:::-;2071:67;;2205:9;-1:-1:-1;;;;;2154:86:173;2187:16;:14;:16::i;:::-;-1:-1:-1;;;;;2154:86:173;2168:17;2154:86;2216:12;2230:9;2154:86;;;;;;13623:25:640;;;13679:2;13664:18;;13657:34;13611:2;13596:18;;13449:248;2154:86:173;;;;;;;;1321:1021;;;1078:1264;;;;;;:::o;1301:167:180:-;1348:7;1367:32;1402:31;:29;:31::i;1439:188:170:-;1516:20;:18;:20::i;:::-;1511:76;;1552:24;;-1:-1:-1;;;1552:24:170;;;;;;;:::i;1511:76::-;1597:23;1615:4;1597:17;:23::i;9529:126:46:-;9585:13;9617:23;:21;:23::i;:::-;:31;;9610:38;;;;;:::i;2364:217:44:-;2503:16;2538:36;2555:5;2562;2569:4;2538:16;:36::i;:::-;2531:43;;2364:217;;;;;;:::o;4902:288:186:-;5049:20;:18;:20::i;:::-;5044:76;;5085:24;;-1:-1:-1;;;5085:24:186;;;;;;;:::i;5044:76::-;5130:53;5156:8;5166:10;5178:4;5130:25;:53::i;9805:243:384:-;1886:19:69;;9974:8:384;;1886:19:69;;1882:286;;;391:42;1925:45;:49;1921:237;;1999:67;;-1:-1:-1;;;1999:67:69;;391:42;;1999;;:67;;2050:4;;2057:8;;1999:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1994:150;;2116:8;2097:28;;-1:-1:-1;;;2097:28:69;;;;;;;;:::i;1994:150::-;9998:43:384::1;10022:8;10032;9998:23;:43::i;8396:145::-:0;8442:7;4703:1;8492:14;:12;:14::i;:::-;:32;8485:39;;8396:145;:::o;8657:327:173:-;8776:29;8821;8853:25;:23;:25::i;:::-;8912:19;:55;;;:41;;:55;;;;;;;;-1:-1:-1;;;;;8912:65:173;;;;;;;;-1:-1:-1;;8912:65:173;;;;8657:327::o;2947:230:186:-;3012:7;3021:6;3039:32;3074:31;:29;:31::i;:::-;3123:21;-1:-1:-1;;;;;3123:21:186;;;-1:-1:-1;;;3153:15:186;;;;;;-1:-1:-1;3123:21:186;-1:-1:-1;;2947:230:186:o;10966:281:384:-;1064:19:69;;11177:4:384;;1064:19:69;;1060:621;;;391:42;1103:45;:49;1099:572;;-1:-1:-1;;;;;1396:18:69;;1404:10;1396:18;1392:94;;;11193:47:384::1;11216:4;11222:2;11226:7;11235:4;11193:22;:47::i;:::-;1461:7:69::0;;1392:94;1508:69;;-1:-1:-1;;;1508:69:69;;391:42;;1508;;:69;;1559:4;;1566:10;;1508:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:154;;1627:10;1608:30;;-1:-1:-1;;;1608:30:69;;;;;;;;:::i;1503:154::-;11193:47:384::1;11216:4;11222:2;11226:7;11235:4;11193:22;:47::i;:::-;10966:281:::0;;;;;:::o;1411:579:44:-;1535:31;;:::i;:::-;4703:1:384;1610:7:44;:26;1606:368;;1670:14;:12;:14::i;:::-;1660:7;:24;1656:304;;;1840:51;1848:32;1872:7;1848:23;:32::i;:::-;1840:51;;-1:-1:-1;;1882:9:44;;;;1840:51;;;1920:21;1933:7;1920:12;:21::i;1656:304::-;1411:579;;;:::o;7761:500:173:-;7819:7;7838:29;7870:25;:23;:25::i;:::-;7972;;;;7935:34;;7838:57;;-1:-1:-1;7923:9:173;;7935:62;;7972:25;7935:62;:::i;:::-;7923:74;;7905:318;8015:34;;8011:38;;7905:318;;;8114:30;;;:19;8145:5;8149:1;8145;:5;:::i;:::-;8114:37;;;;;;;;;;;:52;;;8095:15;:71;8091:122;;8193:5;8197:1;8193;:5;:::i;:::-;8186:12;;;;7761:500;:::o;8091:122::-;8063:3;;;;:::i;:::-;;;;7905:318;;;-1:-1:-1;8233:21:173;;-1:-1:-1;;;8233:21:173;;30101:2:640;8233:21:173;;;30083::640;30140:2;30120:18;;;30113:30;-1:-1:-1;;;30159:18:640;;;30152:41;30210:18;;8233:21:173;29899:335:640;3173:1059:384;3328:13;3362:17;3370:8;3362:7;:17::i;:::-;3357:62;;3395:13;;-1:-1:-1;;;3395:13:384;;30441:2:640;3395:13:384;;;30423:21:640;30480:1;30460:18;;;30453:29;-1:-1:-1;;;30498:18:640;;;30491:33;30541:18;;3395:13:384;30239:326:640;3357:62:384;3450:13;3466:17;3474:8;3466:7;:17::i;:::-;3450:33;;3493:13;3521:14;3558:4;-1:-1:-1;;;;;3538:49:384;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3521:68;-1:-1:-1;;;;;;3603:20:384;;;3599:175;;3647:35;;-1:-1:-1;;;3647:35:384;;-1:-1:-1;;;;;3647:28:384;;;;;:35;;3676:5;;3647:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3639:43;;3599:175;;;3721:42;;-1:-1:-1;;;3721:42:384;;3741:4;;3721:35;;:42;;3757:5;;3721:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3713:50;;3599:175;3866:20;3889:42;:29;:27;:29::i;:::-;:40;:42::i;:::-;3866:65;-1:-1:-1;3941:16:384;;3972:192;3996:3;:10;3992:1;:14;3972:192;;;4053:5;4042:3;4046:1;4042:6;;;;;;;;:::i;:::-;;;;;;;4034:15;;:24;4030:124;;4089:3;4093:1;4089:6;;;;;;;;:::i;:::-;;;;;;;4078:17;;4030:124;;;4134:5;;4030:124;4008:6;4013:1;4008:6;;:::i;:::-;;;3972:192;;;;4180:45;4206:8;4216;4180:25;:45::i;:::-;4173:52;3173:1059;-1:-1:-1;;;;;;;3173:1059:384:o;631:219:173:-;678:7;687;706:29;738:25;:23;:25::i;:::-;781:34;;817:25;;;;;781:34;;817:25;;-1:-1:-1;631:219:173;-1:-1:-1;;631:219:173:o;2064::170:-;2125:13;2150:41;2194:49;:47;:49::i;:::-;2150:93;;2260:4;:16;;2253:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2064:219;:::o;17394:186:46:-;17491:4;17514:23;:21;:23::i;:::-;-1:-1:-1;;;;;17514:49:46;;;;;;;:42;;;;;:49;;;;;;;;:59;;;;;;;;;;-1:-1:-1;17514:59:46;;;;;17394:186::o;1780:375:188:-;1835:38;1885:20;1908:42;:29;:27;:29::i;:42::-;1885:65;;1998:3;:10;-1:-1:-1;;;;;1971:38:188;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1960:49;;2025:9;2020:129;2044:3;:10;2040:1;:14;2020:129;;;2092:29;:27;:29::i;:::-;:38;;:46;2131:3;2135:1;2131:6;;;;;;;;:::i;:::-;;;;;;;2092:46;;;;;;;;;;;2078:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:8;2087:1;2078:11;;;;;;;;:::i;:::-;;;;;;;;;;:60;2056:6;2061:1;2056:6;;:::i;:::-;;;2020:129;;;;1875:280;1780:375;:::o;8452:630:46:-;8537:4;-1:-1:-1;;;;;;;;;8855:25:46;;;;:101;;-1:-1:-1;;;;;;;;;;8931:25:46;;;8855:101;:177;;;-1:-1:-1;;;;;;;;9007:25:46;-1:-1:-1;;;9007:25:46;;8452:630::o;1793:159:45:-;1740:46;;1793:159::o;308:222:184:-;216:33;;308:222::o;17829:408:46:-;17894:11;17940:7;4703:1:384;17921:26:46;17917:314;;17977:23;:21;:23::i;:::-;:37;17967:47;;17963:258;;;18034:14;18066:84;18083:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;;-1:-1:-1;18073:66:46;18066:84;;18141:9;;;:::i;:::-;;;18066:84;;;-1:-1:-1;;;18177:24:46;:29;;17829:408;-1:-1:-1;;17829:408:46:o;43654:160::-;43753:13;43747:4;43740:27;43793:4;43787;43780:18;16143:122;16231:27;16240:2;16244:7;16253:4;16231:8;:27::i;6550:128:384:-;6606:4;6629:42;6606:4;6658:12;:10;:12::i;:::-;6629:8;:42::i;1932:259:180:-;1991:32;2026:31;:29;:31::i;:::-;2089:11;;-1:-1:-1;;;;;2110:23:180;;;-1:-1:-1;;;;;;2110:23:180;;;;;;2149:35;;1991:66;;-1:-1:-1;2089:11:180;;;;;2149:35;;2068:18;;2149:35;1981:210;;1932:259;:::o;7458:138:384:-;7531:4;7554:35;2809:24;7576:12;:10;:12::i;3288:187:188:-;454:42;;8623:99:384:o;6109:129:238:-;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;396:193:173:-;230:25;;396:193::o;898:906:288:-;1019:4;;1067;1019;;1109:567;1133:5;:12;1129:1;:16;1109:567;;;1166:10;1175:1;1166:10;;:::i;:::-;;;1190:20;1213:5;1219:1;1213:8;;;;;;;;:::i;:::-;;;;;;;1190:31;;1256:12;1240;:28;1236:430;;1391:44;;;;;;31172:19:640;;;31207:12;;;31200:28;;;31244:12;;1391:44:288;;;;;;;;;;;;1381:55;;;;;;1366:70;;1236:430;;;1578:44;;;;;;31172:19:640;;;31207:12;;;31200:28;;;31244:12;;1578:44:288;;;;;;;;;;;;1568:55;;;;;;1553:70;;1650:1;1641:10;;;;;:::i;:::-;;;1236:430;-1:-1:-1;1147:3:288;;;;:::i;:::-;;;;1109:567;;;-1:-1:-1;1769:20:288;;;;;-1:-1:-1;;;;898:906:288:o;20209:3591:46:-;20346:27;20376;20395:7;20376:18;:27::i;:::-;-1:-1:-1;;;;;20528:22:46;;;;20346:57;;-1:-1:-1;20586:45:46;;;;20582:95;;20633:44;-1:-1:-1;;;20633:7:46;:44::i;:::-;20689:27;20718:23;20745:35;20772:7;20745:26;:35::i;:::-;20688:92;;;;20877:68;20902:15;20919:4;20925:19;41770:10;;41684:103;20925:19;-1:-1:-1;;;;;18791:32:46;;;18637:28;;18918:20;;18940:30;;18915:56;;18341:646;20877:68;20872:188;;20964:43;20981:4;41770:10;17394:186;:::i;20964:43::-;20959:101;;21009:51;-1:-1:-1;;;21009:7:46;:51::i;:::-;21071:43;21093:4;21099:2;21103:7;21112:1;21071:21;:43::i;:::-;21203:15;21200:157;;;21341:1;21320:19;21313:30;21200:157;21729:23;:21;:23::i;:::-;-1:-1:-1;;;;;21729:48:46;;;;;;:42;;;;;:48;;;;;21727:50;;-1:-1:-1;;21727:50:46;;;21821:23;:21;:23::i;:::-;-1:-1:-1;;;;;21821:46:46;;;;;;:42;;;;;:46;;;;;21819:48;;;;;;22184:143;21821:46;-1:-1:-1;;;22184:18:46;:143::i;:::-;22131:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:196;-1:-1:-1;;;22444:47:46;;22440:689;;22548:1;22538:11;;22669:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;22665:450;;22829:23;:21;:23::i;:::-;:37;22814:52;;22810:287;;23055:19;22998:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;:76;22810:287;22498:631;22440:689;-1:-1:-1;;;;;23257:20:46;;23628:7;23257:20;23560:4;-1:-1:-1;;;;;;;;;;;23238:16:46;;23371:292;23686:13;23682:58;;23701:39;-1:-1:-1;;;23701:7:46;:39::i;:::-;20336:3464;;;;20209:3591;;;:::o;457:160:67:-;528:19;:34;;-1:-1:-1;;528:34:67;;;;;;;;;;577:33;;636:41:640;;;577:33:67;;624:2:640;609:18;577:33:67;;;;;;;457:160;:::o;4590:125:46:-;4645:7;4671:23;:21;:23::i;:::-;:37;;4590:125;-1:-1:-1;4590:125:46:o;23891:187::-;24032:39;24049:4;24055:2;24059:7;24032:39;;;;;;;;;;;;:16;:39::i;36132:3168::-;36211:27;36241;36260:7;36241:18;:27::i;:::-;36211:57;-1:-1:-1;36211:57:46;36279:12;;36399:35;36426:7;36399:26;:35::i;:::-;36342:92;;;;36449:13;36445:321;;;36568:68;36593:15;36610:4;41770:10;20877:24;:68::i;36568:::-;36563:192;;36659:43;36676:4;41770:10;17394:186;:::i;36659:43::-;36654:101;;36704:51;-1:-1:-1;;;36704:7:46;:51::i;:::-;36776;36798:4;36812:1;36816:7;36825:1;36776:21;:51::i;:::-;36916:15;36913:157;;;37054:1;37033:19;37026:30;36913:157;-1:-1:-1;;;;;37659:23:46;:21;:23::i;:::-;-1:-1:-1;;;;;37659:48:46;;;;;;:42;;;;;:48;;;;;:84;;;;;;;;38027:173;37659:48;-1:-1:-1;;;38027:18:46;:173::i;:::-;37974:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:226;-1:-1:-1;;;38317:47:46;;38313:689;;38421:1;38411:11;;38542:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;38538:450;;38702:23;:21;:23::i;:::-;:37;38687:52;;38683:287;;38928:19;38871:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;:76;38683:287;38371:631;38313:689;39027:35;;39054:7;;39050:1;;-1:-1:-1;;;;;39027:35:46;;;-1:-1:-1;;;;;;;;;;;39027:35:46;39050:1;;39027:35;39245:23;:21;:23::i;:::-;:36;;;;:38;;;;;;;-1:-1:-1;;;;;;36132:3168:46:o;612:205:186:-;203:28;;612:205::o;2191:783:69:-;391:42;2326:45;:49;2322:646;;-1:-1:-1;;;;;2449:51:69;;;:55;2445:513;;2572:9;2568:289;;;2605:92;;-1:-1:-1;;;2605:92:69;;391:42;;2605:45;;:92;;2659:4;;2666:30;;2605:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3621:256:186;;:::o;2568:289:69:-;2744:94;;-1:-1:-1;;;2744:94:69;;391:42;;2744:47;;:94;;2800:4;;2807:30;;2744:94;;;:::i;2445:513::-;2895:48;;-1:-1:-1;;;2895:48:69;;391:42;;2895:33;;:48;;2937:4;;2895:48;;;:::i;3964:421:186:-;4083:6;4069:11;:20;4065:76;;;4105:25;;-1:-1:-1;;;4105:25:186;;;;;;;:::i;4065:76::-;4151:32;4186:31;:29;:31::i;:::-;4228:41;;-1:-1:-1;;;;;4228:41:186;;-1:-1:-1;;;;;;4279:37:186;;;;;-1:-1:-1;;;4279:37:186;;;;;;;4332:46;;2708:25:640;;;4228:41:186;;-1:-1:-1;4228:41:186;4332:46;;2696:2:640;2681:18;4332:46:186;;;;;;;4055:330;3964:421;;:::o;12282:2050:46:-;12349:14;12398:7;4703:1:384;12379:26:46;12375:1894;;12430:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;;-1:-1:-1;12578:11:46;12574:1318;;12624:23;:21;:23::i;:::-;:37;12613:48;;12609:101;;12663:47;-1:-1:-1;;;12663:7:46;:47::i;:::-;13333:23;:21;:23::i;:::-;-1:-1:-1;;13375:9:46;;;13333:52;;;;:41;;;;;:52;;;;;;;;-1:-1:-1;13433:11:46;13429:25;;13257:621;;13429:25;-1:-1:-1;;;13480:24:46;;13476:48;;12282:2050;;;:::o;13476:48::-;13812:47;-1:-1:-1;;;13812:7:46;:47::i;:::-;13257:621;;12574:1318;-1:-1:-1;;;14214:24:46;;14210:48;;12282:2050;;;:::o;14210:48::-;14278:47;-1:-1:-1;;;14278:7:46;:47::i;2196:503:188:-;2306:42;2344:3;2306:29;:27;:29::i;:::-;:33;:37;:42::i;:::-;2298:106;;;;-1:-1:-1;;;2298:106:188;;31813:2:640;2298:106:188;;;31795:21:640;31852:2;31832:18;;;31825:30;31891:34;31871:18;;;31864:62;-1:-1:-1;;;31942:18:640;;;31935:49;32001:19;;2298:106:188;31611:415:640;2298:106:188;2461:36;;;;;;;;2482:3;2461:36;;;;2487:9;2461:36;;;:::i;:::-;;;2415:29;:27;:29::i;:::-;:43;;;;:38;;;;;:43;;;;;;;;:82;;;;;;;;;;;;:43;;:82;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2415:82:188;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2415:82:188;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2415:82:188;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2548:3:188;;-1:-1:-1;2513:179:188;;-1:-1:-1;2565:14:188;;-1:-1:-1;2565:9:188;;-1:-1:-1;2565:9:188;:14;:::i;:::-;2593:21;;;;:9;:21;:::i;:::-;2628:18;;;;:9;:18;:::i;:::-;2660:22;;;;:9;:22;:::i;:::-;2513:179;;;;;;;;;;;;;:::i;:::-;;;;;;;;2196:503;;:::o;1904:263:184:-;1983:36;2022:39;:37;:39::i;:::-;2071:31;;-1:-1:-1;;;;;;2071:31:184;-1:-1:-1;;;;;2071:31:184;;;;;;;2117:43;;2071:31;;-1:-1:-1;2071:31:184;2117:43;;-1:-1:-1;;2117:43:184;1973:194;1904:263;:::o;3583:4263:44:-;3705:16;3770:4;3761:5;:13;3757:54;;3776:35;-1:-1:-1;;;3776:7:44;:35::i;:::-;4703:1:384;3887:5:44;:23;3883:85;;;4703:1:384;3930:23:44;;3883:85;3981:17;4001:14;:12;:14::i;:::-;3981:34;;4091:9;4083:4;:17;4079:72;;4127:9;4120:16;;4079:72;4164:25;4203;4231:16;4241:5;4231:9;:16::i;:::-;4280:12;;;4437:35;;;;-1:-1:-1;4503:22:44;;4499:3302;;4722:17;4713:5;4706:4;:12;:33;4702:112;;4790:5;4783:4;:12;4763:32;;4702:112;4933:4;4927:11;4915:23;;5183:1;5164:17;5160:25;5157:1;5153:33;5143:8;5139:48;5133:4;5126:62;5359:31;5393:26;5413:5;5393:19;:26::i;:::-;5359:60;;5437:25;5729:9;:16;;;5724:98;;-1:-1:-1;5789:14:44;;5724:98;5839:19;6026:1616;6063:19;6076:5;6063:12;:19::i;:::-;6051:31;;6167:4;6156:9;6152:20;6146:27;6262:1;6257:893;;;;7466:1;7445:22;;6139:1354;;6257:893;6536:9;6530:16;6527:121;;;6608:9;6602:16;6581:37;;6527:121;6935:5;6916:17;6912:29;6908:2;6904:38;6894:230;;7010:1;6997:11;6993:19;6978:34;;7088:5;7073:11;7070:1;7066:19;7056:8;7052:34;7045:49;6894:230;6139:1354;7538:1;7531:5;7527:13;7518:22;;7599:4;7590:5;:13;:49;;;;7622:17;7607:11;:32;7590:49;7588:52;6026:1616;;7740:29;;-1:-1:-1;;4499:3302:44;-1:-1:-1;7821:8:44;;3583:4263;-1:-1:-1;;;;;;3583:4263:44:o;11253:111:384:-;11319:7;11345:12;:10;:12::i;5083:840::-;5283:19;5279:103;;5326:9;:14;5318:33;;;;-1:-1:-1;;;5318:33:384;;34106:2:640;5318:33:384;;;34088:21:640;34145:1;34125:18;;;34118:29;-1:-1:-1;;;34163:18:640;;;34156:36;34209:18;;5318:33:384;33904:329:640;5279:103:384;5392:18;5413:33;5432:14;5413:16;:33;:::i;:::-;5392:54;-1:-1:-1;5457:18:384;-1:-1:-1;;;;;5489:45:384;;408:42:286;5489:45:384;5485:176;;;-1:-1:-1;5566:9:384;:23;;5485:176;;;-1:-1:-1;5636:9:384;:14;5485:176;5678:13;5670:28;;;;-1:-1:-1;;;5670:28:384;;34440:2:640;5670:28:384;;;34422:21:640;34479:1;34459:18;;;34452:29;-1:-1:-1;;;34497:18:640;;;34490:32;34539:18;;5670:28:384;34238:325:640;5670:28:384;5709:21;-1:-1:-1;;;;;5733:35:384;;;:84;;5796:21;5733:84;;;5771:22;:20;:22::i;:::-;5709:108;;5828:88;5865:9;5876:12;:10;:12::i;:::-;5890:13;5905:10;5828:36;:88::i;5976:248::-;6103:21;6156:14;:12;:14::i;:::-;6140:30;;6180:37;6190:3;6195:21;6180:9;:37::i;722:205:180:-;566:28;;722:205::o;1709:298:170:-;1775:41;1819:49;:47;:49::i;:::-;1775:93;;1878:21;1902:4;:16;;1878:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1928:23:170;;1878:40;;-1:-1:-1;1928:23:170;;:4;;-1:-1:-1;1928:23:170;;;;-1:-1:-1;1928:23:170;-1:-1:-1;1928:23:170;:::i;:::-;;1967:33;1986:7;1995:4;1967:33;;;;;;;:::i;:::-;;;;;;;;1765:242;;1709:298;:::o;5292:444:186:-;5439:6;5432:4;:13;5428:69;;;5461:25;;-1:-1:-1;;;5461:25:186;;;;;;;:::i;5428:69::-;5507:32;5542:31;:29;:31::i;:::-;5621:49;;;;;;;;-1:-1:-1;;;;;5621:49:186;;;;;;;;;;;;;-1:-1:-1;5584:34:186;;;:24;;;;:34;;;;;;:86;;;;-1:-1:-1;;;;;;5584:86:186;;;;;;;;;;;;;;;;;;5686:43;;2708:25:640;;;5584:24:186;;-1:-1:-1;5621:49:186;5584:34;;5686:43;;2681:18:640;5686:43:186;;;;;;;5418:318;5292:444;;;:::o;16989:255:46:-;17159:8;17083:23;:21;:23::i;:::-;41770:10;17083:63;;;;:42;;;;;:63;;;;;;;;-1:-1:-1;;;;;17083:73:46;;;;;;;;;;;;:84;;-1:-1:-1;;17083:84:46;;;;;;;;;;;17182:55;;661:14:640;;654:22;636:41;;17083:73:46;;41770:10;;17182:55;;609:18:640;17182:55:46;;;;;;;16989:255;;:::o;24659:405::-;24828:31;24841:4;24847:2;24851:7;24828:12;:31::i;:::-;-1:-1:-1;;;;;24873:14:46;;;:19;24869:189;;24911:56;24942:4;24948:2;24952:7;24961:5;24911:30;:56::i;:::-;24906:152;;24987:56;-1:-1:-1;;;24987:7:46;:56::i;11695:162::-;11774:4;11797:23;:21;:23::i;:::-;:48;;;;:41;;:48;;-1:-1:-1;11797:48:46;;;;:53;;;11695:162::o;11333:183::-;11401:21;;:::i;:::-;11441:68;11460:23;:21;:23::i;:::-;:48;;;;:41;;;;;:48;;;;;;11441:18;:68::i;7664:124:238:-;7727:16;7762:19;7770:3;7762:7;:19::i;2747:501:188:-;2834:13;2859:30;2892:29;:27;:29::i;:::-;:38;;:42;2931:2;2892:42;;;;;;;;;;;:51;;2859:84;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2973:268;3039:4;:9;;;3079:4;:16;;;3123:4;:13;;;3168:4;:17;;;3219:7;2973:41;:268::i;734:242:170:-;581:38;;734:242::o;35086:484:46:-;35210:13;35226:16;35234:7;35226;:16::i;:::-;35210:32;;35257:13;:45;;;;-1:-1:-1;41770:10:46;-1:-1:-1;;;;;35274:28:46;;;;35257:45;35253:198;;;35321:44;35338:5;41770:10;17394:186;:::i;35321:44::-;35316:135;;35385:51;-1:-1:-1;;;35385:7:46;:51::i;:::-;35518:2;35461:23;:21;:23::i;:::-;:48;;;;:39;;;;;:48;;;;;;:59;;-1:-1:-1;;;;;;35461:59:46;-1:-1:-1;;;;;35461:59:46;;;;;;35535:28;35461:48;;35535:28;;;;;;;;;;35461:48;35535:28;35200:370;35086:484;;;:::o;11370:140:384:-;11432:14;11465:38;:36;:38::i;7908:222::-;7982:4;8093:20;;;382:32:181;8093:20:384;;;;;;;;-1:-1:-1;;;;;8093:30:384;;;;;;;;;;;;;;;7908:222::o;2685:1388:238:-;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:238;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;19095:513:46;19194:27;19223:23;19262:53;19318:23;:21;:23::i;:::-;:48;;;;:39;;:48;;-1:-1:-1;;19318:48:46;;;;19566:26;;19318:48;;19566:26;;-1:-1:-1;19095:513:46:o;9185:569:384:-;9532:35;-1:-1:-1;;;;;;;;;;;9564:1:384;9532:8;:35::i;:::-;9531:36;:58;;;;-1:-1:-1;;;;;;9571:18:384;;;;9531:58;:78;;;;-1:-1:-1;;;;;;9593:16:384;;;;9531:78;9527:221;;;9630:29;-1:-1:-1;;;;;;;;;;;9654:4:384;9630:8;:29::i;:::-;9629:30;:62;;;;;9664:27;-1:-1:-1;;;;;;;;;;;9688:2:384;9664:8;:27::i;:::-;9663:28;9629:62;9625:113;;;9711:12;;-1:-1:-1;;;9711:12:384;;35312:2:640;9711:12:384;;;35294:21:640;35351:1;35331:18;;;35324:29;-1:-1:-1;;;35369:18:640;;;35362:32;35411:18;;9711:12:384;35110:325:640;14865:443:46;15271:11;15246:23;15242:41;15239:52;-1:-1:-1;;;;;15099:28:46;;;;15229:63;;14865:443::o;5818:123:238:-;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;508:385:286:-;659:12;655:49;;687:7;;655:49;-1:-1:-1;;;;;718:25:286;;408:42;718:25;714:173;;;759:37;783:3;788:7;759:23;:37::i;714:173::-;827:49;845:9;856:5;863:3;868:7;827:17;:49::i;34196:110:46:-;34272:27;34282:2;34286:8;34272:27;;;;;;;;;;;;:9;:27::i;27090:693::-;27280:99;;-1:-1:-1;;;27280:99:46;;27248:4;;-1:-1:-1;;;;;27280:56:46;;;;;:99;;41770:10;;27358:4;;27364:7;;27373:5;;27280:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27280:99:46;;;;;;;;-1:-1:-1;;27280:99:46;;;;;;;;;;;;:::i;:::-;;;27264:513;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27566:13:46;;27562:113;;27604:56;-1:-1:-1;;;27604:7:46;:56::i;:::-;27745:6;27739:13;27730:6;27726:2;27722:15;27715:38;27264:513;-1:-1:-1;;;;;;27433:75:46;-1:-1:-1;;;27433:75:46;;-1:-1:-1;27090:693:46;;;;;;:::o;14426:361::-;14492:31;;:::i;:::-;-1:-1:-1;;;;;14535:41:46;;;;-1:-1:-1;;;;;2074:3:46;14620:33;;;14586:68;:24;;;:68;-1:-1:-1;;;14683:24:46;;:29;;14664:16;;;:48;2583:3;14751:28;;;;14722:19;;;:58;14535:9;14426:361::o;5469:109:238:-;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;760:466:289:-;983:13;1008:29;1040:38;1055:8;1065:12;1040:14;:38::i;:::-;1008:70;;1088:17;1108:70;1127:4;1133:11;1146:15;1163:14;1108:18;:70::i;:::-;1088:90;;1195:24;1214:4;1195:18;:24::i;:::-;1188:31;760:466;-1:-1:-1;;;;;;;;760:466:289:o;1058:401:211:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:211;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;41770:10:46;;8623:99:384:o;2113:404:238:-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:238;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:238;2488:12;;2532:292:286;2714:12;2732:2;-1:-1:-1;;;;;2732:7:286;2748:5;2732:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:46;;;2777:7;2769:48;;;;-1:-1:-1;;;2769:48:286;;36611:2:640;2769:48:286;;;36593:21:640;36650:2;36630:18;;;36623:30;-1:-1:-1;;;36669:18:640;;;36662:58;36737:18;;2769:48:286;36409:352:640;2073:396:286;2234:3;-1:-1:-1;;;;;2225:12:286;:5;-1:-1:-1;;;;;2225:12:286;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:286;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:286;;2353:3;2358:7;2322:30;:44::i;2280:183::-;2397:55;-1:-1:-1;;;;;2397:34:286;;2432:5;2439:3;2444:7;2397:34;:55::i;33381:736:46:-;33507:19;33513:2;33517:8;33507:5;:19::i;:::-;-1:-1:-1;;;;;33565:14:46;;;:19;33561:540;;33604:11;33618:23;:21;:23::i;:::-;:37;;-1:-1:-1;33689:14:46;;;33721:238;33751:62;33790:1;33794:2;33798:7;;;;;;33807:5;33751:30;:62::i;:::-;33746:174;;33841:56;-1:-1:-1;;;33841:7:46;:56::i;:::-;33954:3;33946:5;:11;33721:238;;34063:3;34022:23;:21;:23::i;:::-;:37;:44;34018:68;;34068:18;34083:1;34068:7;:18::i;2753:654:289:-;2893:22;;2949:26;;2852:13;;2893:26;;;;2949:30;;;2893:26;;2993:24;;;3005:12;2993:24;2989:156;;;3077:8;3112:12;3047:86;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3033:101;;;;;;2989:156;3158:8;3154:101;;;3226:8;3196:47;;;;;;;;:::i;3154:101::-;3268:12;3264:117;;;3348:12;3310:59;;;;;;;;:::i;3264:117::-;-1:-1:-1;;3391:9:289;;;;;;;;;-1:-1:-1;3391:9:289;;;2753:654;-1:-1:-1;;;2753:654:289:o;1470:701::-;1655:12;1762:4;1805:34;1824:14;1805:18;:34::i;:::-;1916:11;1969:9;2040:34;2059:14;2040:18;:34::i;:::-;2123:4;1698:466;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1679:485;;1470:701;;;;;;:::o;2309:187::-;2379:13;2468:19;2482:4;2468:13;:19::i;:::-;2418:70;;;;;;;;:::i;:::-;;;;;;;;;;;;;2404:85;;2309:187;;;:::o;735:205:228:-;847:86;867:5;897:23;;;922:2;926:5;874:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;874:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:228;-1:-1:-1;;;;;;874:58:228;;;;;;;;;;847:19;:86::i;946:241::-;1111:68;;-1:-1:-1;;;;;42486:15:640;;;1111:68:228;;;42468:34:640;42538:15;;42518:18;;;42511:43;42570:18;;;42563:34;;;1084:96:228;;1104:5;;-1:-1:-1;;;1134:27:228;42403:18:640;;1111:68:228;42228:375:640;28229:2347:46;28301:20;28324:23;:21;:23::i;:::-;:37;;-1:-1:-1;28375:13:46;28371:53;;28390:34;-1:-1:-1;;;28390:7:46;:34::i;:::-;28435:61;28465:1;28469:2;28473:12;28487:8;28435:21;:61::i;:::-;28982:136;29018:2;15704:1;15691:15;;15665:24;15661:46;28982:18;:136::i;:::-;28924:23;:21;:23::i;:::-;:55;;;;:41;;;;;:55;;;;;:194;-1:-1:-1;;;;;29379:45:46;;29329:23;:21;:23::i;:::-;-1:-1:-1;;;;;29329:46:46;;;;;;:42;;;;;:46;;;;;;:95;;;;;;;;29609:13;29605:54;;29624:35;-1:-1:-1;;;29624:7:46;:35::i;:::-;29688:23;;;:12;29770:662;30180:7;30137:8;30093:1;-1:-1:-1;;;;;;;;;;;29966:1:46;29902;29872:351;30414:9;;:16;;;;29770:662;;30486:3;30446:23;:21;:23::i;:::-;:43;-1:-1:-1;30509:60:46;;-1:-1:-1;;10376:240:384;305:703:294;361:13;578:10;574:51;;-1:-1:-1;;604:10:294;;;;;;;;;;;;-1:-1:-1;;;604:10:294;;;;;305:703::o;574:51::-;649:5;634:12;688:75;695:9;;688:75;;720:8;;;;:::i;:::-;;-1:-1:-1;742:10:294;;-1:-1:-1;750:2:294;742:10;;:::i;:::-;;;688:75;;;772:19;804:6;-1:-1:-1;;;;;794:17:294;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:17:294;;772:39;;821:150;828:10;;821:150;;854:11;864:1;854:11;;:::i;:::-;;-1:-1:-1;922:10:294;930:2;922:5;:10;:::i;:::-;909:24;;:2;:24;:::i;:::-;896:39;;879:6;886;879:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;879:56:294;;;;;;;;-1:-1:-1;949:11:294;958:2;949:11;;:::i;:::-;;;821:150;;505:3026:231;563:13;795:4;:11;810:1;795:16;791:31;;;-1:-1:-1;;813:9:231;;;;;;;;;-1:-1:-1;813:9:231;;;505:3026::o;791:31::-;872:19;894:6;;;;;;;;;;;;;;;;;872:28;;1303:20;1362:1;1343:4;:11;1357:1;1343:15;;;;:::i;:::-;1342:21;;;;:::i;:::-;1337:27;;:1;:27;:::i;:::-;-1:-1:-1;;;;;1326:39:231;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1326:39:231;;1303:62;;1540:1;1533:5;1529:13;1641:2;1633:6;1629:15;1748:4;1799;1793:11;1787:4;1783:22;1711:1403;1832:6;1823:7;1820:19;1711:1403;;;1934:1;1925:7;1921:15;1910:26;;1972:7;1966:14;2615:4;2607:5;2603:2;2599:14;2595:25;2585:8;2581:40;2575:47;2564:9;2556:67;2668:1;2657:9;2653:17;2640:30;;2758:4;2750:5;2746:2;2742:14;2738:25;2728:8;2724:40;2718:47;2707:9;2699:67;2811:1;2800:9;2796:17;2783:30;;2900:4;2892:5;2889:1;2885:13;2881:24;2871:8;2867:39;2861:46;2850:9;2842:66;2953:1;2942:9;2938:17;2925:30;;3034:4;3027:5;3023:16;3013:8;3009:31;3003:38;2992:9;2984:58;;3087:1;3076:9;3072:17;3059:30;;1711:1403;;;1715:104;;3272:1;3265:4;3259:11;3255:19;3292:1;3287:120;;;;3425:1;3420:71;;;;3248:243;;3287:120;3339:4;3335:1;3324:9;3320:17;3312:32;3388:4;3384:1;3373:9;3369:17;3361:32;3287:120;;3420:71;3472:4;3468:1;3457:9;3453:17;3445:32;3248:243;-1:-1:-1;3518:6:231;;505:3026;-1:-1:-1;;;;;505:3026:231:o;3241:706:228:-;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:228;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:228;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:228;;42927:2:640;3845:85:228;;;42909:21:640;42966:2;42946:18;;;42939:30;43005:34;42985:18;;;42978:62;-1:-1:-1;;;43056:18:640;;;43049:40;43106:19;;3845:85:228;42725:406:640;3827:223:290;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;-1:-1:-1;;;;;1427:19:290;;;5194:60;;;;-1:-1:-1;;;5194:60:290;;43745:2:640;5194:60:290;;;43727:21:640;43784:2;43764:18;;;43757:30;43823:31;43803:18;;;43796:59;43872:18;;5194:60:290;43543:353:640;5194:60:290;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:290;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;7675;7703:7;7699:516;;;-1:-1:-1;7733:10:290;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:290;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:640;-1:-1:-1;;;;;;88:32:640;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;688:258::-;760:1;770:113;784:6;781:1;778:13;770:113;;;860:11;;;854:18;841:11;;;834:39;806:2;799:10;770:113;;;901:6;898:1;895:13;892:48;;;-1:-1:-1;;936:1:640;918:16;;911:27;688:258::o;951:269::-;1004:3;1042:5;1036:12;1069:6;1064:3;1057:19;1085:63;1141:6;1134:4;1129:3;1125:14;1118:4;1111:5;1107:16;1085:63;:::i;:::-;1202:2;1181:15;-1:-1:-1;;1177:29:640;1168:39;;;;1209:4;1164:50;;951:269;-1:-1:-1;;951:269:640:o;1225:231::-;1374:2;1363:9;1356:21;1337:4;1394:56;1446:2;1435:9;1431:18;1423:6;1394:56;:::i;1461:203::-;-1:-1:-1;;;;;1625:32:640;;;;1607:51;;1595:2;1580:18;;1461:203::o;1669:180::-;1728:6;1781:2;1769:9;1760:7;1756:23;1752:32;1749:52;;;1797:1;1794;1787:12;1749:52;-1:-1:-1;1820:23:640;;1669:180;-1:-1:-1;1669:180:640:o;1854:131::-;-1:-1:-1;;;;;1929:31:640;;1919:42;;1909:70;;1975:1;1972;1965:12;1990:315;2058:6;2066;2119:2;2107:9;2098:7;2094:23;2090:32;2087:52;;;2135:1;2132;2125:12;2087:52;2174:9;2161:23;2193:31;2218:5;2193:31;:::i;:::-;2243:5;2295:2;2280:18;;;;2267:32;;-1:-1:-1;;;1990:315:640:o;2310:247::-;2369:6;2422:2;2410:9;2401:7;2397:23;2393:32;2390:52;;;2438:1;2435;2428:12;2390:52;2477:9;2464:23;2496:31;2521:5;2496:31;:::i;2929:163::-;2996:5;3041:3;3032:6;3027:3;3023:16;3019:26;3016:46;;;3058:1;3055;3048:12;3016:46;-1:-1:-1;3080:6:640;2929:163;-1:-1:-1;2929:163:640:o;3097:854::-;3236:6;3244;3252;3260;3268;3276;3329:3;3317:9;3308:7;3304:23;3300:33;3297:53;;;3346:1;3343;3336:12;3297:53;3382:9;3369:23;3359:33;;3442:2;3431:9;3427:18;3414:32;3455:31;3480:5;3455:31;:::i;:::-;3505:5;-1:-1:-1;3557:2:640;3542:18;;3529:32;;-1:-1:-1;3613:2:640;3598:18;;3585:32;3626:33;3585:32;3626:33;:::i;:::-;3678:7;-1:-1:-1;3732:3:640;3717:19;;3704:33;;-1:-1:-1;3788:3:640;3773:19;;3760:33;-1:-1:-1;;;;;3805:30:640;;3802:50;;;3848:1;3845;3838:12;3802:50;3871:74;3937:7;3928:6;3917:9;3913:22;3871:74;:::i;:::-;3861:84;;;3097:854;;;;;;;;:::o;3956:456::-;4033:6;4041;4049;4102:2;4090:9;4081:7;4077:23;4073:32;4070:52;;;4118:1;4115;4108:12;4070:52;4157:9;4144:23;4176:31;4201:5;4176:31;:::i;:::-;4226:5;-1:-1:-1;4283:2:640;4268:18;;4255:32;4296:33;4255:32;4296:33;:::i;:::-;3956:456;;4348:7;;-1:-1:-1;;;4402:2:640;4387:18;;;;4374:32;;3956:456::o;4417:248::-;4485:6;4493;4546:2;4534:9;4525:7;4521:23;4517:32;4514:52;;;4562:1;4559;4552:12;4514:52;-1:-1:-1;;4585:23:640;;;4655:2;4640:18;;;4627:32;;-1:-1:-1;4417:248:640:o;4670:274::-;-1:-1:-1;;;;;4862:32:640;;;;4844:51;;4926:2;4911:18;;4904:34;4832:2;4817:18;;4670:274::o;4949:118::-;5035:5;5028:13;5021:21;5014:5;5011:32;5001:60;;5057:1;5054;5047:12;5072:241;5128:6;5181:2;5169:9;5160:7;5156:23;5152:32;5149:52;;;5197:1;5194;5187:12;5149:52;5236:9;5223:23;5255:28;5277:5;5255:28;:::i;5608:443::-;5715:6;5723;5776:2;5764:9;5755:7;5751:23;5747:32;5744:52;;;5792:1;5789;5782:12;5744:52;5832:9;5819:23;-1:-1:-1;;;;;5857:6:640;5854:30;5851:50;;;5897:1;5894;5887:12;5851:50;5920:74;5986:7;5977:6;5966:9;5962:22;5920:74;:::i;:::-;5910:84;6041:2;6026:18;;;;6013:32;;-1:-1:-1;;;;5608:443:640:o;6056:837::-;6251:2;6240:9;6233:21;6296:6;6290:13;6285:2;6274:9;6270:18;6263:41;6358:2;6350:6;6346:15;6340:22;6335:2;6324:9;6320:18;6313:50;6417:2;6409:6;6405:15;6399:22;6394:2;6383:9;6379:18;6372:50;6477:2;6469:6;6465:15;6459:22;6453:3;6442:9;6438:19;6431:51;6537:3;6529:6;6525:16;6519:23;6513:3;6502:9;6498:19;6491:52;6598:3;6590:6;6586:16;6580:23;6574:3;6563:9;6559:19;6552:52;6687:1;6683;6678:3;6674:11;6670:19;6663:3;6655:6;6651:16;6645:23;6641:49;6635:3;6624:9;6620:19;6613:78;6214:4;6738:3;6730:6;6726:16;6720:23;6762:6;6804:2;6799;6788:9;6784:18;6777:30;;6824:63;6882:3;6871:9;6867:19;6853:12;6824:63;:::i;6898:785::-;7025:6;7033;7041;7094:2;7082:9;7073:7;7069:23;7065:32;7062:52;;;7110:1;7107;7100:12;7062:52;7150:9;7137:23;-1:-1:-1;;;;;7220:2:640;7212:6;7209:14;7206:34;;;7236:1;7233;7226:12;7206:34;7274:6;7263:9;7259:22;7249:32;;7319:7;7312:4;7308:2;7304:13;7300:27;7290:55;;7341:1;7338;7331:12;7290:55;7381:2;7368:16;7407:2;7399:6;7396:14;7393:34;;;7423:1;7420;7413:12;7393:34;7478:7;7471:4;7461:6;7458:1;7454:14;7450:2;7446:23;7442:34;7439:47;7436:67;;;7499:1;7496;7489:12;7436:67;7530:4;7522:13;;;;-1:-1:-1;7554:6:640;-1:-1:-1;;7595:20:640;;7582:34;7625:28;7582:34;7625:28;:::i;:::-;7672:5;7662:15;;;6898:785;;;;;:::o;7688:632::-;7859:2;7911:21;;;7981:13;;7884:18;;;8003:22;;;7830:4;;7859:2;8082:15;;;;8056:2;8041:18;;;7830:4;8125:169;8139:6;8136:1;8133:13;8125:169;;;8200:13;;8188:26;;8269:15;;;;8234:12;;;;8161:1;8154:9;8125:169;;8325:127;8386:10;8381:3;8377:20;8374:1;8367:31;8417:4;8414:1;8407:15;8441:4;8438:1;8431:15;8457:248;8524:2;8518:9;8566:4;8554:17;;-1:-1:-1;;;;;8586:34:640;;8622:22;;;8583:62;8580:88;;;8648:18;;:::i;:::-;8684:2;8677:22;8457:248;:::o;8710:718::-;8752:5;8805:3;8798:4;8790:6;8786:17;8782:27;8772:55;;8823:1;8820;8813:12;8772:55;8859:6;8846:20;-1:-1:-1;;;;;8922:2:640;8918;8915:10;8912:36;;;8928:18;;:::i;:::-;9003:2;8997:9;8971:2;9057:13;;-1:-1:-1;;9053:22:640;;;9077:2;9049:31;9045:40;9033:53;;;9101:18;;;9121:22;;;9098:46;9095:72;;;9147:18;;:::i;:::-;9187:10;9183:2;9176:22;9222:2;9214:6;9207:18;9268:3;9261:4;9256:2;9248:6;9244:15;9240:26;9237:35;9234:55;;;9285:1;9282;9275:12;9234:55;9349:2;9342:4;9334:6;9330:17;9323:4;9315:6;9311:17;9298:54;9396:1;9389:4;9384:2;9376:6;9372:15;9368:26;9361:37;9416:6;9407:15;;;;;;8710:718;;;;:::o;9433:1005::-;9581:6;9589;9597;9605;9613;9621;9674:3;9662:9;9653:7;9649:23;9645:33;9642:53;;;9691:1;9688;9681:12;9642:53;9730:9;9717:23;9749:31;9774:5;9749:31;:::i;:::-;9799:5;-1:-1:-1;9851:2:640;9836:18;;9823:32;;-1:-1:-1;9907:2:640;9892:18;;9879:32;9920:33;9879:32;9920:33;:::i;:::-;9972:7;-1:-1:-1;10026:2:640;10011:18;;9998:32;;-1:-1:-1;10081:3:640;10066:19;;10053:33;-1:-1:-1;;;;;10135:14:640;;;10132:34;;;10162:1;10159;10152:12;10132:34;10185:74;10251:7;10242:6;10231:9;10227:22;10185:74;:::i;:::-;10175:84;;10312:3;10301:9;10297:19;10284:33;10268:49;;10342:2;10332:8;10329:16;10326:36;;;10358:1;10355;10348:12;10326:36;;10381:51;10424:7;10413:8;10402:9;10398:24;10381:51;:::i;10443:321::-;10512:6;10565:2;10553:9;10544:7;10540:23;10536:32;10533:52;;;10581:1;10578;10571:12;10533:52;10621:9;10608:23;-1:-1:-1;;;;;10646:6:640;10643:30;10640:50;;;10686:1;10683;10676:12;10640:50;10709:49;10750:7;10741:6;10730:9;10726:22;10709:49;:::i;10769:383::-;10846:6;10854;10862;10915:2;10903:9;10894:7;10890:23;10886:32;10883:52;;;10931:1;10928;10921:12;10883:52;10970:9;10957:23;10989:31;11014:5;10989:31;:::i;:::-;11039:5;11091:2;11076:18;;11063:32;;-1:-1:-1;11142:2:640;11127:18;;;11114:32;;10769:383;-1:-1:-1;;;10769:383:640:o;11157:::-;11234:6;11242;11250;11303:2;11291:9;11282:7;11278:23;11274:32;11271:52;;;11319:1;11316;11309:12;11271:52;11355:9;11342:23;11332:33;;11415:2;11404:9;11400:18;11387:32;11428:31;11453:5;11428:31;:::i;11545:382::-;11610:6;11618;11671:2;11659:9;11650:7;11646:23;11642:32;11639:52;;;11687:1;11684;11677:12;11639:52;11726:9;11713:23;11745:31;11770:5;11745:31;:::i;:::-;11795:5;-1:-1:-1;11852:2:640;11837:18;;11824:32;11865:30;11824:32;11865:30;:::i;:::-;11914:7;11904:17;;;11545:382;;;;;:::o;11932:315::-;12000:6;12008;12061:2;12049:9;12040:7;12036:23;12032:32;12029:52;;;12077:1;12074;12067:12;12029:52;12113:9;12100:23;12090:33;;12173:2;12162:9;12158:18;12145:32;12186:31;12211:5;12186:31;:::i;12252:665::-;12347:6;12355;12363;12371;12424:3;12412:9;12403:7;12399:23;12395:33;12392:53;;;12441:1;12438;12431:12;12392:53;12480:9;12467:23;12499:31;12524:5;12499:31;:::i;:::-;12549:5;-1:-1:-1;12606:2:640;12591:18;;12578:32;12619:33;12578:32;12619:33;:::i;:::-;12671:7;-1:-1:-1;12725:2:640;12710:18;;12697:32;;-1:-1:-1;12780:2:640;12765:18;;12752:32;-1:-1:-1;;;;;12796:30:640;;12793:50;;;12839:1;12836;12829:12;12793:50;12862:49;12903:7;12894:6;12883:9;12879:22;12862:49;:::i;:::-;12852:59;;;12252:665;;;;;;;:::o;13702:388::-;13770:6;13778;13831:2;13819:9;13810:7;13806:23;13802:32;13799:52;;;13847:1;13844;13837:12;13799:52;13886:9;13873:23;13905:31;13930:5;13905:31;:::i;:::-;13955:5;-1:-1:-1;14012:2:640;13997:18;;13984:32;14025:33;13984:32;14025:33;:::i;14095:1865::-;14315:4;14344:2;14384;14373:9;14369:18;14414:2;14403:9;14396:21;14437:6;14472;14466:13;14503:6;14495;14488:22;14529:2;14519:12;;14562:2;14551:9;14547:18;14540:25;;14624:2;14614:6;14611:1;14607:14;14596:9;14592:30;14588:39;14662:2;14654:6;14650:15;14683:1;14693:1238;14707:6;14704:1;14701:13;14693:1238;;;-1:-1:-1;;14802:22:640;;;14798:31;;14786:44;;14853:13;;14894:9;;14879:25;;14943:11;;14937:18;14975:15;;;14968:27;;;15030:19;;15072:4;15096:15;;;15089:27;;;15143:62;15200:3;15188:16;;15030:19;15143:62;:::i;:::-;15129:76;;15264:2;15250:12;15246:21;15240:28;15291:2;15355;15346:6;15338;15334:19;15330:28;15325:2;15317:6;15313:15;15306:53;15386:52;15431:6;15415:14;15386:52;:::i;:::-;15372:66;;15497:2;15483:12;15479:21;15473:28;15451:50;;15563:2;15554:6;15546;15542:19;15538:28;15533:2;15525:6;15521:15;15514:53;15594:52;15639:6;15623:14;15594:52;:::i;:::-;15687:21;;15681:28;15751:19;;;15747:28;;15741:3;15729:16;;15722:54;15681:28;15580:66;-1:-1:-1;15799:52:640;;-1:-1:-1;15580:66:640;;-1:-1:-1;15681:28:640;15799:52;:::i;:::-;15909:12;;;;15789:62;-1:-1:-1;;;15874:15:640;;;;-1:-1:-1;14729:1:640;14722:9;14693:1238;;;-1:-1:-1;15948:6:640;;14095:1865;-1:-1:-1;;;;;;;;14095:1865:640:o;15965:380::-;16044:1;16040:12;;;;16087;;;16108:61;;16162:4;16154:6;16150:17;16140:27;;16108:61;16215:2;16207:6;16204:14;16184:18;16181:38;16178:161;;;16261:10;16256:3;16252:20;16249:1;16242:31;16296:4;16293:1;16286:15;16324:4;16321:1;16314:15;16350:304;-1:-1:-1;;;;;16580:15:640;;;16562:34;;16632:15;;16627:2;16612:18;;16605:43;16512:2;16497:18;;16350:304::o;16659:245::-;16726:6;16779:2;16767:9;16758:7;16754:23;16750:32;16747:52;;;16795:1;16792;16785:12;16747:52;16827:9;16821:16;16846:28;16868:5;16846:28;:::i;16909:338::-;17111:2;17093:21;;;17150:2;17130:18;;;17123:30;-1:-1:-1;;;17184:2:640;17169:18;;17162:44;17238:2;17223:18;;16909:338::o;17252:411::-;17454:2;17436:21;;;17493:2;17473:18;;;17466:30;17532:34;17527:2;17512:18;;17505:62;-1:-1:-1;;;17598:2:640;17583:18;;17576:45;17653:3;17638:19;;17252:411::o;18088:545::-;18181:4;18187:6;18247:11;18234:25;18341:2;18337:7;18326:8;18310:14;18306:29;18302:43;18282:18;18278:68;18268:96;;18360:1;18357;18350:12;18268:96;18387:33;;18439:20;;;-1:-1:-1;;;;;;18471:30:640;;18468:50;;;18514:1;18511;18504:12;18468:50;18547:4;18535:17;;-1:-1:-1;18598:1:640;18594:14;;;18578;18574:35;18564:46;;18561:66;;;18623:1;18620;18613:12;18561:66;18088:545;;;;;:::o;19444:127::-;19505:10;19500:3;19496:20;19493:1;19486:31;19536:4;19533:1;19526:15;19560:4;19557:1;19550:15;19576:128;19616:3;19647:1;19643:6;19640:1;19637:13;19634:39;;;19653:18;;:::i;:::-;-1:-1:-1;19689:9:640;;19576:128::o;20723:168::-;20763:7;20829:1;20825;20821:6;20817:14;20814:1;20811:21;20806:1;20799:9;20792:17;20788:45;20785:71;;;20836:18;;:::i;:::-;-1:-1:-1;20876:9:640;;20723:168::o;20896:127::-;20957:10;20952:3;20948:20;20945:1;20938:31;20988:4;20985:1;20978:15;21012:4;21009:1;21002:15;21028:120;21068:1;21094;21084:35;;21099:18;;:::i;:::-;-1:-1:-1;21133:9:640;;21028:120::o;21974:127::-;22035:10;22030:3;22026:20;22023:1;22016:31;22066:4;22063:1;22056:15;22090:4;22087:1;22080:15;22106:333;22207:4;22265:11;22252:25;22359:3;22355:8;22344;22328:14;22324:29;22320:44;22300:18;22296:69;22286:97;;22379:1;22376;22369:12;22286:97;22400:33;;;;;22106:333;-1:-1:-1;;22106:333:640:o;23121:522::-;23199:4;23205:6;23265:11;23252:25;23359:2;23355:7;23344:8;23328:14;23324:29;23320:43;23300:18;23296:68;23286:96;;23378:1;23375;23368:12;23286:96;23405:33;;23457:20;;;-1:-1:-1;;;;;;23489:30:640;;23486:50;;;23532:1;23529;23522:12;23486:50;23565:4;23553:17;;-1:-1:-1;23596:14:640;23592:27;;;23582:38;;23579:58;;;23633:1;23630;23623:12;23774:545;23876:2;23871:3;23868:11;23865:448;;;23912:1;23937:5;23933:2;23926:17;23982:4;23978:2;23968:19;24052:2;24040:10;24036:19;24033:1;24029:27;24023:4;24019:38;24088:4;24076:10;24073:20;24070:47;;;-1:-1:-1;24111:4:640;24070:47;24166:2;24161:3;24157:12;24154:1;24150:20;24144:4;24140:31;24130:41;;24221:82;24239:2;24232:5;24229:13;24221:82;;;24284:17;;;24265:1;24254:13;24221:82;;24495:1190;-1:-1:-1;;;;;24598:3:640;24595:27;24592:53;;;24625:18;;:::i;:::-;24654:94;24744:3;24704:38;24736:4;24730:11;24704:38;:::i;:::-;24698:4;24654:94;:::i;:::-;24774:1;24799:2;24794:3;24791:11;24816:1;24811:616;;;;25471:1;25488:3;25485:93;;;-1:-1:-1;25544:19:640;;;25531:33;25485:93;-1:-1:-1;;24452:1:640;24448:11;;;24444:24;24440:29;24430:40;24476:1;24472:11;;;24427:57;25591:78;;24784:895;;24811:616;23721:1;23714:14;;;23758:4;23745:18;;-1:-1:-1;;24847:17:640;;;24948:9;24970:229;24984:7;24981:1;24978:14;24970:229;;;25073:19;;;25060:33;25045:49;;25180:4;25165:20;;;;25133:1;25121:14;;;;25000:12;24970:229;;;24974:3;25227;25218:7;25215:16;25212:159;;;25351:1;25347:6;25341:3;25335;25332:1;25328:11;25324:21;25320:34;25316:39;25303:9;25298:3;25294:19;25281:33;25277:79;25269:6;25262:95;25212:159;;;25414:1;25408:3;25405:1;25401:11;25397:19;25391:4;25384:33;24784:895;;24495:1190;;;:::o;25690:956::-;25869:5;25856:19;25850:4;25843:33;25930:2;25923:5;25919:14;25906:28;25902:1;25896:4;25892:12;25885:50;25989:2;25982:5;25978:14;25965:28;25961:1;25955:4;25951:12;25944:50;26048:2;26041:5;26037:14;26024:28;26020:1;26014:4;26010:12;26003:50;26107:3;26100:5;26096:15;26083:29;26079:1;26073:4;26069:12;26062:51;26167:3;26160:5;26156:15;26143:29;26139:1;26133:4;26129:12;26122:51;26210:1;26204:4;26200:12;26260:3;26253:5;26249:15;26236:29;26274:33;26299:7;26274:33;:::i;:::-;26342:17;;-1:-1:-1;;;;;;26338:48:640;-1:-1:-1;;;;;26388:33:640;;;;26335:87;26316:107;;26466:66;26527:3;26516:15;;26520:5;26466:66;:::i;:::-;26541:99;26626:13;26613:11;26609:1;26603:4;26599:12;26541:99;:::i;26651:135::-;26690:3;-1:-1:-1;;26711:17:640;;26708:43;;;26731:18;;:::i;:::-;-1:-1:-1;26778:1:640;26767:13;;26651:135::o;26791:504::-;26850:5;26857:6;26917:3;26904:17;27003:2;26999:7;26988:8;26972:14;26968:29;26964:43;26944:18;26940:68;26930:96;;27022:1;27019;27012:12;26930:96;27050:33;;27154:4;27141:18;;;-1:-1:-1;27102:21:640;;-1:-1:-1;;;;;;27171:30:640;;27168:50;;;27214:1;27211;27204:12;27168:50;27264:6;27248:14;27244:27;27234:8;27230:42;27227:62;;;27285:1;27282;27275:12;27300:267;27389:6;27384:3;27377:19;27441:6;27434:5;27427:4;27422:3;27418:14;27405:43;-1:-1:-1;27493:1:640;27468:16;;;27486:4;27464:27;;;27457:38;;;;27549:2;27528:15;;;-1:-1:-1;;27524:29:640;27515:39;;;27511:50;;27300:267::o;27572:2051::-;27843:2;27895:21;;;27868:18;;;27951:22;;;27814:4;;27992:2;28010:18;;;28074:1;28070:14;;;28055:30;;28051:39;;28113:6;27814:4;;28168:1372;28184:6;28179:3;28176:15;28168:1372;;;28253:22;;;-1:-1:-1;;28249:36:640;28237:49;;28325:20;;28400:14;28396:27;;;-1:-1:-1;;28392:42:640;28368:67;;28358:95;;28449:1;28446;28439:12;28358:95;28479:31;;28567:19;;28552:35;;28610:4;28664:14;;;28651:28;28634:15;;;28627:53;28730:14;;;28717:28;28700:15;;;28693:53;28796:14;;;28783:28;28766:15;;;28759:53;28835:4;28889:14;;;28876:28;28859:15;;;28852:53;28928:4;28982:14;;;28969:28;28952:15;;;28945:53;28533:6;;29021:4;29066:14;;;29053:28;29094:33;29053:28;29094:33;:::i;:::-;-1:-1:-1;;;;;29164:33:640;29147:15;;;29140:58;29221:4;29272:54;29311:14;;;29315:5;29272:54;:::i;:::-;29238:88;;29363:2;29358;29350:6;29346:15;29339:27;29389:71;29456:2;29448:6;29444:15;29430:12;29416;29389:71;:::i;:::-;29518:12;;;;29379:81;-1:-1:-1;;;29483:15:640;;;;;-1:-1:-1;;28210:1:640;28201:11;28168:1372;;;-1:-1:-1;;;470:13:640;;463:21;29611:4;29596:20;;451:34;29557:6;-1:-1:-1;29572:45:640;;-1:-1:-1;;;400:91:640;29628:125;29668:4;29696:1;29693;29690:8;29687:34;;;29701:18;;:::i;:::-;-1:-1:-1;29738:9:640;;29628:125::o;29758:136::-;29797:3;29825:5;29815:39;;29834:18;;:::i;:::-;-1:-1:-1;;;29870:18:640;;29758:136::o;30570:251::-;30640:6;30693:2;30681:9;30672:7;30668:23;30664:32;30661:52;;;30709:1;30706;30699:12;30661:52;30741:9;30735:16;30760:31;30785:5;30760:31;:::i;30826:184::-;30896:6;30949:2;30937:9;30928:7;30924:23;30920:32;30917:52;;;30965:1;30962;30955:12;30917:52;-1:-1:-1;30988:16:640;;30826:184;-1:-1:-1;30826:184:640:o;31267:339::-;31469:2;31451:21;;;31508:2;31488:18;;;31481:30;-1:-1:-1;;;31542:2:640;31527:18;;31520:45;31597:2;31582:18;;31267:339::o;32031:1044::-;32157:9;32216:4;32208:5;32192:14;32188:26;32184:37;32181:57;;;32234:1;32231;32224:12;32181:57;32262:17;;:::i;:::-;32315:5;32302:19;-1:-1:-1;;;;;32381:2:640;32373:6;32370:14;32367:34;;;32397:1;32394;32387:12;32367:34;32426:52;32463:14;32454:6;32447:5;32443:18;32426:52;:::i;:::-;32417:7;32410:69;32528:2;32521:5;32517:14;32504:28;32488:44;;32557:2;32547:8;32544:16;32541:36;;;32573:1;32570;32563:12;32541:36;32611:54;32650:14;32639:8;32632:5;32628:20;32611:54;:::i;:::-;32606:2;32597:7;32593:16;32586:80;32715:2;32708:5;32704:14;32691:28;32675:44;;32744:2;32734:8;32731:16;32728:36;;;32760:1;32757;32750:12;32728:36;32798:54;32837:14;32826:8;32819:5;32815:20;32798:54;:::i;:::-;32793:2;32784:7;32780:16;32773:80;32902:2;32895:5;32891:14;32878:28;32862:44;;32931:2;32921:8;32918:16;32915:36;;;32947:1;32944;32937:12;32915:36;;32985:54;33024:14;33013:8;33006:5;33002:20;32985:54;:::i;:::-;32980:2;32967:16;;32960:80;-1:-1:-1;32971:7:640;32031:1044;-1:-1:-1;;32031:1044:640:o;33080:819::-;33413:3;33402:9;33395:22;33376:4;33440:63;33498:3;33487:9;33483:19;33475:6;33467;33440:63;:::i;:::-;33551:9;33543:6;33539:22;33534:2;33523:9;33519:18;33512:50;33585;33628:6;33620;33612;33585:50;:::i;:::-;33571:64;;33683:9;33675:6;33671:22;33666:2;33655:9;33651:18;33644:50;33717;33760:6;33752;33744;33717:50;:::i;:::-;33703:64;;33815:9;33807:6;33803:22;33798:2;33787:9;33783:18;33776:50;33843;33886:6;33878;33870;33843:50;:::i;:::-;33835:58;33080:819;-1:-1:-1;;;;;;;;;;;33080:819:640:o;34568:405::-;34765:2;34754:9;34747:21;34728:4;34791:56;34843:2;34832:9;34828:18;34820:6;34791:56;:::i;:::-;34895:9;34887:6;34883:22;34878:2;34867:9;34863:18;34856:50;34923:44;34960:6;34952;34923:44;:::i;:::-;34915:52;34568:405;-1:-1:-1;;;;;34568:405:640:o;34978:127::-;35039:10;35034:3;35030:20;35027:1;35020:31;35070:4;35067:1;35060:15;35094:4;35091:1;35084:15;35440:500;-1:-1:-1;;;;;35709:15:640;;;35691:34;;35761:15;;35756:2;35741:18;;35734:43;35808:2;35793:18;;35786:34;;;35856:3;35851:2;35836:18;;35829:31;;;35634:4;;35877:57;;35914:19;;35906:6;35877:57;:::i;:::-;35869:65;35440:500;-1:-1:-1;;;;;;35440:500:640:o;35945:249::-;36014:6;36067:2;36055:9;36046:7;36042:23;36038:32;36035:52;;;36083:1;36080;36073:12;36035:52;36115:9;36109:16;36134:30;36158:5;36134:30;:::i;36766:185::-;36808:3;36846:5;36840:12;36861:52;36906:6;36901:3;36894:4;36887:5;36883:16;36861:52;:::i;:::-;36929:16;;;;;36766:185;-1:-1:-1;;36766:185:640:o;36956:995::-;-1:-1:-1;;;37456:43:640;;37522:13;;37438:3;;37544:61;37522:13;37594:1;37585:11;;37578:4;37566:17;;37544:61;:::i;:::-;-1:-1:-1;;;37664:1:640;37624:16;;;37656:10;;;37649:73;37747:13;;37769:63;37747:13;37818:2;37810:11;;37803:4;37791:17;;37769:63;:::i;:::-;-1:-1:-1;;;37892:2:640;37851:17;;;;37884:11;;;37877:41;37942:2;37934:11;;36956:995;-1:-1:-1;;;;36956:995:640:o;37956:617::-;-1:-1:-1;;;38307:43:640;;38373:13;;38289:3;;38395:61;38373:13;38445:1;38436:11;;38429:4;38417:17;;38395:61;:::i;:::-;-1:-1:-1;;;38515:1:640;38475:16;;;;38507:10;;;38500:40;-1:-1:-1;38564:2:640;38556:11;;37956:617;-1:-1:-1;37956:617:640:o;38578:635::-;-1:-1:-1;;;38929:59:640;;39011:13;;38911:3;;39033:62;39011:13;39083:2;39074:12;;39067:4;39055:17;;39033:62;:::i;:::-;-1:-1:-1;;;39154:2:640;39114:16;;;;39146:11;;;39139:41;-1:-1:-1;39204:2:640;39196:11;;38578:635;-1:-1:-1;38578:635:640:o;39502:2268::-;-1:-1:-1;;;40699:45:640;;40767:13;;40681:3;;40789:62;40767:13;40839:2;40830:12;;40823:4;40811:17;;40789:62;:::i;:::-;-1:-1:-1;;;40910:2:640;40870:16;;;40902:11;;;40895:24;40944:13;;40966:63;40944:13;41015:2;41007:11;;41000:4;40988:17;;40966:63;:::i;:::-;-1:-1:-1;;;41128:2:640;41048:17;;;;41120:11;;;41113:23;;;-1:-1:-1;;;41160:2:640;41152:11;;41145:63;41233:13;;41255:63;41233:13;41304:2;41296:11;;41289:4;41277:17;;41255:63;:::i;:::-;41378:2;41337:17;;41370:11;;;41363:23;41411:13;;41433:63;41411:13;41482:2;41474:11;;41467:4;41455:17;;41433:63;:::i;:::-;-1:-1:-1;;;41556:2:640;41515:17;;;;41548:11;;;41541:80;41637:127;41667:96;41693:69;41723:38;41757:2;41749:11;;41741:6;41723:38;:::i;:::-;-1:-1:-1;;;39283:47:640;;39355:2;39346:12;;39218:146;41693:69;41685:6;41667:96;:::i;:::-;-1:-1:-1;;;39434:30:640;;39489:1;39480:11;;39369:128;41637:127;41630:134;39502:2268;-1:-1:-1;;;;;;;;;39502:2268:640:o;41775:448::-;42037:31;42032:3;42025:44;42007:3;42098:6;42092:13;42114:62;42169:6;42164:2;42159:3;42155:12;42148:4;42140:6;42136:17;42114:62;:::i;:::-;42196:16;;;;42214:2;42192:25;;41775:448;-1:-1:-1;;41775:448:640:o;42608:112::-;42640:1;42666;42656:35;;42671:18;;:::i;:::-;-1:-1:-1;42705:9:640;;42608:112::o;43901:274::-;44030:3;44068:6;44062:13;44084:53;44130:6;44125:3;44118:4;44110:6;44106:17;44084:53;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
    "claimCondition()": "d637ed59",
    "contractURI()": "e8a3d485",
    "deleteSharedMetadata(bytes32)": "1ebb2422",
    "explicitOwnershipOf(uint256)": "c23dc68f",
    "getActiveClaimConditionId()": "c68907de",
    "getAllSharedMetadata()": "fc3c2a73",
    "getApproved(uint256)": "081812fc",
    "getClaimConditionById(uint256)": "6f8934f4",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getSupplyClaimedByWallet(uint256,address)": "ad1eefc5",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isTrustedForwarder(address)": "572b6c05",
    "name()": "06fdde03",
    "nextTokenIdToClaim()": "acd083f8",
    "nextTokenIdToMint()": "3b1475a7",
    "operatorRestriction()": "504c6e01",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "74bc7db7",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOperatorRestriction(bool)": "32f0cd64",
    "setOwner(address)": "13af4035",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "setSharedMetadata((string,string,string,string),bytes32)": "696b0c1a",
    "startTokenId()": "e6798baa",
    "subscribeToRegistry(address)": "57fd8455",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "tokensOfOwner(address)": "8462151c",
    "tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
    "totalMinted()": "a2309ff8",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "23a2902b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restriction\",\"type\":\"bool\"}],\"name\":\"OperatorRestriction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"SharedMetadataDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"name\":\"SharedMetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"deleteSharedMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721AUpgradeable.TokenOwnership\",\"name\":\"ownership\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSharedMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"internalType\":\"struct ISharedMetadataBatch.SharedMetadataInfo\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"internalType\":\"struct ISharedMetadataBatch.SharedMetadataWithId[]\",\"name\":\"metadata\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyClaimedByWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorRestriction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"_conditions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_restriction\",\"type\":\"bool\"}],\"name\":\"setOperatorRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"internalType\":\"struct ISharedMetadataBatch.SharedMetadataInfo\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"setSharedMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_subscription\",\"type\":\"address\"}],\"name\":\"subscribeToRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {ERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"getActiveClaimConditionId()\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getClaimConditionById(uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getSupplyClaimedByWallet(uint256,address)\":{\"details\":\"Returns the supply claimed by claimer for a given conditionId.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"nextTokenIdToClaim()\":{\"details\":\"The next token ID of the NFT that can be claimed.\"},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {ERC721-setApprovalForAll}.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_transferFrom}.\"},\"verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"DEFAULT_ADMIN_ROLE\":{\"details\":\"Default admin role for all roles. Only accounts with this role can grant/revoke other roles.\"},\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"MINTER_ROLE\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s.\"},\"TRANSFER_ROLE\":{\"details\":\"Only TRANSFER_ROLE holders can have tokens transferred from or to them, during restricted transfers.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"events\":{\"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"SharedMetadataDeleted(bytes32)\":{\"notice\":\"Emitted when shared metadata is deleted.\"},\"SharedMetadataUpdated(bytes32,string,string,string,string)\":{\"notice\":\"Emitted when shared metadata is lazy minted.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"deleteSharedMetadata(bytes32)\":{\"notice\":\"Delete shared metadata for NFTs\"},\"getAllSharedMetadata()\":{\"notice\":\"Get all shared metadata\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"setSharedMetadata((string,string,string,string),bytes32)\":{\"notice\":\"Set shared metadata for NFTs\"},\"totalMinted()\":{\"notice\":\"Returns the total amount of tokens minted in the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/unaudited/evolving-nfts/EvolvingNFTLogic.sol\":\"EvolvingNFTLogic\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552\",\"dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/eip/queryable/ERC721AQueryableUpgradeable.sol\":{\"keccak256\":\"0xcea59e91a24bd3d1f96e7a2d55f16975c73d05c27958d83cfdb9e4d32af9f31a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55aa2f46ac5c44440475284305a3428d404313560d688783e6bc7e2b2183fbec\",\"dweb:/ipfs/QmTTq6SJ2yZrpsqshztataPDa4Jp9KhfKwRVMUR3eJLtrC\"]},\"contracts/eip/queryable/ERC721AStorage.sol\":{\"keccak256\":\"0x5703e46ac0beec3d3e64e5cc9fa8841a9860d375777515fe341ade8c3dd2418a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8949a575710a700da1c9753ead62b1b98a5cceb446cd13a5271e94f557071760\",\"dweb:/ipfs/QmPRMyXzfHDom2Pfn5aQJJsA4AsojZBmsiDk2fNdtLW5yS\"]},\"contracts/eip/queryable/ERC721AUpgradeable.sol\":{\"keccak256\":\"0xec0039115e836191bd350b6d5e4781b27cbe85bfed9e4009b6bf891addfb6291\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e69d0987ba4390bf21bdc6e149ad5d3c1b06894418c723a42575327a4edbc8ac\",\"dweb:/ipfs/QmPfUAP2NNR8kuQkSAbrBDPEyEKsUXLgwQoq9H5i5RRBhL\"]},\"contracts/eip/queryable/ERC721A__Initializable.sol\":{\"keccak256\":\"0x91d642fafae97248c4da7e8e4d861af2f52bdf19abadd9bbd337226439208146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b018641078c2cce6629f097b9824b5fbf9f1ba8c7b95de92467997a4c9831d5\",\"dweb:/ipfs/QmP4G7zZmwyxp3awVJtdPzLQ77MY6wNe6CBfjfkfQJkdLZ\"]},\"contracts/eip/queryable/ERC721A__InitializableStorage.sol\":{\"keccak256\":\"0x2bc417d73b72ea83a2952fe8da3fa4cc96a12fdb8fc3d4ee7cf8639ad5f39b43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29e4dd2c81f14dba0525f55e81718da757c1e60d6b74bc33964d185d1abb051c\",\"dweb:/ipfs/QmcywxZ2UPRTbQYgNKpMjt43TC9hYbGnAnX2atMrVqQsZ9\"]},\"contracts/eip/queryable/IERC721AQueryableUpgradeable.sol\":{\"keccak256\":\"0x8ed8602663a08364759d98051c6c8f872bd056e84e8901bbb05bcd7f823d390f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ef76d5d5955157fa01116cd735c88181b954f57180662db3afa01d19611799a\",\"dweb:/ipfs/QmTXSaJdYuA9RFSSBibEycJ3sqLAkC8uQGTEkeYHcyBTYd\"]},\"contracts/eip/queryable/IERC721AUpgradeable.sol\":{\"keccak256\":\"0xa8e2bf92476033e48df3911783487b46bcd20f6490a6fdc8c93ca7a0e94bca20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e9c32378e93dc798ff46d6679313fa3a0fbb1be1afd6fa2bef0d1417a77d5c8\",\"dweb:/ipfs/QmVqTn3xKbiUaUyRweDj64r4JDB4RhcMRxpdwc76jcA5gK\"]},\"contracts/extension/DefaultOperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0xbc4433257d90e055dbc4ae1d1e7c08e9ffd37a8ef45a5b9b81b22ae8ca603f29\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://791826c7fcdeccbdfcf5812363d2e239c116bc2f3eaf710820d36f76fb847e49\",\"dweb:/ipfs/QmeSyE4Z5ZAyo9t92YWd69pmAp1riyA35JDY4SmNuLVX9U\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/OperatorFilterToggle.sol\":{\"keccak256\":\"0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac\",\"dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA\"]},\"contracts/extension/OperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0xfad890de90b24aeba9ae86cf09ff09b08a6517bdc290b46703bd05b7298ec638\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://9261a7c5d33b1b97a4a470f8d3df7033c2da163e9a5c990746c52ea3af6b763b\",\"dweb:/ipfs/QmXuHJSNnmidTy4HfdK3SeiHni2xLVe8KaR5CdtuhHXDub\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDrop.sol\":{\"keccak256\":\"0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093\",\"dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34\",\"dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg\"]},\"contracts/extension/interface/IOperatorFilterToggle.sol\":{\"keccak256\":\"0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674\",\"dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/extension/interface/IRulesEngine.sol\":{\"keccak256\":\"0xca77d25c51f2f95533972c33e2e63ba5de8e1180e97bcaae526960e56c88a7c2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dae4fd3944b82df9ed11234039a4713c73891b6fe4120de268ca6280963dd8fa\",\"dweb:/ipfs/QmaA23UuRXTAcu2GiQecbeHHCKLgFvzH5RF6wrZmuicMD7\"]},\"contracts/extension/interface/ISharedMetadataBatch.sol\":{\"keccak256\":\"0x9b122c8c7445dde2c8565c43481bcb24960b1b13a8f82f7dc04b791956e27b86\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://ef9dce42a5d29f9b17323db6209f509423b549db24f414c99526620f7b8ed349\",\"dweb:/ipfs/QmeyjTfAdkHz1g4aAjJyz7d9VMHDdCihqaxLQmM9MkE8Xr\"]},\"contracts/extension/upgradeable/ContractMetadata.sol\":{\"keccak256\":\"0x93f8793291ab833930046db54aefb97749a2a59b35eb64e2a765c565dd7d553c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39827a9ffd5a684607a43ea3591d46ce4a256b7a73851d10cc90d898bc3b9463\",\"dweb:/ipfs/QmSt8AmxU8BLCmn1suJo4Q5nPjT77LXqkCvVwii3uahCWr\"]},\"contracts/extension/upgradeable/Drop.sol\":{\"keccak256\":\"0x0dbdcec17c40baace8ebbe237375e9bdf6298a1df8da8d071ab726717079c4ee\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://94606f26302ed760d44171de5f6c08f10fec8badd8b04d090f269d91e35079ac\",\"dweb:/ipfs/QmdCA8WontjNe8heQLDd6U3z56UondSvzFT92UdYP7KUVE\"]},\"contracts/extension/upgradeable/Ownable.sol\":{\"keccak256\":\"0xab380d057f59ff2dcf3df8d8f8d62085217402da2e78dcfe703c8fd6c5ebccd2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e0ef120b373cc819f4aa0443897c19c036b1ad787a58a69deafcfdb14d74b865\",\"dweb:/ipfs/QmdmazJLCUsGC4pru4165V1Vc3WbSG5qbL9ZfGgab4q46n\"]},\"contracts/extension/upgradeable/Permissions.sol\":{\"keccak256\":\"0x4fd1e41f24b6c2a04c47f6fd5d6a6a8bf7f72b813cbc202fcf01ce70977a87df\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://00b8f085918fe25fcf41c0f8c9e1c94e54337dcaeefe7708dd793e4a7cfb64f6\",\"dweb:/ipfs/QmYDnhfxd4561bPH2M3sHWSYk5fqXxHqxwmFCANiP9aR88\"]},\"contracts/extension/upgradeable/PrimarySale.sol\":{\"keccak256\":\"0xdedcef434e7c5b35760fcdf6dd6fc5ec809c46dc96a10319a78394d88f3c2e37\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bce298da5b366496aa3a9bb791eee639be2fb90992404ab32ebade09af077a62\",\"dweb:/ipfs/QmQE4zXBFkLoPVujKLPJVJNVLKShoqGadqERKZ2naW4Ae1\"]},\"contracts/extension/upgradeable/Royalty.sol\":{\"keccak256\":\"0x741592aa926cbfe9a86b5e12166c09061b9c84d9c1b9bd0086743f3511b9e69f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://386690d62e6dcae94386feca74f9d7508c24981a7112ff8a519b0d2ee1f40645\",\"dweb:/ipfs/QmcF2HEPbgvB43M1WyBbUgMWqcKPirxhaWmFHKATsk7jeb\"]},\"contracts/extension/upgradeable/RulesEngine.sol\":{\"keccak256\":\"0xca8b6141f0752720b80eefd4fe8249a1024fd5dbb2a438b5f77c12d9e1303f41\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ac1173a18f96e6daeecc5b2deef9f8166c78524bef1f23cd2803f89d692f79b9\",\"dweb:/ipfs/QmSG8jTUu8SHhKyfVqWQ4jTk2Js4MeX1VnD3uTmSpVMQj1\"]},\"contracts/extension/upgradeable/SharedMetadataBatch.sol\":{\"keccak256\":\"0x4eedc442d395ec4fa669ac97c51e6ea2a1168834b5bd15e69603be6e0381112c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://500c85505b01aa74a28be4bf723b67b97d315591f93dfe058c737325f5ba21e9\",\"dweb:/ipfs/QmYfRsYnMEUg3f4KVxcShtVKHEfGsohtqQCS5RrhEGQ3hA\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/external-deps/openzeppelin/utils/Base64.sol\":{\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96\",\"dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ\"]},\"contracts/external-deps/openzeppelin/utils/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/external-deps/openzeppelin/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf\",\"dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7\"]},\"contracts/lib/NFTMetadataRendererLib.sol\":{\"keccak256\":\"0x9e12205ebe6fb7d2ea3fdc57e4e7e8b0c859a7907ed4ea9d912133b67c0eee75\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://530f58f9b6861d1d8c33b3387fdab0f495bdc95742319ea563f1e5902e9080e1\",\"dweb:/ipfs/QmP8yDzk468awMtEaB8yyN9q74U2tv3fLQy6QC9iraQjxF\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/prebuilts/unaudited/evolving-nfts/EvolvingNFTLogic.sol\":{\"keccak256\":\"0xa640ffe017ec5f5185ffe67db4da3b35973d0b6f990384312366a57f3160ac95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c3c2df48dbe7d461a3ab0f09ccc2c198dbb7612044dc4f879fc70269af440176\",\"dweb:/ipfs/QmQt1GUe8AXmqQQHv75xcdUwzgWQYRZtKPe2qZ1A57MXXf\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol\":{\"keccak256\":\"0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c\",\"dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidQueryRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintERC2309QuantityExceedsLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OperatorNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnershipNotInitializedForExtraData"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "claimConditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConsecutiveTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "restriction",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRestriction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SharedMetadataDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "imageURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "animationURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SharedMetadataUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimConditionIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_id",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteSharedMetadata"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "explicitOwnershipOf",
          "outputs": [
            {
              "internalType": "struct IERC721AUpgradeable.TokenOwnership",
              "name": "ownership",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "startTimestamp",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "burned",
                  "type": "bool"
                },
                {
                  "internalType": "uint24",
                  "name": "extraData",
                  "type": "uint24"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveClaimConditionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllSharedMetadata",
          "outputs": [
            {
              "internalType": "struct ISharedMetadataBatch.SharedMetadataWithId[]",
              "name": "metadata",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct ISharedMetadataBatch.SharedMetadataInfo",
                  "name": "metadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "string",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "description",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "imageURI",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "animationURI",
                      "type": "string"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimConditionById",
          "outputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "supplyClaimedByWallet",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorRestriction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "_conditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_restriction",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorRestriction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISharedMetadataBatch.SharedMetadataInfo",
              "name": "metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "imageURI",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "animationURI",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "_id",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSharedMetadata"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "startTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_subscription",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "subscribeToRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensOfOwner",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stop",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensOfOwnerIn",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalMinted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {ERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in `owner`'s account."
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "explicitOwnershipOf(uint256)": {
            "details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
          },
          "getActiveClaimConditionId()": {
            "details": "At any given moment, returns the uid for the active claim condition."
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "getClaimConditionById(uint256)": {
            "details": "Returns the claim condition at the given uid."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getSupplyClaimedByWallet(uint256,address)": {
            "details": "Returns the supply claimed by claimer for a given conditionId."
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
          },
          "name()": {
            "details": "Returns the token collection name."
          },
          "nextTokenIdToClaim()": {
            "details": "The next token ID of the NFT that can be claimed."
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {ERC721-setApprovalForAll}."
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "Returns the token collection symbol."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "tokensOfOwner(address)": {
            "details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
          },
          "tokensOfOwnerIn(address,uint256,uint256)": {
            "details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
          },
          "totalSupply()": {
            "details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {ERC721-_transferFrom}."
          },
          "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "deleteSharedMetadata(bytes32)": {
            "notice": "Delete shared metadata for NFTs"
          },
          "getAllSharedMetadata()": {
            "notice": "Get all shared metadata"
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "setSharedMetadata((string,string,string,string),bytes32)": {
            "notice": "Set shared metadata for NFTs"
          },
          "totalMinted()": {
            "notice": "Returns the total amount of tokens minted in the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/unaudited/evolving-nfts/EvolvingNFTLogic.sol": "EvolvingNFTLogic"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e",
        "urls": [
          "bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552",
          "dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AQueryableUpgradeable.sol": {
        "keccak256": "0xcea59e91a24bd3d1f96e7a2d55f16975c73d05c27958d83cfdb9e4d32af9f31a",
        "urls": [
          "bzz-raw://55aa2f46ac5c44440475284305a3428d404313560d688783e6bc7e2b2183fbec",
          "dweb:/ipfs/QmTTq6SJ2yZrpsqshztataPDa4Jp9KhfKwRVMUR3eJLtrC"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AStorage.sol": {
        "keccak256": "0x5703e46ac0beec3d3e64e5cc9fa8841a9860d375777515fe341ade8c3dd2418a",
        "urls": [
          "bzz-raw://8949a575710a700da1c9753ead62b1b98a5cceb446cd13a5271e94f557071760",
          "dweb:/ipfs/QmPRMyXzfHDom2Pfn5aQJJsA4AsojZBmsiDk2fNdtLW5yS"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AUpgradeable.sol": {
        "keccak256": "0xec0039115e836191bd350b6d5e4781b27cbe85bfed9e4009b6bf891addfb6291",
        "urls": [
          "bzz-raw://e69d0987ba4390bf21bdc6e149ad5d3c1b06894418c723a42575327a4edbc8ac",
          "dweb:/ipfs/QmPfUAP2NNR8kuQkSAbrBDPEyEKsUXLgwQoq9H5i5RRBhL"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721A__Initializable.sol": {
        "keccak256": "0x91d642fafae97248c4da7e8e4d861af2f52bdf19abadd9bbd337226439208146",
        "urls": [
          "bzz-raw://1b018641078c2cce6629f097b9824b5fbf9f1ba8c7b95de92467997a4c9831d5",
          "dweb:/ipfs/QmP4G7zZmwyxp3awVJtdPzLQ77MY6wNe6CBfjfkfQJkdLZ"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721A__InitializableStorage.sol": {
        "keccak256": "0x2bc417d73b72ea83a2952fe8da3fa4cc96a12fdb8fc3d4ee7cf8639ad5f39b43",
        "urls": [
          "bzz-raw://29e4dd2c81f14dba0525f55e81718da757c1e60d6b74bc33964d185d1abb051c",
          "dweb:/ipfs/QmcywxZ2UPRTbQYgNKpMjt43TC9hYbGnAnX2atMrVqQsZ9"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/IERC721AQueryableUpgradeable.sol": {
        "keccak256": "0x8ed8602663a08364759d98051c6c8f872bd056e84e8901bbb05bcd7f823d390f",
        "urls": [
          "bzz-raw://5ef76d5d5955157fa01116cd735c88181b954f57180662db3afa01d19611799a",
          "dweb:/ipfs/QmTXSaJdYuA9RFSSBibEycJ3sqLAkC8uQGTEkeYHcyBTYd"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/IERC721AUpgradeable.sol": {
        "keccak256": "0xa8e2bf92476033e48df3911783487b46bcd20f6490a6fdc8c93ca7a0e94bca20",
        "urls": [
          "bzz-raw://3e9c32378e93dc798ff46d6679313fa3a0fbb1be1afd6fa2bef0d1417a77d5c8",
          "dweb:/ipfs/QmVqTn3xKbiUaUyRweDj64r4JDB4RhcMRxpdwc76jcA5gK"
        ],
        "license": "MIT"
      },
      "contracts/extension/DefaultOperatorFiltererUpgradeable.sol": {
        "keccak256": "0xbc4433257d90e055dbc4ae1d1e7c08e9ffd37a8ef45a5b9b81b22ae8ca603f29",
        "urls": [
          "bzz-raw://791826c7fcdeccbdfcf5812363d2e239c116bc2f3eaf710820d36f76fb847e49",
          "dweb:/ipfs/QmeSyE4Z5ZAyo9t92YWd69pmAp1riyA35JDY4SmNuLVX9U"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFilterToggle.sol": {
        "keccak256": "0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329",
        "urls": [
          "bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac",
          "dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFiltererUpgradeable.sol": {
        "keccak256": "0xfad890de90b24aeba9ae86cf09ff09b08a6517bdc290b46703bd05b7298ec638",
        "urls": [
          "bzz-raw://9261a7c5d33b1b97a4a470f8d3df7033c2da163e9a5c990746c52ea3af6b763b",
          "dweb:/ipfs/QmXuHJSNnmidTy4HfdK3SeiHni2xLVe8KaR5CdtuhHXDub"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimConditionMultiPhase.sol": {
        "keccak256": "0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa",
        "urls": [
          "bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125",
          "dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDrop.sol": {
        "keccak256": "0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad",
        "urls": [
          "bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093",
          "dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOperatorFilterRegistry.sol": {
        "keccak256": "0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da",
        "urls": [
          "bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34",
          "dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOperatorFilterToggle.sol": {
        "keccak256": "0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1",
        "urls": [
          "bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674",
          "dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRulesEngine.sol": {
        "keccak256": "0xca77d25c51f2f95533972c33e2e63ba5de8e1180e97bcaae526960e56c88a7c2",
        "urls": [
          "bzz-raw://dae4fd3944b82df9ed11234039a4713c73891b6fe4120de268ca6280963dd8fa",
          "dweb:/ipfs/QmaA23UuRXTAcu2GiQecbeHHCKLgFvzH5RF6wrZmuicMD7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISharedMetadataBatch.sol": {
        "keccak256": "0x9b122c8c7445dde2c8565c43481bcb24960b1b13a8f82f7dc04b791956e27b86",
        "urls": [
          "bzz-raw://ef9dce42a5d29f9b17323db6209f509423b549db24f414c99526620f7b8ed349",
          "dweb:/ipfs/QmeyjTfAdkHz1g4aAjJyz7d9VMHDdCihqaxLQmM9MkE8Xr"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/upgradeable/ContractMetadata.sol": {
        "keccak256": "0x93f8793291ab833930046db54aefb97749a2a59b35eb64e2a765c565dd7d553c",
        "urls": [
          "bzz-raw://39827a9ffd5a684607a43ea3591d46ce4a256b7a73851d10cc90d898bc3b9463",
          "dweb:/ipfs/QmSt8AmxU8BLCmn1suJo4Q5nPjT77LXqkCvVwii3uahCWr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Drop.sol": {
        "keccak256": "0x0dbdcec17c40baace8ebbe237375e9bdf6298a1df8da8d071ab726717079c4ee",
        "urls": [
          "bzz-raw://94606f26302ed760d44171de5f6c08f10fec8badd8b04d090f269d91e35079ac",
          "dweb:/ipfs/QmdCA8WontjNe8heQLDd6U3z56UondSvzFT92UdYP7KUVE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Ownable.sol": {
        "keccak256": "0xab380d057f59ff2dcf3df8d8f8d62085217402da2e78dcfe703c8fd6c5ebccd2",
        "urls": [
          "bzz-raw://e0ef120b373cc819f4aa0443897c19c036b1ad787a58a69deafcfdb14d74b865",
          "dweb:/ipfs/QmdmazJLCUsGC4pru4165V1Vc3WbSG5qbL9ZfGgab4q46n"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Permissions.sol": {
        "keccak256": "0x4fd1e41f24b6c2a04c47f6fd5d6a6a8bf7f72b813cbc202fcf01ce70977a87df",
        "urls": [
          "bzz-raw://00b8f085918fe25fcf41c0f8c9e1c94e54337dcaeefe7708dd793e4a7cfb64f6",
          "dweb:/ipfs/QmYDnhfxd4561bPH2M3sHWSYk5fqXxHqxwmFCANiP9aR88"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/PrimarySale.sol": {
        "keccak256": "0xdedcef434e7c5b35760fcdf6dd6fc5ec809c46dc96a10319a78394d88f3c2e37",
        "urls": [
          "bzz-raw://bce298da5b366496aa3a9bb791eee639be2fb90992404ab32ebade09af077a62",
          "dweb:/ipfs/QmQE4zXBFkLoPVujKLPJVJNVLKShoqGadqERKZ2naW4Ae1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Royalty.sol": {
        "keccak256": "0x741592aa926cbfe9a86b5e12166c09061b9c84d9c1b9bd0086743f3511b9e69f",
        "urls": [
          "bzz-raw://386690d62e6dcae94386feca74f9d7508c24981a7112ff8a519b0d2ee1f40645",
          "dweb:/ipfs/QmcF2HEPbgvB43M1WyBbUgMWqcKPirxhaWmFHKATsk7jeb"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/RulesEngine.sol": {
        "keccak256": "0xca8b6141f0752720b80eefd4fe8249a1024fd5dbb2a438b5f77c12d9e1303f41",
        "urls": [
          "bzz-raw://ac1173a18f96e6daeecc5b2deef9f8166c78524bef1f23cd2803f89d692f79b9",
          "dweb:/ipfs/QmSG8jTUu8SHhKyfVqWQ4jTk2Js4MeX1VnD3uTmSpVMQj1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/SharedMetadataBatch.sol": {
        "keccak256": "0x4eedc442d395ec4fa669ac97c51e6ea2a1168834b5bd15e69603be6e0381112c",
        "urls": [
          "bzz-raw://500c85505b01aa74a28be4bf723b67b97d315591f93dfe058c737325f5ba21e9",
          "dweb:/ipfs/QmYfRsYnMEUg3f4KVxcShtVKHEfGsohtqQCS5RrhEGQ3hA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/Base64.sol": {
        "keccak256": "0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136",
        "urls": [
          "bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96",
          "dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0",
        "urls": [
          "bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf",
          "dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/NFTMetadataRendererLib.sol": {
        "keccak256": "0x9e12205ebe6fb7d2ea3fdc57e4e7e8b0c859a7907ed4ea9d912133b67c0eee75",
        "urls": [
          "bzz-raw://530f58f9b6861d1d8c33b3387fdab0f495bdc95742319ea563f1e5902e9080e1",
          "dweb:/ipfs/QmP8yDzk468awMtEaB8yyN9q74U2tv3fLQy6QC9iraQjxF"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/unaudited/evolving-nfts/EvolvingNFTLogic.sol": {
        "keccak256": "0xa640ffe017ec5f5185ffe67db4da3b35973d0b6f990384312366a57f3160ac95",
        "urls": [
          "bzz-raw://c3c2df48dbe7d461a3ab0f09ccc2c198dbb7612044dc4f879fc70269af440176",
          "dweb:/ipfs/QmQt1GUe8AXmqQQHv75xcdUwzgWQYRZtKPe2qZ1A57MXXf"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol": {
        "keccak256": "0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d",
        "urls": [
          "bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c",
          "dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/unaudited/evolving-nfts/EvolvingNFTLogic.sol",
    "id": 101592,
    "exportedSymbols": {
      "AddressUpgradeable": [
        157008
      ],
      "Base64": [
        49097
      ],
      "ContextUpgradeable": [
        157284
      ],
      "ContractMetadata": [
        39526
      ],
      "ContractMetadataStorage": [
        39444
      ],
      "CurrencyTransferLib": [
        64276
      ],
      "DefaultOperatorFiltererUpgradeable": [
        18344
      ],
      "Drop": [
        40552
      ],
      "DropStorage": [
        39809
      ],
      "ERC2771ContextUpgradeable": [
        46243
      ],
      "ERC721AQueryableUpgradeable": [
        15365
      ],
      "ERC721AStorage": [
        15416
      ],
      "ERC721AUpgradeable": [
        17393
      ],
      "ERC721A__IERC721ReceiverUpgradeable": [
        15437
      ],
      "ERC721A__Initializable": [
        17496
      ],
      "ERC721A__InitializableStorage": [
        17522
      ],
      "EnumerableSet": [
        50015
      ],
      "EvolvingNFTLogic": [
        101591
      ],
      "IClaimCondition": [
        33068
      ],
      "IClaimConditionMultiPhase": [
        33091
      ],
      "IContractMetadata": [
        33220
      ],
      "IDrop": [
        33356
      ],
      "IERC165": [
        14687
      ],
      "IERC165Upgradeable": [
        158501
      ],
      "IERC20": [
        14757
      ],
      "IERC2981": [
        14831
      ],
      "IERC2981Upgradeable": [
        151288
      ],
      "IERC721AQueryableUpgradeable": [
        17563
      ],
      "IERC721AUpgradeable": [
        17769
      ],
      "IMulticall": [
        33709
      ],
      "IOwnable": [
        33959
      ],
      "IPermissions": [
        34032
      ],
      "IPrimarySale": [
        34121
      ],
      "IRoyalty": [
        34185
      ],
      "ISharedMetadataBatch": [
        34460
      ],
      "IWETH": [
        55953
      ],
      "Initializable": [
        151439
      ],
      "MerkleProof": [
        64376
      ],
      "Multicall": [
        21413
      ],
      "NFTMetadataRenderer": [
        64555
      ],
      "OperatorFiltererUpgradeable": [
        21859
      ],
      "Ownable": [
        41616
      ],
      "OwnableStorage": [
        41509
      ],
      "Permissions": [
        42095
      ],
      "PermissionsStorage": [
        41652
      ],
      "PrimarySale": [
        42704
      ],
      "PrimarySaleStorage": [
        42627
      ],
      "Royalty": [
        43092
      ],
      "RoyaltyStorage": [
        42821
      ],
      "RulesEngine": [
        43604
      ],
      "SafeERC20": [
        49005
      ],
      "SharedMetadataBatch": [
        43852
      ],
      "SharedMetadataBatchStorage": [
        43637
      ],
      "StringsUpgradeable": [
        157693
      ],
      "TWAddress": [
        64850
      ],
      "TWStrings": [
        65550
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:11616:384",
    "nodes": [
      {
        "id": 100863,
        "nodeType": "PragmaDirective",
        "src": "39:24:384",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 100864,
        "nodeType": "ImportDirective",
        "src": "775:74:384",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101592,
        "sourceUnit": 157694,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 100865,
        "nodeType": "ImportDirective",
        "src": "850:80:384",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101592,
        "sourceUnit": 151289,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 100866,
        "nodeType": "ImportDirective",
        "src": "932:64:384",
        "nodes": [],
        "absolutePath": "contracts/eip/queryable/ERC721AQueryableUpgradeable.sol",
        "file": "../../../eip/queryable/ERC721AQueryableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101592,
        "sourceUnit": 15366,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 100867,
        "nodeType": "ImportDirective",
        "src": "1046:82:384",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101592,
        "sourceUnit": 46244,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 100868,
        "nodeType": "ImportDirective",
        "src": "1129:46:384",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101592,
        "sourceUnit": 64277,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 100869,
        "nodeType": "ImportDirective",
        "src": "1217:42:384",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../../../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101592,
        "sourceUnit": 21414,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 100870,
        "nodeType": "ImportDirective",
        "src": "1260:61:384",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/ContractMetadata.sol",
        "file": "../../../extension/upgradeable/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101592,
        "sourceUnit": 39527,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 100871,
        "nodeType": "ImportDirective",
        "src": "1322:52:384",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Royalty.sol",
        "file": "../../../extension/upgradeable/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101592,
        "sourceUnit": 43093,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 100872,
        "nodeType": "ImportDirective",
        "src": "1375:56:384",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/PrimarySale.sol",
        "file": "../../../extension/upgradeable/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101592,
        "sourceUnit": 42705,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 100873,
        "nodeType": "ImportDirective",
        "src": "1432:52:384",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Ownable.sol",
        "file": "../../../extension/upgradeable/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101592,
        "sourceUnit": 41617,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 100874,
        "nodeType": "ImportDirective",
        "src": "1485:56:384",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Permissions.sol",
        "file": "../../../extension/upgradeable/Permissions.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101592,
        "sourceUnit": 42096,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 100875,
        "nodeType": "ImportDirective",
        "src": "1542:49:384",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Drop.sol",
        "file": "../../../extension/upgradeable/Drop.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101592,
        "sourceUnit": 40553,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 100876,
        "nodeType": "ImportDirective",
        "src": "1592:64:384",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/SharedMetadataBatch.sol",
        "file": "../../../extension/upgradeable/SharedMetadataBatch.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101592,
        "sourceUnit": 43853,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 100878,
        "nodeType": "ImportDirective",
        "src": "1657:77:384",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/RulesEngine.sol",
        "file": "../../../extension/upgradeable/RulesEngine.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101592,
        "sourceUnit": 43605,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100877,
              "name": "RulesEngine",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43604,
              "src": "1666:11:384",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_RulesEngine_$43604_$",
                "typeString": "type(contract RulesEngine)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100879,
        "nodeType": "ImportDirective",
        "src": "1763:67:384",
        "nodes": [],
        "absolutePath": "contracts/extension/DefaultOperatorFiltererUpgradeable.sol",
        "file": "../../../extension/DefaultOperatorFiltererUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101592,
        "sourceUnit": 18345,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 101591,
        "nodeType": "ContractDefinition",
        "src": "1832:9822:384",
        "nodes": [
          {
            "id": 100900,
            "nodeType": "UsingForDirective",
            "src": "2070:37:384",
            "nodes": [],
            "libraryName": {
              "id": 100898,
              "name": "StringsUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 157693,
              "src": "2076:18:384"
            },
            "typeName": {
              "id": 100899,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2099:7:384",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 100904,
            "nodeType": "UsingForDirective",
            "src": "2112:49:384",
            "nodes": [],
            "libraryName": {
              "id": 100901,
              "name": "EnumerableSet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50015,
              "src": "2118:13:384"
            },
            "typeName": {
              "id": 100903,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 100902,
                "name": "EnumerableSet.Bytes32Set",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49621,
                "src": "2136:24:384"
              },
              "referencedDeclaration": 49621,
              "src": "2136:24:384",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32Set_$49621_storage_ptr",
                "typeString": "struct EnumerableSet.Bytes32Set"
              }
            }
          },
          {
            "id": 100908,
            "nodeType": "VariableDeclaration",
            "src": "2457:50:384",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 100905,
              "nodeType": "StructuredDocumentation",
              "src": "2351:101:384",
              "text": "@dev Default admin role for all roles. Only accounts with this role can grant/revoke other roles."
            },
            "mutability": "constant",
            "name": "DEFAULT_ADMIN_ROLE",
            "nameLocation": "2482:18:384",
            "scope": 101591,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 100906,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2457:7:384",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "30783030",
              "id": 100907,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2503:4:384",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0x00"
            },
            "visibility": "private"
          },
          {
            "id": 100914,
            "nodeType": "VariableDeclaration",
            "src": "2627:67:384",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 100909,
              "nodeType": "StructuredDocumentation",
              "src": "2513:109:384",
              "text": "@dev Only TRANSFER_ROLE holders can have tokens transferred from or to them, during restricted transfers."
            },
            "mutability": "constant",
            "name": "TRANSFER_ROLE",
            "nameLocation": "2652:13:384",
            "scope": 101591,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 100910,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2627:7:384",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5452414e534645525f524f4c45",
                  "id": 100912,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2678:15:384",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  },
                  "value": "TRANSFER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  }
                ],
                "id": 100911,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2668:9:384",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 100913,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2668:26:384",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 100920,
            "nodeType": "VariableDeclaration",
            "src": "2770:63:384",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 100915,
              "nodeType": "StructuredDocumentation",
              "src": "2700:65:384",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s."
            },
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "2795:11:384",
            "scope": 101591,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 100916,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2770:7:384",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 100918,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2819:13:384",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 100917,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2809:9:384",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 100919,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2809:24:384",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 100924,
            "nodeType": "VariableDeclaration",
            "src": "2884:41:384",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 100921,
              "nodeType": "StructuredDocumentation",
              "src": "2839:40:384",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "2909:7:384",
            "scope": 101591,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 100922,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2884:7:384",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 100923,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2919:6:384",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 101049,
            "nodeType": "FunctionDefinition",
            "src": "3173:1059:384",
            "nodes": [],
            "body": {
              "id": 101048,
              "nodeType": "Block",
              "src": "3347:885:384",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 100938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3361:18:384",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 100936,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100927,
                          "src": "3370:8:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 100935,
                        "name": "_exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16280,
                        "src": "3362:7:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 100937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3362:17:384",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100944,
                  "nodeType": "IfStatement",
                  "src": "3357:62:384",
                  "trueBody": {
                    "id": 100943,
                    "nodeType": "Block",
                    "src": "3381:38:384",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "214944",
                              "id": 100940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3402:5:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bb93743f09f74891390357bf755064ac37fe4e3bc84b64922d94e34b2182452a",
                                "typeString": "literal_string \"!ID\""
                              },
                              "value": "!ID"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bb93743f09f74891390357bf755064ac37fe4e3bc84b64922d94e34b2182452a",
                                "typeString": "literal_string \"!ID\""
                              }
                            ],
                            "id": 100939,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "3395:6:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 100941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3395:13:384",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 100942,
                        "nodeType": "ExpressionStatement",
                        "src": "3395:13:384"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    100946
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100946,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3458:5:384",
                      "nodeType": "VariableDeclaration",
                      "scope": 101048,
                      "src": "3450:13:384",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 100945,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3450:7:384",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100950,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 100948,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100927,
                        "src": "3474:8:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100947,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15893,
                      "src": "3466:7:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 100949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3466:17:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3450:33:384"
                },
                {
                  "assignments": [
                    100952
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100952,
                      "mutability": "mutable",
                      "name": "score",
                      "nameLocation": "3501:5:384",
                      "nodeType": "VariableDeclaration",
                      "scope": 101048,
                      "src": "3493:13:384",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 100951,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3493:7:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100954,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 100953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3509:1:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3493:17:384"
                },
                {
                  "assignments": [
                    100956
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100956,
                      "mutability": "mutable",
                      "name": "engine",
                      "nameLocation": "3529:6:384",
                      "nodeType": "VariableDeclaration",
                      "scope": 101048,
                      "src": "3521:14:384",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 100955,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3521:7:384",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100965,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 100960,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3558:4:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_EvolvingNFTLogic_$101591",
                                  "typeString": "contract EvolvingNFTLogic"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_EvolvingNFTLogic_$101591",
                                  "typeString": "contract EvolvingNFTLogic"
                                }
                              ],
                              "id": 100959,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3550:7:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 100958,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3550:7:384",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 100961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3550:13:384",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 100957,
                          "name": "RulesEngine",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43604,
                          "src": "3538:11:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_RulesEngine_$43604_$",
                            "typeString": "type(contract RulesEngine)"
                          }
                        },
                        "id": 100962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3538:26:384",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RulesEngine_$43604",
                          "typeString": "contract RulesEngine"
                        }
                      },
                      "id": 100963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getRulesEngineOverride",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43279,
                      "src": "3538:49:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 100964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3538:51:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3521:68:384"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 100971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 100966,
                      "name": "engine",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100956,
                      "src": "3603:6:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 100969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3621:1:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 100968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3613:7:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 100967,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3613:7:384",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 100970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3613:10:384",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3603:20:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 100994,
                    "nodeType": "Block",
                    "src": "3699:75:384",
                    "statements": [
                      {
                        "expression": {
                          "id": 100992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 100982,
                            "name": "score",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100952,
                            "src": "3713:5:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 100990,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100946,
                                "src": "3757:5:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 100986,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "3741:4:384",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_EvolvingNFTLogic_$101591",
                                          "typeString": "contract EvolvingNFTLogic"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_EvolvingNFTLogic_$101591",
                                          "typeString": "contract EvolvingNFTLogic"
                                        }
                                      ],
                                      "id": 100985,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3733:7:384",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 100984,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3733:7:384",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 100987,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3733:13:384",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 100983,
                                  "name": "RulesEngine",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 43604,
                                  "src": "3721:11:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_RulesEngine_$43604_$",
                                    "typeString": "type(contract RulesEngine)"
                                  }
                                },
                                "id": 100988,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3721:26:384",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RulesEngine_$43604",
                                  "typeString": "contract RulesEngine"
                                }
                              },
                              "id": 100989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getScore",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43209,
                              "src": "3721:35:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 100991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3721:42:384",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3713:50:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 100993,
                        "nodeType": "ExpressionStatement",
                        "src": "3713:50:384"
                      }
                    ]
                  },
                  "id": 100995,
                  "nodeType": "IfStatement",
                  "src": "3599:175:384",
                  "trueBody": {
                    "id": 100981,
                    "nodeType": "Block",
                    "src": "3625:68:384",
                    "statements": [
                      {
                        "expression": {
                          "id": 100979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 100972,
                            "name": "score",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100952,
                            "src": "3639:5:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 100977,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100946,
                                "src": "3676:5:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 100974,
                                    "name": "engine",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100956,
                                    "src": "3659:6:384",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 100973,
                                  "name": "RulesEngine",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 43604,
                                  "src": "3647:11:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_RulesEngine_$43604_$",
                                    "typeString": "type(contract RulesEngine)"
                                  }
                                },
                                "id": 100975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3647:19:384",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RulesEngine_$43604",
                                  "typeString": "contract RulesEngine"
                                }
                              },
                              "id": 100976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getScore",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43209,
                              "src": "3647:28:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 100978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3647:35:384",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3639:43:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 100980,
                        "nodeType": "ExpressionStatement",
                        "src": "3639:43:384"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    101000
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101000,
                      "mutability": "mutable",
                      "name": "ids",
                      "nameLocation": "3883:3:384",
                      "nodeType": "VariableDeclaration",
                      "scope": 101048,
                      "src": "3866:20:384",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 100998,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3866:7:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 100999,
                        "nodeType": "ArrayTypeName",
                        "src": "3866:9:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101006,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 101001,
                            "name": "_sharedMetadataBatchStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43845,
                            "src": "3889:27:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$43624_storage_ptr_$",
                              "typeString": "function () pure returns (struct SharedMetadataBatchStorage.Data storage pointer)"
                            }
                          },
                          "id": 101002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3889:29:384",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$43624_storage_ptr",
                            "typeString": "struct SharedMetadataBatchStorage.Data storage pointer"
                          }
                        },
                        "id": 101003,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ids",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43618,
                        "src": "3889:33:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Set_$49621_storage",
                          "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                        }
                      },
                      "id": 101004,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "values",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49724,
                      "src": "3889:40:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$49621_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$bound_to$_t_struct$_Bytes32Set_$49621_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer) view returns (bytes32[] memory)"
                      }
                    },
                    "id": 101005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3889:42:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3866:65:384"
                },
                {
                  "assignments": [
                    101008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101008,
                      "mutability": "mutable",
                      "name": "targetId",
                      "nameLocation": "3949:8:384",
                      "nodeType": "VariableDeclaration",
                      "scope": 101048,
                      "src": "3941:16:384",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 101007,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3941:7:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101010,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 101009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3960:1:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3941:20:384"
                },
                {
                  "body": {
                    "id": 101041,
                    "nodeType": "Block",
                    "src": "4016:148:384",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 101030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 101025,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 101000,
                                  "src": "4042:3:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                    "typeString": "bytes32[] memory"
                                  }
                                },
                                "id": 101027,
                                "indexExpression": {
                                  "id": 101026,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 101012,
                                  "src": "4046:1:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4042:6:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 101024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4034:7:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 101023,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4034:7:384",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 101028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4034:15:384",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 101029,
                            "name": "score",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100952,
                            "src": "4053:5:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4034:24:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 101039,
                          "nodeType": "Block",
                          "src": "4116:38:384",
                          "statements": [
                            {
                              "id": 101038,
                              "nodeType": "Break",
                              "src": "4134:5:384"
                            }
                          ]
                        },
                        "id": 101040,
                        "nodeType": "IfStatement",
                        "src": "4030:124:384",
                        "trueBody": {
                          "id": 101037,
                          "nodeType": "Block",
                          "src": "4060:50:384",
                          "statements": [
                            {
                              "expression": {
                                "id": 101035,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 101031,
                                  "name": "targetId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 101008,
                                  "src": "4078:8:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 101032,
                                    "name": "ids",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 101000,
                                    "src": "4089:3:384",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 101034,
                                  "indexExpression": {
                                    "id": 101033,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 101012,
                                    "src": "4093:1:384",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4089:6:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "4078:17:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 101036,
                              "nodeType": "ExpressionStatement",
                              "src": "4078:17:384"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 101018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 101015,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101012,
                      "src": "3992:1:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 101016,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101000,
                        "src": "3996:3:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 101017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3996:10:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3992:14:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 101042,
                  "initializationExpression": {
                    "assignments": [
                      101012
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 101012,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3985:1:384",
                        "nodeType": "VariableDeclaration",
                        "scope": 101042,
                        "src": "3977:9:384",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 101011,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3977:7:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 101014,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 101013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3989:1:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3977:13:384"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 101021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 101019,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101012,
                        "src": "4008:1:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "hexValue": "31",
                        "id": 101020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4013:1:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4008:6:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 101022,
                    "nodeType": "ExpressionStatement",
                    "src": "4008:6:384"
                  },
                  "nodeType": "ForStatement",
                  "src": "3972:192:384"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101044,
                        "name": "targetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101008,
                        "src": "4206:8:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 101045,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100927,
                        "src": "4216:8:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 101043,
                      "name": "_getURIFromSharedMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43831,
                      "src": "4180:25:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (bytes32,uint256) view returns (string memory)"
                      }
                    },
                    "id": 101046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4180:45:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 100934,
                  "id": 101047,
                  "nodeType": "Return",
                  "src": "4173:52:384"
                }
              ]
            },
            "baseFunctions": [
              15864,
              17757
            ],
            "documentation": {
              "id": 100925,
              "nodeType": "StructuredDocumentation",
              "src": "3123:45:384",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "3182:8:384",
            "overrides": {
              "id": 100931,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 100929,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17393,
                  "src": "3270:18:384"
                },
                {
                  "id": 100930,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17769,
                  "src": "3290:19:384"
                }
              ],
              "src": "3261:49:384"
            },
            "parameters": {
              "id": 100928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100927,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3199:8:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101049,
                  "src": "3191:16:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3191:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3190:18:384"
            },
            "returnParameters": {
              "id": 100934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100933,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101049,
                  "src": "3328:13:384",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 100932,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3328:6:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3327:15:384"
            },
            "scope": 101591,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 101074,
            "nodeType": "FunctionDefinition",
            "src": "4263:301:384",
            "nodes": [],
            "body": {
              "id": 101073,
              "nodeType": "Block",
              "src": "4448:116:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 101071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 101063,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101052,
                          "src": "4489:11:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 101061,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4465:5:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$101591_$",
                            "typeString": "type(contract super EvolvingNFTLogic)"
                          }
                        },
                        "id": 101062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15793,
                        "src": "4465:23:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 101064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4465:36:384",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 101070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 101066,
                              "name": "IERC2981Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151288,
                              "src": "4510:19:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$151288_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$151288_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            ],
                            "id": 101065,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4505:4:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 101067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4505:25:384",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981Upgradeable_$151288",
                            "typeString": "type(contract IERC2981Upgradeable)"
                          }
                        },
                        "id": 101068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4505:37:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 101069,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101052,
                        "src": "4546:11:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4505:52:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4465:92:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 101060,
                  "id": 101072,
                  "nodeType": "Return",
                  "src": "4458:99:384"
                }
              ]
            },
            "baseFunctions": [
              14686,
              15793,
              17628
            ],
            "documentation": {
              "id": 101050,
              "nodeType": "StructuredDocumentation",
              "src": "4238:20:384",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4272:17:384",
            "overrides": {
              "id": 101057,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 101054,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17393,
                  "src": "4371:18:384"
                },
                {
                  "id": 101055,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17769,
                  "src": "4391:19:384"
                },
                {
                  "id": 101056,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14687,
                  "src": "4412:7:384"
                }
              ],
              "src": "4362:58:384"
            },
            "parameters": {
              "id": 101053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101052,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4297:11:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101074,
                  "src": "4290:18:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 101051,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4290:6:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4289:20:384"
            },
            "returnParameters": {
              "id": 101060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101059,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101074,
                  "src": "4438:4:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101058,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4438:4:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4437:6:384"
            },
            "scope": 101591,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 101084,
            "nodeType": "FunctionDefinition",
            "src": "4620:91:384",
            "nodes": [],
            "body": {
              "id": 101083,
              "nodeType": "Block",
              "src": "4686:25:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 101081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4703:1:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 101080,
                  "id": 101082,
                  "nodeType": "Return",
                  "src": "4696:8:384"
                }
              ]
            },
            "baseFunctions": [
              15571
            ],
            "documentation": {
              "id": 101075,
              "nodeType": "StructuredDocumentation",
              "src": "4570:45:384",
              "text": "@dev The start token ID for the contract."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_startTokenId",
            "nameLocation": "4629:13:384",
            "overrides": {
              "id": 101077,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4659:8:384"
            },
            "parameters": {
              "id": 101076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4642:2:384"
            },
            "returnParameters": {
              "id": 101080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101079,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101084,
                  "src": "4677:7:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101078,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4677:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4676:9:384"
            },
            "scope": 101591,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 101093,
            "nodeType": "FunctionDefinition",
            "src": "4717:93:384",
            "nodes": [],
            "body": {
              "id": 101092,
              "nodeType": "Block",
              "src": "4771:39:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 101089,
                      "name": "_startTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101084
                      ],
                      "referencedDeclaration": 101084,
                      "src": "4788:13:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                        "typeString": "function () pure returns (uint256)"
                      }
                    },
                    "id": 101090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4788:15:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 101088,
                  "id": 101091,
                  "nodeType": "Return",
                  "src": "4781:22:384"
                }
              ]
            },
            "functionSelector": "e6798baa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startTokenId",
            "nameLocation": "4726:12:384",
            "parameters": {
              "id": 101085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4738:2:384"
            },
            "returnParameters": {
              "id": 101088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101087,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101093,
                  "src": "4762:7:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4762:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4761:9:384"
            },
            "scope": 101591,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101179,
            "nodeType": "FunctionDefinition",
            "src": "5083:840:384",
            "nodes": [],
            "body": {
              "id": 101178,
              "nodeType": "Block",
              "src": "5269:654:384",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 101108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 101106,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101102,
                      "src": "5283:14:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 101107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5301:1:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5283:19:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 101119,
                  "nodeType": "IfStatement",
                  "src": "5279:103:384",
                  "trueBody": {
                    "id": 101118,
                    "nodeType": "Block",
                    "src": "5304:78:384",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 101113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 101110,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5326:3:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 101111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "5326:9:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 101112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5339:1:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5326:14:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 101114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5342:8:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 101109,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5318:7:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 101115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5318:33:384",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 101116,
                        "nodeType": "ExpressionStatement",
                        "src": "5318:33:384"
                      },
                      {
                        "functionReturnParameters": 101105,
                        "id": 101117,
                        "nodeType": "Return",
                        "src": "5365:7:384"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    101121
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101121,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "5400:10:384",
                      "nodeType": "VariableDeclaration",
                      "scope": 101178,
                      "src": "5392:18:384",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101120,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5392:7:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101125,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 101124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 101122,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101098,
                      "src": "5413:16:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 101123,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101102,
                      "src": "5432:14:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5413:33:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5392:54:384"
                },
                {
                  "assignments": [
                    101127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101127,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "5462:13:384",
                      "nodeType": "VariableDeclaration",
                      "scope": 101178,
                      "src": "5457:18:384",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 101126,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5457:4:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101128,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5457:18:384"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 101132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 101129,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101100,
                      "src": "5489:9:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 101130,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64276,
                        "src": "5502:19:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64276_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 101131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64044,
                      "src": "5502:32:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5489:45:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 101148,
                    "nodeType": "Block",
                    "src": "5606:55:384",
                    "statements": [
                      {
                        "expression": {
                          "id": 101146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 101141,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101127,
                            "src": "5620:13:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 101145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 101142,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5636:3:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 101143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5636:9:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 101144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5649:1:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5636:14:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5620:30:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 101147,
                        "nodeType": "ExpressionStatement",
                        "src": "5620:30:384"
                      }
                    ]
                  },
                  "id": 101149,
                  "nodeType": "IfStatement",
                  "src": "5485:176:384",
                  "trueBody": {
                    "id": 101140,
                    "nodeType": "Block",
                    "src": "5536:64:384",
                    "statements": [
                      {
                        "expression": {
                          "id": 101138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 101133,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101127,
                            "src": "5550:13:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 101137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 101134,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5566:3:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 101135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5566:9:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 101136,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101121,
                              "src": "5579:10:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5566:23:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5550:39:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 101139,
                        "nodeType": "ExpressionStatement",
                        "src": "5550:39:384"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101151,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101127,
                        "src": "5678:13:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2156",
                        "id": 101152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5693:4:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        },
                        "value": "!V"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        }
                      ],
                      "id": 101150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5670:7:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 101153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5670:28:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101154,
                  "nodeType": "ExpressionStatement",
                  "src": "5670:28:384"
                },
                {
                  "assignments": [
                    101156
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101156,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "5717:13:384",
                      "nodeType": "VariableDeclaration",
                      "scope": 101178,
                      "src": "5709:21:384",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 101155,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5709:7:384",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101167,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 101162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 101157,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101096,
                        "src": "5733:21:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 101160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5766:1:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 101159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5758:7:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101158,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5758:7:384",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5758:10:384",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5733:35:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 101165,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101096,
                      "src": "5796:21:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 101166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5733:84:384",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 101163,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42650,
                        "src": "5771:20:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 101164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5771:22:384",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5709:108:384"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101171,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101100,
                        "src": "5865:9:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 101172,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            101579
                          ],
                          "referencedDeclaration": 101579,
                          "src": "5876:10:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 101173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5876:12:384",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101174,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101156,
                        "src": "5890:13:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101175,
                        "name": "totalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101121,
                        "src": "5905:10:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101168,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64276,
                        "src": "5828:19:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64276_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 101170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64081,
                      "src": "5828:36:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 101176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5828:88:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101177,
                  "nodeType": "ExpressionStatement",
                  "src": "5828:88:384"
                }
              ]
            },
            "baseFunctions": [
              40535
            ],
            "documentation": {
              "id": 101094,
              "nodeType": "StructuredDocumentation",
              "src": "4999:79:384",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "5092:20:384",
            "overrides": {
              "id": 101104,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5260:8:384"
            },
            "parameters": {
              "id": 101103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101096,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "5130:21:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101179,
                  "src": "5122:29:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5122:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101098,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "5169:16:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101179,
                  "src": "5161:24:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5161:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101100,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "5203:9:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101179,
                  "src": "5195:17:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5195:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101102,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "5230:14:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101179,
                  "src": "5222:22:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5222:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5112:138:384"
            },
            "returnParameters": {
              "id": 101105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5269:0:384"
            },
            "scope": 101591,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 101201,
            "nodeType": "FunctionDefinition",
            "src": "5976:248:384",
            "nodes": [],
            "body": {
              "id": 101200,
              "nodeType": "Block",
              "src": "6130:94:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 101193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101190,
                      "name": "startTokenId_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101188,
                      "src": "6140:13:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 101191,
                        "name": "_nextTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15583,
                        "src": "6156:12:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 101192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6156:14:384",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6140:30:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101194,
                  "nodeType": "ExpressionStatement",
                  "src": "6140:30:384"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101196,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101182,
                        "src": "6190:3:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101197,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101184,
                        "src": "6195:21:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 101195,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16993,
                        17008
                      ],
                      "referencedDeclaration": 17008,
                      "src": "6180:9:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 101198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6180:37:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101199,
                  "nodeType": "ExpressionStatement",
                  "src": "6180:37:384"
                }
              ]
            },
            "baseFunctions": [
              40545
            ],
            "documentation": {
              "id": 101180,
              "nodeType": "StructuredDocumentation",
              "src": "5929:42:384",
              "text": "@dev Transfers the NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "5985:22:384",
            "overrides": {
              "id": 101186,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6077:8:384"
            },
            "parameters": {
              "id": 101185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101182,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6016:3:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101201,
                  "src": "6008:11:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6008:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101184,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "6029:21:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101201,
                  "src": "6021:29:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101183,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6021:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6007:44:384"
            },
            "returnParameters": {
              "id": 101189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101188,
                  "mutability": "mutable",
                  "name": "startTokenId_",
                  "nameLocation": "6111:13:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101201,
                  "src": "6103:21:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6103:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6102:23:384"
            },
            "scope": 101591,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 101215,
            "nodeType": "FunctionDefinition",
            "src": "6324:143:384",
            "nodes": [],
            "body": {
              "id": 101214,
              "nodeType": "Block",
              "src": "6401:66:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101209,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100908,
                        "src": "6427:18:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 101210,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            101579
                          ],
                          "referencedDeclaration": 101579,
                          "src": "6447:10:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 101211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6447:12:384",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 101208,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101326,
                      "src": "6418:8:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 101212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6418:42:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 101207,
                  "id": 101213,
                  "nodeType": "Return",
                  "src": "6411:49:384"
                }
              ]
            },
            "baseFunctions": [
              42703
            ],
            "documentation": {
              "id": 101202,
              "nodeType": "StructuredDocumentation",
              "src": "6230:89:384",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "6333:27:384",
            "overrides": {
              "id": 101204,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6377:8:384"
            },
            "parameters": {
              "id": 101203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6360:2:384"
            },
            "returnParameters": {
              "id": 101207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101206,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101215,
                  "src": "6395:4:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101205,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6395:4:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6394:6:384"
            },
            "scope": 101591,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 101229,
            "nodeType": "FunctionDefinition",
            "src": "6550:128:384",
            "nodes": [],
            "body": {
              "id": 101228,
              "nodeType": "Block",
              "src": "6612:66:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101223,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100908,
                        "src": "6638:18:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 101224,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            101579
                          ],
                          "referencedDeclaration": 101579,
                          "src": "6658:10:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 101225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6658:12:384",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 101222,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101326,
                      "src": "6629:8:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 101226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6629:42:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 101221,
                  "id": 101227,
                  "nodeType": "Return",
                  "src": "6622:49:384"
                }
              ]
            },
            "baseFunctions": [
              41615
            ],
            "documentation": {
              "id": 101216,
              "nodeType": "StructuredDocumentation",
              "src": "6473:72:384",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "6559:12:384",
            "overrides": {
              "id": 101218,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6588:8:384"
            },
            "parameters": {
              "id": 101217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6571:2:384"
            },
            "returnParameters": {
              "id": 101221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101220,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101229,
                  "src": "6606:4:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101219,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6606:4:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6605:6:384"
            },
            "scope": 101591,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 101243,
            "nodeType": "FunctionDefinition",
            "src": "6768:134:384",
            "nodes": [],
            "body": {
              "id": 101242,
              "nodeType": "Block",
              "src": "6836:66:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101237,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100908,
                        "src": "6862:18:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 101238,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            101579
                          ],
                          "referencedDeclaration": 101579,
                          "src": "6882:10:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 101239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6882:12:384",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 101236,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101326,
                      "src": "6853:8:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 101240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6853:42:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 101235,
                  "id": 101241,
                  "nodeType": "Return",
                  "src": "6846:49:384"
                }
              ]
            },
            "baseFunctions": [
              43091
            ],
            "documentation": {
              "id": 101230,
              "nodeType": "StructuredDocumentation",
              "src": "6684:79:384",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "6777:18:384",
            "overrides": {
              "id": 101232,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6812:8:384"
            },
            "parameters": {
              "id": 101231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6795:2:384"
            },
            "returnParameters": {
              "id": 101235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101234,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101243,
                  "src": "6830:4:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101233,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6830:4:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6829:6:384"
            },
            "scope": 101591,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 101257,
            "nodeType": "FunctionDefinition",
            "src": "6997:134:384",
            "nodes": [],
            "body": {
              "id": 101256,
              "nodeType": "Block",
              "src": "7065:66:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101251,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100908,
                        "src": "7091:18:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 101252,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            101579
                          ],
                          "referencedDeclaration": 101579,
                          "src": "7111:10:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 101253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7111:12:384",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 101250,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101326,
                      "src": "7082:8:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 101254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7082:42:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 101249,
                  "id": 101255,
                  "nodeType": "Return",
                  "src": "7075:49:384"
                }
              ]
            },
            "baseFunctions": [
              39525
            ],
            "documentation": {
              "id": 101244,
              "nodeType": "StructuredDocumentation",
              "src": "6908:84:384",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "7006:18:384",
            "overrides": {
              "id": 101246,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7041:8:384"
            },
            "parameters": {
              "id": 101245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7024:2:384"
            },
            "returnParameters": {
              "id": 101249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101248,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101257,
                  "src": "7059:4:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101247,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7059:4:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7058:6:384"
            },
            "scope": 101591,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 101271,
            "nodeType": "FunctionDefinition",
            "src": "7226:138:384",
            "nodes": [],
            "body": {
              "id": 101270,
              "nodeType": "Block",
              "src": "7298:66:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101265,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100908,
                        "src": "7324:18:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 101266,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            101579
                          ],
                          "referencedDeclaration": 101579,
                          "src": "7344:10:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 101267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7344:12:384",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 101264,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101326,
                      "src": "7315:8:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 101268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7315:42:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 101263,
                  "id": 101269,
                  "nodeType": "Return",
                  "src": "7308:49:384"
                }
              ]
            },
            "baseFunctions": [
              40551
            ],
            "documentation": {
              "id": 101258,
              "nodeType": "StructuredDocumentation",
              "src": "7137:84:384",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "7235:22:384",
            "overrides": {
              "id": 101260,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7274:8:384"
            },
            "parameters": {
              "id": 101259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7257:2:384"
            },
            "returnParameters": {
              "id": 101263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101262,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101271,
                  "src": "7292:4:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101261,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7292:4:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7291:6:384"
            },
            "scope": 101591,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 101285,
            "nodeType": "FunctionDefinition",
            "src": "7458:138:384",
            "nodes": [],
            "body": {
              "id": 101284,
              "nodeType": "Block",
              "src": "7537:59:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101279,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100920,
                        "src": "7563:11:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 101280,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            101579
                          ],
                          "referencedDeclaration": 101579,
                          "src": "7576:10:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 101281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7576:12:384",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 101278,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101326,
                      "src": "7554:8:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 101282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7554:35:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 101277,
                  "id": 101283,
                  "nodeType": "Return",
                  "src": "7547:42:384"
                }
              ]
            },
            "baseFunctions": [
              43851
            ],
            "documentation": {
              "id": 101272,
              "nodeType": "StructuredDocumentation",
              "src": "7370:83:384",
              "text": "@dev Returns whether shared metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetSharedMetadata",
            "nameLocation": "7467:21:384",
            "overrides": {
              "id": 101274,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7513:8:384"
            },
            "parameters": {
              "id": 101273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7488:2:384"
            },
            "returnParameters": {
              "id": 101277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101276,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101285,
                  "src": "7531:4:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101275,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7531:4:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7530:6:384"
            },
            "scope": 101591,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 101299,
            "nodeType": "FunctionDefinition",
            "src": "7695:145:384",
            "nodes": [],
            "body": {
              "id": 101298,
              "nodeType": "Block",
              "src": "7774:66:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101293,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100908,
                        "src": "7800:18:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 101294,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            101579
                          ],
                          "referencedDeclaration": 101579,
                          "src": "7820:10:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 101295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7820:12:384",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 101292,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101326,
                      "src": "7791:8:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 101296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7791:42:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 101291,
                  "id": 101297,
                  "nodeType": "Return",
                  "src": "7784:49:384"
                }
              ]
            },
            "baseFunctions": [
              21534
            ],
            "documentation": {
              "id": 101286,
              "nodeType": "StructuredDocumentation",
              "src": "7602:88:384",
              "text": "@dev Returns whether operator restriction can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOperatorRestriction",
            "nameLocation": "7704:26:384",
            "overrides": {
              "id": 101288,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7750:8:384"
            },
            "parameters": {
              "id": 101287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7730:2:384"
            },
            "returnParameters": {
              "id": 101291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101290,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101299,
                  "src": "7768:4:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101289,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7768:4:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7767:6:384"
            },
            "scope": 101591,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 101326,
            "nodeType": "FunctionDefinition",
            "src": "7908:222:384",
            "nodes": [],
            "body": {
              "id": 101325,
              "nodeType": "Block",
              "src": "7988:142:384",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    101313
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101313,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "8030:4:384",
                      "nodeType": "VariableDeclaration",
                      "scope": 101325,
                      "src": "7998:36:384",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$41639_storage_ptr",
                        "typeString": "struct PermissionsStorage.Data"
                      },
                      "typeName": {
                        "id": 101312,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101311,
                          "name": "PermissionsStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41639,
                          "src": "7998:23:384"
                        },
                        "referencedDeclaration": 41639,
                        "src": "7998:23:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$41639_storage_ptr",
                          "typeString": "struct PermissionsStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101317,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 101314,
                        "name": "PermissionsStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41652,
                        "src": "8037:18:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PermissionsStorage_$41652_$",
                          "typeString": "type(library PermissionsStorage)"
                        }
                      },
                      "id": 101315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "permissionsStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41651,
                      "src": "8037:37:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$41639_storage_ptr_$",
                        "typeString": "function () pure returns (struct PermissionsStorage.Data storage pointer)"
                      }
                    },
                    "id": 101316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8037:39:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$41639_storage_ptr",
                      "typeString": "struct PermissionsStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7998:78:384"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 101318,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101313,
                          "src": "8093:4:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$41639_storage_ptr",
                            "typeString": "struct PermissionsStorage.Data storage pointer"
                          }
                        },
                        "id": 101319,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_hasRole",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41633,
                        "src": "8093:13:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(bytes32 => mapping(address => bool))"
                        }
                      },
                      "id": 101321,
                      "indexExpression": {
                        "id": 101320,
                        "name": "_role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101302,
                        "src": "8107:5:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8093:20:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 101323,
                    "indexExpression": {
                      "id": 101322,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101304,
                      "src": "8114:8:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8093:30:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 101308,
                  "id": 101324,
                  "nodeType": "Return",
                  "src": "8086:37:384"
                }
              ]
            },
            "documentation": {
              "id": 101300,
              "nodeType": "StructuredDocumentation",
              "src": "7846:57:384",
              "text": "@dev Checks whether an account has a particular role."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasRole",
            "nameLocation": "7917:8:384",
            "parameters": {
              "id": 101305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101302,
                  "mutability": "mutable",
                  "name": "_role",
                  "nameLocation": "7934:5:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101326,
                  "src": "7926:13:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 101301,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7926:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101304,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "7949:8:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101326,
                  "src": "7941:16:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7941:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7925:33:384"
            },
            "returnParameters": {
              "id": 101308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101307,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101326,
                  "src": "7982:4:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101306,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7982:4:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7981:6:384"
            },
            "scope": 101591,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 101340,
            "nodeType": "FunctionDefinition",
            "src": "8396:145:384",
            "nodes": [],
            "body": {
              "id": 101339,
              "nodeType": "Block",
              "src": "8451:90:384",
              "nodes": [],
              "statements": [
                {
                  "id": 101338,
                  "nodeType": "UncheckedBlock",
                  "src": "8461:74:384",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 101332,
                            "name": "_nextTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15583,
                            "src": "8492:12:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 101333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8492:14:384",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 101334,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              101084
                            ],
                            "referencedDeclaration": 101084,
                            "src": "8509:13:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 101335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8509:15:384",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8492:32:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 101331,
                      "id": 101337,
                      "nodeType": "Return",
                      "src": "8485:39:384"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 101327,
              "nodeType": "StructuredDocumentation",
              "src": "8314:77:384",
              "text": " Returns the total amount of tokens minted in the contract."
            },
            "functionSelector": "a2309ff8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMinted",
            "nameLocation": "8405:11:384",
            "parameters": {
              "id": 101328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8416:2:384"
            },
            "returnParameters": {
              "id": 101331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101330,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101340,
                  "src": "8442:7:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101329,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8442:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8441:9:384"
            },
            "scope": 101591,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 101350,
            "nodeType": "FunctionDefinition",
            "src": "8623:99:384",
            "nodes": [],
            "body": {
              "id": 101349,
              "nodeType": "Block",
              "src": "8684:38:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 101346,
                      "name": "_nextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15583,
                      "src": "8701:12:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 101347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8701:14:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 101345,
                  "id": 101348,
                  "nodeType": "Return",
                  "src": "8694:21:384"
                }
              ]
            },
            "documentation": {
              "id": 101341,
              "nodeType": "StructuredDocumentation",
              "src": "8547:71:384",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "8632:17:384",
            "parameters": {
              "id": 101342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8649:2:384"
            },
            "returnParameters": {
              "id": 101345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101344,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101350,
                  "src": "8675:7:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8675:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8674:9:384"
            },
            "scope": 101591,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 101360,
            "nodeType": "FunctionDefinition",
            "src": "8791:100:384",
            "nodes": [],
            "body": {
              "id": 101359,
              "nodeType": "Block",
              "src": "8853:38:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 101356,
                      "name": "_nextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15583,
                      "src": "8870:12:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 101357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8870:14:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 101355,
                  "id": 101358,
                  "nodeType": "Return",
                  "src": "8863:21:384"
                }
              ]
            },
            "documentation": {
              "id": 101351,
              "nodeType": "StructuredDocumentation",
              "src": "8728:58:384",
              "text": "@dev The next token ID of the NFT that can be claimed."
            },
            "functionSelector": "acd083f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToClaim",
            "nameLocation": "8800:18:384",
            "parameters": {
              "id": 101352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8818:2:384"
            },
            "returnParameters": {
              "id": 101355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101354,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101360,
                  "src": "8844:7:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8844:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8843:9:384"
            },
            "scope": 101591,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 101372,
            "nodeType": "FunctionDefinition",
            "src": "8947:184:384",
            "nodes": [],
            "body": {
              "id": 101371,
              "nodeType": "Block",
              "src": "8995:136:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101367,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101363,
                        "src": "9110:7:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 101368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9119:4:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 101366,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17089,
                        17265
                      ],
                      "referencedDeclaration": 17265,
                      "src": "9104:5:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 101369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9104:20:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101370,
                  "nodeType": "ExpressionStatement",
                  "src": "9104:20:384"
                }
              ]
            },
            "documentation": {
              "id": 101361,
              "nodeType": "StructuredDocumentation",
              "src": "8897:45:384",
              "text": "@dev Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "8956:4:384",
            "parameters": {
              "id": 101364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101363,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8969:7:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101372,
                  "src": "8961:15:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8961:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8960:17:384"
            },
            "returnParameters": {
              "id": 101365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8995:0:384"
            },
            "scope": 101591,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 101436,
            "nodeType": "FunctionDefinition",
            "src": "9185:569:384",
            "nodes": [],
            "body": {
              "id": 101435,
              "nodeType": "Block",
              "src": "9347:407:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101388,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101375,
                        "src": "9385:4:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101389,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101377,
                        "src": "9391:2:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101390,
                        "name": "startTokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101379,
                        "src": "9395:13:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101391,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101381,
                        "src": "9410:8:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101385,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9357:5:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$101591_$",
                          "typeString": "type(contract super EvolvingNFTLogic)"
                        }
                      },
                      "id": 101387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16583,
                      "src": "9357:27:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 101392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9357:62:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101393,
                  "nodeType": "ExpressionStatement",
                  "src": "9357:62:384"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 101415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 101408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 101401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9531:36:384",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 101395,
                              "name": "TRANSFER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100914,
                              "src": "9541:13:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 101398,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9564:1:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 101397,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9556:7:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 101396,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9556:7:384",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 101399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9556:10:384",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 101394,
                            "name": "_hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101326,
                            "src": "9532:8:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 101400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9532:35:384",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 101407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101402,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101375,
                          "src": "9571:4:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 101405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9587:1:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 101404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9579:7:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 101403,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9579:7:384",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 101406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9579:10:384",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9571:18:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "9531:58:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 101414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 101409,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101377,
                        "src": "9593:2:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 101412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9607:1:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 101411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9599:7:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101410,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9599:7:384",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9599:10:384",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9593:16:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9531:78:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 101434,
                  "nodeType": "IfStatement",
                  "src": "9527:221:384",
                  "trueBody": {
                    "id": 101433,
                    "nodeType": "Block",
                    "src": "9611:137:384",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 101426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 101420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "9629:30:384",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 101417,
                                  "name": "TRANSFER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 100914,
                                  "src": "9639:13:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 101418,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 101375,
                                  "src": "9654:4:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 101416,
                                "name": "_hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101326,
                                "src": "9630:8:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 101419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9630:29:384",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 101425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "9663:28:384",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 101422,
                                  "name": "TRANSFER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 100914,
                                  "src": "9673:13:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 101423,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 101377,
                                  "src": "9688:2:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 101421,
                                "name": "_hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101326,
                                "src": "9664:8:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 101424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9664:27:384",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9629:62:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 101432,
                        "nodeType": "IfStatement",
                        "src": "9625:113:384",
                        "trueBody": {
                          "id": 101431,
                          "nodeType": "Block",
                          "src": "9693:45:384",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "2154",
                                    "id": 101428,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9718:4:384",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_7db3b04d902e8ae9e0c6f3e0ba4170cc392ab92143dfd3399cb577e88ea77ce4",
                                      "typeString": "literal_string \"!T\""
                                    },
                                    "value": "!T"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_7db3b04d902e8ae9e0c6f3e0ba4170cc392ab92143dfd3399cb577e88ea77ce4",
                                      "typeString": "literal_string \"!T\""
                                    }
                                  ],
                                  "id": 101427,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "9711:6:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 101429,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9711:12:384",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 101430,
                              "nodeType": "ExpressionStatement",
                              "src": "9711:12:384"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              16583
            ],
            "documentation": {
              "id": 101373,
              "nodeType": "StructuredDocumentation",
              "src": "9137:43:384",
              "text": "@dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "9194:21:384",
            "overrides": {
              "id": 101383,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9338:8:384"
            },
            "parameters": {
              "id": 101382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101375,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9233:4:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101436,
                  "src": "9225:12:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9225:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101377,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9255:2:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101436,
                  "src": "9247:10:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9247:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101379,
                  "mutability": "mutable",
                  "name": "startTokenId_",
                  "nameLocation": "9275:13:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101436,
                  "src": "9267:21:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9267:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101381,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "9306:8:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101436,
                  "src": "9298:16:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9298:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9215:105:384"
            },
            "returnParameters": {
              "id": 101384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9347:0:384"
            },
            "scope": 101591,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 101458,
            "nodeType": "FunctionDefinition",
            "src": "9805:243:384",
            "nodes": [],
            "body": {
              "id": 101457,
              "nodeType": "Block",
              "src": "9988:60:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101453,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101439,
                        "src": "10022:8:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101454,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101441,
                        "src": "10032:8:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 101450,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9998:5:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$101591_$",
                          "typeString": "type(contract super EvolvingNFTLogic)"
                        }
                      },
                      "id": 101452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16210,
                      "src": "9998:23:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 101455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9998:43:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101456,
                  "nodeType": "ExpressionStatement",
                  "src": "9998:43:384"
                }
              ]
            },
            "baseFunctions": [
              16210,
              17719
            ],
            "documentation": {
              "id": 101437,
              "nodeType": "StructuredDocumentation",
              "src": "9760:40:384",
              "text": "@dev See {ERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 101447,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 101439,
                    "src": "9974:8:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 101448,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 101446,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21796,
                  "src": "9946:27:384"
                },
                "nodeType": "ModifierInvocation",
                "src": "9946:37:384"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "9814:17:384",
            "overrides": {
              "id": 101445,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 101443,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17393,
                  "src": "9897:18:384"
                },
                {
                  "id": 101444,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17769,
                  "src": "9917:19:384"
                }
              ],
              "src": "9888:49:384"
            },
            "parameters": {
              "id": 101442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101439,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "9840:8:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101458,
                  "src": "9832:16:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9832:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101441,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "9855:8:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101458,
                  "src": "9850:13:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101440,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9850:4:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9831:33:384"
            },
            "returnParameters": {
              "id": 101449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9988:0:384"
            },
            "scope": 101591,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101480,
            "nodeType": "FunctionDefinition",
            "src": "10089:240:384",
            "nodes": [],
            "body": {
              "id": 101479,
              "nodeType": "Block",
              "src": "10280:49:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101475,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101461,
                        "src": "10304:8:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101476,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101463,
                        "src": "10314:7:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101472,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10290:5:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$101591_$",
                          "typeString": "type(contract super EvolvingNFTLogic)"
                        }
                      },
                      "id": 101474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16152,
                      "src": "10290:13:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 101477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10290:32:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101478,
                  "nodeType": "ExpressionStatement",
                  "src": "10290:32:384"
                }
              ]
            },
            "baseFunctions": [
              16152,
              17711
            ],
            "documentation": {
              "id": 101459,
              "nodeType": "StructuredDocumentation",
              "src": "10054:30:384",
              "text": "@dev See {ERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 101469,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 101461,
                    "src": "10266:8:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 101470,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 101468,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21796,
                  "src": "10238:27:384"
                },
                "nodeType": "ModifierInvocation",
                "src": "10238:37:384"
              }
            ],
            "name": "approve",
            "nameLocation": "10098:7:384",
            "overrides": {
              "id": 101467,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 101465,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17393,
                  "src": "10189:18:384"
                },
                {
                  "id": 101466,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17769,
                  "src": "10209:19:384"
                }
              ],
              "src": "10180:49:384"
            },
            "parameters": {
              "id": 101464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101461,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "10114:8:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101480,
                  "src": "10106:16:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10106:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101463,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10132:7:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101480,
                  "src": "10124:15:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10124:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10105:35:384"
            },
            "returnParameters": {
              "id": 101471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10280:0:384"
            },
            "scope": 101591,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101505,
            "nodeType": "FunctionDefinition",
            "src": "10376:240:384",
            "nodes": [],
            "body": {
              "id": 101504,
              "nodeType": "Block",
              "src": "10562:54:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101499,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101483,
                        "src": "10591:4:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101500,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101485,
                        "src": "10597:2:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101501,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101487,
                        "src": "10601:7:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101496,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10572:5:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$101591_$",
                          "typeString": "type(contract super EvolvingNFTLogic)"
                        }
                      },
                      "id": 101498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16511,
                      "src": "10572:18:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 101502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10572:37:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101503,
                  "nodeType": "ExpressionStatement",
                  "src": "10572:37:384"
                }
              ]
            },
            "baseFunctions": [
              16511,
              17703
            ],
            "documentation": {
              "id": 101481,
              "nodeType": "StructuredDocumentation",
              "src": "10335:36:384",
              "text": "@dev See {ERC721-_transferFrom}."
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 101493,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 101483,
                    "src": "10556:4:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 101494,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 101492,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21762,
                  "src": "10536:19:384"
                },
                "nodeType": "ModifierInvocation",
                "src": "10536:25:384"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "10385:12:384",
            "overrides": {
              "id": 101491,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 101489,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17393,
                  "src": "10495:18:384"
                },
                {
                  "id": 101490,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17769,
                  "src": "10515:19:384"
                }
              ],
              "src": "10486:49:384"
            },
            "parameters": {
              "id": 101488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101483,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10415:4:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101505,
                  "src": "10407:12:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10407:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101485,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10437:2:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101505,
                  "src": "10429:10:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10429:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101487,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10457:7:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101505,
                  "src": "10449:15:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10449:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10397:73:384"
            },
            "returnParameters": {
              "id": 101495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10562:0:384"
            },
            "scope": 101591,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101530,
            "nodeType": "FunctionDefinition",
            "src": "10667:248:384",
            "nodes": [],
            "body": {
              "id": 101529,
              "nodeType": "Block",
              "src": "10857:58:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101524,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101508,
                        "src": "10890:4:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101525,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101510,
                        "src": "10896:2:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101526,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101512,
                        "src": "10900:7:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101521,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10867:5:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$101591_$",
                          "typeString": "type(contract super EvolvingNFTLogic)"
                        }
                      },
                      "id": 101523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16530,
                      "src": "10867:22:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 101527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10867:41:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101528,
                  "nodeType": "ExpressionStatement",
                  "src": "10867:41:384"
                }
              ]
            },
            "baseFunctions": [
              16530,
              17693
            ],
            "documentation": {
              "id": 101506,
              "nodeType": "StructuredDocumentation",
              "src": "10622:40:384",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 101518,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 101508,
                    "src": "10851:4:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 101519,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 101517,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21762,
                  "src": "10831:19:384"
                },
                "nodeType": "ModifierInvocation",
                "src": "10831:25:384"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "10676:16:384",
            "overrides": {
              "id": 101516,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 101514,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17393,
                  "src": "10790:18:384"
                },
                {
                  "id": 101515,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17769,
                  "src": "10810:19:384"
                }
              ],
              "src": "10781:49:384"
            },
            "parameters": {
              "id": 101513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101508,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10710:4:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101530,
                  "src": "10702:12:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10702:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101510,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10732:2:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101530,
                  "src": "10724:10:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10724:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101512,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10752:7:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101530,
                  "src": "10744:15:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10744:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10692:73:384"
            },
            "returnParameters": {
              "id": 101520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10857:0:384"
            },
            "scope": 101591,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101558,
            "nodeType": "FunctionDefinition",
            "src": "10966:281:384",
            "nodes": [],
            "body": {
              "id": 101557,
              "nodeType": "Block",
              "src": "11183:64:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101551,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101533,
                        "src": "11216:4:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101552,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101535,
                        "src": "11222:2:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101553,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101537,
                        "src": "11226:7:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101554,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101539,
                        "src": "11235:4:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 101548,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "11193:5:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$101591_$",
                          "typeString": "type(contract super EvolvingNFTLogic)"
                        }
                      },
                      "id": 101550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16570,
                      "src": "11193:22:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 101555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11193:47:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101556,
                  "nodeType": "ExpressionStatement",
                  "src": "11193:47:384"
                }
              ]
            },
            "baseFunctions": [
              16570,
              17683
            ],
            "documentation": {
              "id": 101531,
              "nodeType": "StructuredDocumentation",
              "src": "10921:40:384",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 101545,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 101533,
                    "src": "11177:4:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 101546,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 101544,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21762,
                  "src": "11157:19:384"
                },
                "nodeType": "ModifierInvocation",
                "src": "11157:25:384"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "10975:16:384",
            "overrides": {
              "id": 101543,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 101541,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17393,
                  "src": "11116:18:384"
                },
                {
                  "id": 101542,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17769,
                  "src": "11136:19:384"
                }
              ],
              "src": "11107:49:384"
            },
            "parameters": {
              "id": 101540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101533,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11009:4:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101558,
                  "src": "11001:12:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11001:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101535,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11031:2:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101558,
                  "src": "11023:10:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101534,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11023:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101537,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11051:7:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101558,
                  "src": "11043:15:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11043:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101539,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "11081:4:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101558,
                  "src": "11068:17:384",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 101538,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11068:5:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10991:100:384"
            },
            "returnParameters": {
              "id": 101547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11183:0:384"
            },
            "scope": 101591,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101568,
            "nodeType": "FunctionDefinition",
            "src": "11253:111:384",
            "nodes": [],
            "body": {
              "id": 101567,
              "nodeType": "Block",
              "src": "11328:36:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 101564,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101579
                      ],
                      "referencedDeclaration": 101579,
                      "src": "11345:10:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 101565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11345:12:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 101563,
                  "id": 101566,
                  "nodeType": "Return",
                  "src": "11338:19:384"
                }
              ]
            },
            "baseFunctions": [
              40487
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "11262:14:384",
            "overrides": {
              "id": 101560,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11301:8:384"
            },
            "parameters": {
              "id": 101559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11276:2:384"
            },
            "returnParameters": {
              "id": 101563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101562,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101568,
                  "src": "11319:7:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11319:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11318:9:384"
            },
            "scope": 101591,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 101579,
            "nodeType": "FunctionDefinition",
            "src": "11370:140:384",
            "nodes": [],
            "body": {
              "id": 101578,
              "nodeType": "Block",
              "src": "11448:62:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 101574,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46243,
                        "src": "11465:25:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46243_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 101575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46211,
                      "src": "11465:36:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 101576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11465:38:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 101573,
                  "id": 101577,
                  "nodeType": "Return",
                  "src": "11458:45:384"
                }
              ]
            },
            "baseFunctions": [
              46211
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "11379:10:384",
            "overrides": {
              "id": 101570,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11414:8:384"
            },
            "parameters": {
              "id": 101569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11389:2:384"
            },
            "returnParameters": {
              "id": 101573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101572,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "11440:6:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 101579,
                  "src": "11432:14:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101571,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11432:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11431:16:384"
            },
            "scope": 101591,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 101590,
            "nodeType": "FunctionDefinition",
            "src": "11516:136:384",
            "nodes": [],
            "body": {
              "id": 101589,
              "nodeType": "Block",
              "src": "11592:60:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 101585,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46243,
                        "src": "11609:25:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46243_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 101586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46238,
                      "src": "11609:34:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 101587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11609:36:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 101584,
                  "id": 101588,
                  "nodeType": "Return",
                  "src": "11602:43:384"
                }
              ]
            },
            "baseFunctions": [
              46238
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "11525:8:384",
            "overrides": {
              "id": 101581,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11558:8:384"
            },
            "parameters": {
              "id": 101580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11533:2:384"
            },
            "returnParameters": {
              "id": 101584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101583,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101590,
                  "src": "11576:14:384",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 101582,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11576:5:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11575:16:384"
            },
            "scope": 101591,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 100880,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39526,
              "src": "1865:16:384"
            },
            "id": 100881,
            "nodeType": "InheritanceSpecifier",
            "src": "1865:16:384"
          },
          {
            "baseName": {
              "id": 100882,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43092,
              "src": "1887:7:384"
            },
            "id": 100883,
            "nodeType": "InheritanceSpecifier",
            "src": "1887:7:384"
          },
          {
            "baseName": {
              "id": 100884,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42704,
              "src": "1900:11:384"
            },
            "id": 100885,
            "nodeType": "InheritanceSpecifier",
            "src": "1900:11:384"
          },
          {
            "baseName": {
              "id": 100886,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41616,
              "src": "1917:7:384"
            },
            "id": 100887,
            "nodeType": "InheritanceSpecifier",
            "src": "1917:7:384"
          },
          {
            "baseName": {
              "id": 100888,
              "name": "SharedMetadataBatch",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43852,
              "src": "1930:19:384"
            },
            "id": 100889,
            "nodeType": "InheritanceSpecifier",
            "src": "1930:19:384"
          },
          {
            "baseName": {
              "id": 100890,
              "name": "Drop",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40552,
              "src": "1955:4:384"
            },
            "id": 100891,
            "nodeType": "InheritanceSpecifier",
            "src": "1955:4:384"
          },
          {
            "baseName": {
              "id": 100892,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46243,
              "src": "1965:25:384"
            },
            "id": 100893,
            "nodeType": "InheritanceSpecifier",
            "src": "1965:25:384"
          },
          {
            "baseName": {
              "id": 100894,
              "name": "DefaultOperatorFiltererUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18344,
              "src": "1996:34:384"
            },
            "id": 100895,
            "nodeType": "InheritanceSpecifier",
            "src": "1996:34:384"
          },
          {
            "baseName": {
              "id": 100896,
              "name": "ERC721AQueryableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15365,
              "src": "2036:27:384"
            },
            "id": 100897,
            "nodeType": "InheritanceSpecifier",
            "src": "2036:27:384"
          }
        ],
        "canonicalName": "EvolvingNFTLogic",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          101591,
          15365,
          17563,
          17393,
          17769,
          17496,
          18344,
          21859,
          21535,
          33936,
          46243,
          157284,
          151439,
          40552,
          33356,
          33091,
          33068,
          43852,
          34460,
          41616,
          33959,
          42704,
          34121,
          43092,
          34185,
          14831,
          14687,
          39526,
          33220
        ],
        "name": "EvolvingNFTLogic",
        "nameLocation": "1841:16:384",
        "scope": 101592,
        "usedErrors": [
          17531,
          17569,
          17572,
          17575,
          17578,
          17581,
          17584,
          17587,
          17590,
          17593,
          17596,
          17599,
          17602,
          17605,
          21699
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 384
}