{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610c36806100206000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c8063248a9ca3146100885780632f2ff15d146100ae57806336568abe146100c35780639010d07c146100d657806391d14854146100f6578063a217fddf14610119578063a32fa5b314610121578063ca15c87314610134578063d547741f14610147575b600080fd5b61009b6100963660046109f3565b61015a565b6040519081526020015b60405180910390f35b6100c16100bc366004610a0c565b61017a565b005b6100c16100d1366004610a0c565b61022e565b6100e96100e4366004610a48565b6102a1565b6040516100a59190610a6a565b610109610104366004610a0c565b61039c565b60405190151581526020016100a5565b61009b600081565b61010961012f366004610a0c565b6103d2565b61009b6101423660046109f3565b610433565b6100c1610155366004610a0c565b6104c8565b6000806101656104fc565b60009384526001016020525050604090205490565b60006101846104fc565b60008481526001820160205260409020549091506101a9906101a4610520565b61059e565b6000838152602082815260408083206001600160a01b038616845290915290205460ff161561021f5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064015b60405180910390fd5b6102298383610629565b505050565b806001600160a01b0316610240610520565b6001600160a01b0316146102935760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610216565b61029d828261063d565b5050565b6000806102ac610651565b600085815260208290526040812054919250805b82811015610391576000878152602085815260408083208484526001019091529020546001600160a01b03161561033c578582141561032a576000878152602094855260408082209282526001909201909452909220546001600160a01b03169250610396915050565b610335600183610a94565b915061037f565b61034787600061039c565b801561036c575060008781526020858152604080832083805260020190915290205481145b1561037f5761037c600183610a94565b91505b61038a600182610a94565b90506102c0565b505050505b92915050565b6000806103a76104fc565b6000948552602090815260408086206001600160a01b03959095168652939052505090205460ff1690565b6000806103dd6104fc565b60008581526020828152604080832083805290915290205490915060ff16610429576000848152602091825260408082206001600160a01b0386168352909252205460ff169050610396565b5060019392505050565b60008061043e610651565b6000848152602082905260408120549192505b818110156104a2576000858152602084815260408083208484526001019091529020546001600160a01b0316156104905761048d600185610a94565b93505b61049b600182610a94565b9050610451565b506104ae84600061039c565b156104c1576104be600184610a94565b92505b5050919050565b60006104d26104fc565b60008481526001820160205260409020549091506104f2906101a4610520565b610229838361063d565b7fd0ebebe8e6445c62babf8fef767eb39f1002bb957bb5b83258275a4e46428ed590565b60405163572b6c0560e01b8152600090309063572b6c0590610546903390600401610a6a565b602060405180830381865afa158015610563573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105879190610aac565b15610599575060131936013560601c90565b503390565b60006105a86104fc565b6000848152602082815260408083206001600160a01b038716845290915290205490915060ff16610229576105e7826001600160a01b03166014610675565b6105f2846020610675565b604051602001610603929190610afe565b60408051601f198184030181529082905262461bcd60e51b825261021691600401610b6b565b6106338282610818565b61029d828261089c565b6106478282610913565b61029d828261099e565b7f0c4ba382c0009cf238e4c1ca1a52f51c61e6248a70bdfb34e5ed49d5578a5c0c90565b60606000610684836002610b9e565b61068f906002610a94565b67ffffffffffffffff8111156106a7576106a7610bbd565b6040519080825280601f01601f1916602001820160405280156106d1576020820181803683370190505b509050600360fc1b816000815181106106ec576106ec610bd3565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061071b5761071b610bd3565b60200101906001600160f81b031916908160001a905350600061073f846002610b9e565b61074a906001610a94565b90505b60018111156107c2576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061077e5761077e610bd3565b1a60f81b82828151811061079457610794610bd3565b60200101906001600160f81b031916908160001a90535060049490941c936107bb81610be9565b905061074d565b5083156108115760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610216565b9392505050565b60006108226104fc565b6000848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790559050610857610520565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4505050565b60006108a6610651565b600084815260208290526040812080549293506001916108c68385610a94565b909155505060009384526020918252604080852082865260018101845281862080546001600160a01b039096166001600160a01b0319909616861790559385526002909301909152912055565b600061091d6104fc565b9050610929838361059e565b6000838152602082815260408083206001600160a01b03861684529091529020805460ff19169055610959610520565b6001600160a01b0316826001600160a01b0316847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4505050565b60006109a8610651565b6000938452602090815260408085206001600160a01b0390941680865260028501808452828720805488526001909601845291862080546001600160a01b0319169055855290525055565b600060208284031215610a0557600080fd5b5035919050565b60008060408385031215610a1f57600080fd5b8235915060208301356001600160a01b0381168114610a3d57600080fd5b809150509250929050565b60008060408385031215610a5b57600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610aa757610aa7610a7e565b500190565b600060208284031215610abe57600080fd5b8151801515811461081157600080fd5b60005b83811015610ae9578181015183820152602001610ad1565b83811115610af8576000848401525b50505050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351610b2e816015850160208801610ace565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351610b5f816026840160208801610ace565b01602601949350505050565b6020815260008251806020840152610b8a816040850160208701610ace565b601f01601f19169190910160400192915050565b6000816000190483118215151615610bb857610bb8610a7e565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081610bf857610bf8610a7e565b50600019019056fea2646970667358221220238a7ab6a1f923856ef4aca0d85649996816d01cbe53cf1901c03614ddd7716d64736f6c634300080c0033",
    "sourceMap": "172:750:191:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100835760003560e01c8063248a9ca3146100885780632f2ff15d146100ae57806336568abe146100c35780639010d07c146100d657806391d14854146100f6578063a217fddf14610119578063a32fa5b314610121578063ca15c87314610134578063d547741f14610147575b600080fd5b61009b6100963660046109f3565b61015a565b6040519081526020015b60405180910390f35b6100c16100bc366004610a0c565b61017a565b005b6100c16100d1366004610a0c565b61022e565b6100e96100e4366004610a48565b6102a1565b6040516100a59190610a6a565b610109610104366004610a0c565b61039c565b60405190151581526020016100a5565b61009b600081565b61010961012f366004610a0c565b6103d2565b61009b6101423660046109f3565b610433565b6100c1610155366004610a0c565b6104c8565b6000806101656104fc565b60009384526001016020525050604090205490565b60006101846104fc565b60008481526001820160205260409020549091506101a9906101a4610520565b61059e565b6000838152602082815260408083206001600160a01b038616845290915290205460ff161561021f5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064015b60405180910390fd5b6102298383610629565b505050565b806001600160a01b0316610240610520565b6001600160a01b0316146102935760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610216565b61029d828261063d565b5050565b6000806102ac610651565b600085815260208290526040812054919250805b82811015610391576000878152602085815260408083208484526001019091529020546001600160a01b03161561033c578582141561032a576000878152602094855260408082209282526001909201909452909220546001600160a01b03169250610396915050565b610335600183610a94565b915061037f565b61034787600061039c565b801561036c575060008781526020858152604080832083805260020190915290205481145b1561037f5761037c600183610a94565b91505b61038a600182610a94565b90506102c0565b505050505b92915050565b6000806103a76104fc565b6000948552602090815260408086206001600160a01b03959095168652939052505090205460ff1690565b6000806103dd6104fc565b60008581526020828152604080832083805290915290205490915060ff16610429576000848152602091825260408082206001600160a01b0386168352909252205460ff169050610396565b5060019392505050565b60008061043e610651565b6000848152602082905260408120549192505b818110156104a2576000858152602084815260408083208484526001019091529020546001600160a01b0316156104905761048d600185610a94565b93505b61049b600182610a94565b9050610451565b506104ae84600061039c565b156104c1576104be600184610a94565b92505b5050919050565b60006104d26104fc565b60008481526001820160205260409020549091506104f2906101a4610520565b610229838361063d565b7fd0ebebe8e6445c62babf8fef767eb39f1002bb957bb5b83258275a4e46428ed590565b60405163572b6c0560e01b8152600090309063572b6c0590610546903390600401610a6a565b602060405180830381865afa158015610563573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105879190610aac565b15610599575060131936013560601c90565b503390565b60006105a86104fc565b6000848152602082815260408083206001600160a01b038716845290915290205490915060ff16610229576105e7826001600160a01b03166014610675565b6105f2846020610675565b604051602001610603929190610afe565b60408051601f198184030181529082905262461bcd60e51b825261021691600401610b6b565b6106338282610818565b61029d828261089c565b6106478282610913565b61029d828261099e565b7f0c4ba382c0009cf238e4c1ca1a52f51c61e6248a70bdfb34e5ed49d5578a5c0c90565b60606000610684836002610b9e565b61068f906002610a94565b67ffffffffffffffff8111156106a7576106a7610bbd565b6040519080825280601f01601f1916602001820160405280156106d1576020820181803683370190505b509050600360fc1b816000815181106106ec576106ec610bd3565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061071b5761071b610bd3565b60200101906001600160f81b031916908160001a905350600061073f846002610b9e565b61074a906001610a94565b90505b60018111156107c2576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061077e5761077e610bd3565b1a60f81b82828151811061079457610794610bd3565b60200101906001600160f81b031916908160001a90535060049490941c936107bb81610be9565b905061074d565b5083156108115760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610216565b9392505050565b60006108226104fc565b6000848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790559050610857610520565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4505050565b60006108a6610651565b600084815260208290526040812080549293506001916108c68385610a94565b909155505060009384526020918252604080852082865260018101845281862080546001600160a01b039096166001600160a01b0319909616861790559385526002909301909152912055565b600061091d6104fc565b9050610929838361059e565b6000838152602082815260408083206001600160a01b03861684529091529020805460ff19169055610959610520565b6001600160a01b0316826001600160a01b0316847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4505050565b60006109a8610651565b6000938452602090815260408085206001600160a01b0390941680865260028501808452828720805488526001909601845291862080546001600160a01b0319169055855290525055565b600060208284031215610a0557600080fd5b5035919050565b60008060408385031215610a1f57600080fd5b8235915060208301356001600160a01b0381168114610a3d57600080fd5b809150509250929050565b60008060408385031215610a5b57600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610aa757610aa7610a7e565b500190565b600060208284031215610abe57600080fd5b8151801515811461081157600080fd5b60005b83811015610ae9578181015183820152602001610ad1565b83811115610af8576000848401525b50505050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351610b2e816015850160208801610ace565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351610b5f816026840160208801610ace565b01602601949350505050565b6020815260008251806020840152610b8a816040850160208701610ace565b601f01601f19169190910160400192915050565b6000816000190483118215151615610bb857610bb8610a7e565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081610bf857610bf8610a7e565b50600019019056fea2646970667358221220238a7ab6a1f923856ef4aca0d85649996816d01cbe53cf1901c03614ddd7716d64736f6c634300080c0033",
    "sourceMap": "172:750:191:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3313:213:181;;;;;;:::i;:::-;;:::i;:::-;;;345:25:640;;;333:2;318:18;3313:213:181;;;;;;;;3921:371;;;;;;:::i;:::-;;:::i;:::-;;5327:219;;;;;;:::i;:::-;;:::i;2094:771:182:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1706:224:181:-;;;;;;:::i;:::-;;:::i;:::-;;;1366:14:640;;1359:22;1341:41;;1329:2;1314:18;1706:224:181;1201:187:640;1122:49:181;;1167:4;1122:49;;2681:309;;;;;;:::i;:::-;;:::i;3272:526:182:-;;;;;;:::i;:::-;;:::i;4663:266:181:-;;;;;;:::i;:::-;;:::i;3313:213::-;3381:7;3400:36;3439:39;:37;:39::i;:::-;3495:24;;;;:18;;:24;;-1:-1:-1;;3495:24:181;;;;;3313:213::o;3921:371::-;4005:36;4044:39;:37;:39::i;:::-;4104:24;;;;:18;;;:24;;;;;;4005:78;;-1:-1:-1;4093:50:181;;4130:12;:10;:12::i;:::-;4093:10;:50::i;:::-;4157:13;:19;;;;;;;;;;;-1:-1:-1;;;;;4157:28:181;;;;;;;;;;;;4153:98;;;4201:39;;-1:-1:-1;;;4201:39:181;;1777:2:640;4201:39:181;;;1759:21:640;1816:2;1796:18;;;1789:30;1855:31;1835:18;;;1828:59;1904:18;;4201:39:181;;;;;;;;4153:98;4260:25;4271:4;4277:7;4260:10;:25::i;:::-;3995:297;3921:371;;:::o;5327:219::-;5434:7;-1:-1:-1;;;;;5418:23:181;:12;:10;:12::i;:::-;-1:-1:-1;;;;;5418:23:181;;5414:90;;5457:36;;-1:-1:-1;;;5457:36:181;;2135:2:640;5457:36:181;;;2117:21:640;2174:2;2154:18;;;2147:30;-1:-1:-1;;;2193:18:640;;;2186:56;2259:18;;5457:36:181;1933:350:640;5414:90:181;5513:26;5525:4;5531:7;5513:11;:26::i;:::-;5327:219;;:::o;2094:771:182:-;2178:14;2204:46;2253:59;:57;:59::i;:::-;2322:20;2345:22;;;;;;;;;;:28;2204:108;;-1:-1:-1;2322:20:182;2407:452;2431:12;2427:1;:16;2407:452;;;2516:1;2471:22;;;;;;;;;;;:33;;;:30;;:33;;;;;;-1:-1:-1;;;;;2471:33:182;:47;2467:382;;2551:5;2542;:14;2538:138;;;2589:16;:22;;;;;;;;;;;:33;;;:30;;;;:33;;;;;;;-1:-1:-1;;;;;2589:33:182;;-1:-1:-1;2644:13:182;;-1:-1:-1;;2644:13:182;2538:138;2693:10;2702:1;2693:10;;:::i;:::-;;;2467:382;;;2728:25;2736:4;2750:1;2728:7;:25::i;:::-;:76;;;;-1:-1:-1;2762:16:182;:22;;;;;;;;;;;:42;;;:30;;:42;;;;;;2757:47;;2728:76;2724:125;;;2824:10;2833:1;2824:10;;:::i;:::-;;;2724:125;2445:6;2450:1;2445:6;;:::i;:::-;;;2407:452;;;;2194:671;;;2094:771;;;;;:::o;1706:224:181:-;1784:4;1800:36;1839:39;:37;:39::i;:::-;1895:13;:19;;;;;;;;;;;-1:-1:-1;;;;;1895:28:181;;;;;;;;;-1:-1:-1;;1895:28:181;;;;;;1706:224::o;2681:309::-;2760:4;2776:36;2815:39;:37;:39::i;:::-;2869:13;:19;;;;;;;;;;;:31;;;;;;;;;2776:78;;-1:-1:-1;2869:31:181;;2864:98;;2923:13;:19;;;;;;;;;;;-1:-1:-1;;;;;2923:28:181;;;;;;;;;;;;-1:-1:-1;2916:35:181;;2864:98;-1:-1:-1;2979:4:181;;2681:309;-1:-1:-1;;;2681:309:181:o;3272:526:182:-;3346:13;3371:46;3420:59;:57;:59::i;:::-;3489:20;3512:22;;;;;;;;;;:28;3371:108;;-1:-1:-1;3551:166:182;3575:12;3571:1;:16;3551:166;;;3660:1;3615:22;;;;;;;;;;;:33;;;:30;;:33;;;;;;-1:-1:-1;;;;;3615:33:182;:47;3611:96;;3682:10;3691:1;3682:10;;:::i;:::-;;;3611:96;3589:6;3594:1;3589:6;;:::i;:::-;;;3551:166;;;;3730:25;3738:4;3752:1;3730:7;:25::i;:::-;3726:66;;;3771:10;3780:1;3771:10;;:::i;:::-;;;3726:66;3361:437;;3272:526;;;:::o;4663:266:181:-;4748:36;4787:39;:37;:39::i;:::-;4847:24;;;;:18;;;:24;;;;;;4748:78;;-1:-1:-1;4836:50:181;;4873:12;:10;:12::i;4836:50::-;4896:26;4908:4;4914:7;4896:11;:26::i;748:221::-;382:32;;748:221::o;238:416:191:-;322:61;;-1:-1:-1;;;322:61:191;;292:14;;346:4;;322:49;;:61;;372:10;;322:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;318:330;;;-1:-1:-1;;;555:14:191;551:23;538:37;534:2;530:46;238:416;:::o;318:330::-;-1:-1:-1;627:10:191;;238:416::o;6708:588:181:-;6791:36;6830:39;:37;:39::i;:::-;6884:13;:19;;;;;;;;;;;-1:-1:-1;;;;;6884:28:181;;;;;;;;;;6791:78;;-1:-1:-1;6884:28:181;;6879:411;;7071:43;7101:7;-1:-1:-1;;;;;7071:43:181;7111:2;7071:21;:43::i;:::-;7185:40;7215:4;7222:2;7185:21;:40::i;:::-;6980:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6980:267:181;;;;;;;;;;-1:-1:-1;;;6928:351:181;;;;;;;:::i;4200:160:182:-;4287:31;4304:4;4310:7;4287:16;:31::i;:::-;4328:25;4339:4;4345:7;4328:10;:25::i;3922:165::-;4010:32;4028:4;4034:7;4010:17;:32::i;:::-;4052:28;4066:4;4072:7;4052:13;:28::i;1217:262::-;523:43;;1217:262::o;1565:441:294:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;1687:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:294;;1665:47;;-1:-1:-1;;;1722:6:294;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:294;;;;;;;;;-1:-1:-1;;;1747:6:294;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:294;;;;;;;;-1:-1:-1;1777:9:294;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:294;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:294;;;;;;;;-1:-1:-1;1892:1:294;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:294;;1913:55;;;;-1:-1:-1;;;1913:55:294;;5055:2:640;1913:55:294;;;5037:21:640;;;5074:18;;;5067:30;5133:34;5113:18;;;5106:62;5185:18;;1913:55:294;4853:356:640;1913:55:294;1992:6;1565:441;-1:-1:-1;;;1565:441:294:o;5997:263:181:-;6075:36;6114:39;:37;:39::i;:::-;6163:13;:19;;;;;;;;;;;-1:-1:-1;;;;;6163:28:181;;;;;;;;;:35;;-1:-1:-1;;6163:35:181;6194:4;6163:35;;;6075:78;-1:-1:-1;6240:12:181;:10;:12::i;:::-;-1:-1:-1;;;;;6213:40:181;6231:7;-1:-1:-1;;;;;6213:40:181;6225:4;6213:40;;;;;;;;;;6065:195;5997:263;;:::o;4423:391:182:-;4493:46;4542:59;:57;:59::i;:::-;4611:11;4625:22;;;;;;;;;;:28;;4493:108;;-1:-1:-1;4695:1:182;;4663:33;4695:1;4625:28;4663:33;:::i;:::-;;;;-1:-1:-1;;4707:16:182;:22;;;;;;;;;;;:35;;;:30;;;:35;;;;;:45;;-1:-1:-1;;;;;4707:45:182;;;-1:-1:-1;;;;;;4707:45:182;;;;;;;4762:39;;;:30;;;;:39;;;;;:45;4423:391::o;6309:299:181:-;6388:36;6427:39;:37;:39::i;:::-;6388:78;;6476:25;6487:4;6493:7;6476:10;:25::i;:::-;6518:13;:19;;;;;;;;;;;-1:-1:-1;;;;;6518:28:181;;;;;;;;;6511:35;;-1:-1:-1;;6511:35:181;;;6588:12;:10;:12::i;:::-;-1:-1:-1;;;;;6561:40:181;6579:7;-1:-1:-1;;;;;6561:40:181;6573:4;6561:40;;;;;;;;;;6378:230;6309:299;;:::o;4882:360:182:-;4955:46;5004:59;:57;:59::i;:::-;5073:11;5087:22;;;;;;;;;;;-1:-1:-1;;;;;5087:39:182;;;;;;:30;;;:39;;;;;;;;5144:35;;:30;;;;:35;;;;;5137:42;;-1:-1:-1;;;;;;5137:42:182;;;5196:39;;;;-1:-1:-1;5189:46:182;4882:360::o;14:180:640:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:640;;14:180;-1:-1:-1;14:180:640:o;381:354::-;449:6;457;510:2;498:9;489:7;485:23;481:32;478:52;;;526:1;523;516:12;478:52;549:23;;;-1:-1:-1;622:2:640;607:18;;594:32;-1:-1:-1;;;;;655:31:640;;645:42;;635:70;;701:1;698;691:12;635:70;724:5;714:15;;;381:354;;;;;:::o;740:248::-;808:6;816;869:2;857:9;848:7;844:23;840:32;837:52;;;885:1;882;875:12;837:52;-1:-1:-1;;908:23:640;;;978:2;963:18;;;950:32;;-1:-1:-1;740:248:640:o;993:203::-;-1:-1:-1;;;;;1157:32:640;;;;1139:51;;1127:2;1112:18;;993:203::o;2288:127::-;2349:10;2344:3;2340:20;2337:1;2330:31;2380:4;2377:1;2370:15;2404:4;2401:1;2394:15;2420:128;2460:3;2491:1;2487:6;2484:1;2481:13;2478:39;;;2497:18;;:::i;:::-;-1:-1:-1;2533:9:640;;2420:128::o;2553:277::-;2620:6;2673:2;2661:9;2652:7;2648:23;2644:32;2641:52;;;2689:1;2686;2679:12;2641:52;2721:9;2715:16;2774:5;2767:13;2760:21;2753:5;2750:32;2740:60;;2796:1;2793;2786:12;2835:258;2907:1;2917:113;2931:6;2928:1;2925:13;2917:113;;;3007:11;;;3001:18;2988:11;;;2981:39;2953:2;2946:10;2917:113;;;3048:6;3045:1;3042:13;3039:48;;;3083:1;3074:6;3069:3;3065:16;3058:27;3039:48;;2835:258;;;:::o;3098:784::-;-1:-1:-1;;;3504:3:640;3497:36;3479:3;3562:6;3556:13;3578:62;3633:6;3628:2;3623:3;3619:12;3612:4;3604:6;3600:17;3578:62;:::i;:::-;-1:-1:-1;;;3699:2:640;3659:16;;;3691:11;;;3684:40;3749:13;;3771:63;3749:13;3820:2;3812:11;;3805:4;3793:17;;3771:63;:::i;:::-;3854:17;3873:2;3850:26;;3098:784;-1:-1:-1;;;;3098:784:640:o;3887:383::-;4036:2;4025:9;4018:21;3999:4;4068:6;4062:13;4111:6;4106:2;4095:9;4091:18;4084:34;4127:66;4186:6;4181:2;4170:9;4166:18;4161:2;4153:6;4149:15;4127:66;:::i;:::-;4254:2;4233:15;-1:-1:-1;;4229:29:640;4214:45;;;;4261:2;4210:54;;3887:383;-1:-1:-1;;3887:383:640:o;4275:168::-;4315:7;4381:1;4377;4373:6;4369:14;4366:1;4363:21;4358:1;4351:9;4344:17;4340:45;4337:71;;;4388:18;;:::i;:::-;-1:-1:-1;4428:9:640;;4275:168::o;4448:127::-;4509:10;4504:3;4500:20;4497:1;4490:31;4540:4;4537:1;4530:15;4564:4;4561:1;4554:15;4580:127;4641:10;4636:3;4632:20;4629:1;4622:31;4672:4;4669:1;4662:15;4696:4;4693:1;4686:15;4712:136;4751:3;4779:5;4769:39;;4788:18;;:::i;:::-;-1:-1:-1;;;4824:18:640;;4712:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/upgradeable/impl/PermissionsEnumerableImpl.sol\":\"PermissionsEnumerableImpl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/extension/interface/IERC2771Context.sol\":{\"keccak256\":\"0x47c68c2b49d42008eb5fe42cf7cde539c380c37fc58927ca65711f846da28ca1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e8a91fd4dd913f5d26dd9594c8159324efe2a3530e92d8d27753e61db5b1dc41\",\"dweb:/ipfs/QmZUgkaF894U6EK1wnNiLnGmEa7fJoVkhagAiAkxwRdAnp\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/upgradeable/Permissions.sol\":{\"keccak256\":\"0x4fd1e41f24b6c2a04c47f6fd5d6a6a8bf7f72b813cbc202fcf01ce70977a87df\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://00b8f085918fe25fcf41c0f8c9e1c94e54337dcaeefe7708dd793e4a7cfb64f6\",\"dweb:/ipfs/QmYDnhfxd4561bPH2M3sHWSYk5fqXxHqxwmFCANiP9aR88\"]},\"contracts/extension/upgradeable/PermissionsEnumerable.sol\":{\"keccak256\":\"0xcbcfff0decaff6c3ddb93886a153d36adcd1807c5822d82e96621314239be29f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://eaece315d05e8da5b279519a5e04ed39f14d41561f27f6ba6eb380031ed8fbe9\",\"dweb:/ipfs/QmNxygN27gzj5fBEg5rzVxhbTYVSJMjKqqw66TCQv6yyfQ\"]},\"contracts/extension/upgradeable/impl/PermissionsEnumerableImpl.sol\":{\"keccak256\":\"0x709981918a70e4bdb42473a84c54ad05f5b6f0d72b641e41031ca56a2baff35f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed2f1b5bef515393ccc4373b51eddcbc94676dbf24522b561c85d37108e3f435\",\"dweb:/ipfs/QmZqiA5wALnh3QVLXA5XFLC2nLA7GDUwpR7wdkoBTLwiu2\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/extension/upgradeable/impl/PermissionsEnumerableImpl.sol": "PermissionsEnumerableImpl"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/extension/interface/IERC2771Context.sol": {
        "keccak256": "0x47c68c2b49d42008eb5fe42cf7cde539c380c37fc58927ca65711f846da28ca1",
        "urls": [
          "bzz-raw://e8a91fd4dd913f5d26dd9594c8159324efe2a3530e92d8d27753e61db5b1dc41",
          "dweb:/ipfs/QmZUgkaF894U6EK1wnNiLnGmEa7fJoVkhagAiAkxwRdAnp"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Permissions.sol": {
        "keccak256": "0x4fd1e41f24b6c2a04c47f6fd5d6a6a8bf7f72b813cbc202fcf01ce70977a87df",
        "urls": [
          "bzz-raw://00b8f085918fe25fcf41c0f8c9e1c94e54337dcaeefe7708dd793e4a7cfb64f6",
          "dweb:/ipfs/QmYDnhfxd4561bPH2M3sHWSYk5fqXxHqxwmFCANiP9aR88"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/PermissionsEnumerable.sol": {
        "keccak256": "0xcbcfff0decaff6c3ddb93886a153d36adcd1807c5822d82e96621314239be29f",
        "urls": [
          "bzz-raw://eaece315d05e8da5b279519a5e04ed39f14d41561f27f6ba6eb380031ed8fbe9",
          "dweb:/ipfs/QmNxygN27gzj5fBEg5rzVxhbTYVSJMjKqqw66TCQv6yyfQ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/impl/PermissionsEnumerableImpl.sol": {
        "keccak256": "0x709981918a70e4bdb42473a84c54ad05f5b6f0d72b641e41031ca56a2baff35f",
        "urls": [
          "bzz-raw://ed2f1b5bef515393ccc4373b51eddcbc94676dbf24522b561c85d37108e3f435",
          "dweb:/ipfs/QmZqiA5wALnh3QVLXA5XFLC2nLA7GDUwpR7wdkoBTLwiu2"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/extension/upgradeable/impl/PermissionsEnumerableImpl.sol",
    "id": 44016,
    "exportedSymbols": {
      "IERC2771Context": [
        33568
      ],
      "IPermissions": [
        34032
      ],
      "IPermissionsEnumerable": [
        34057
      ],
      "Permissions": [
        42095
      ],
      "PermissionsEnumerable": [
        42465
      ],
      "PermissionsEnumerableImpl": [
        44015
      ],
      "PermissionsEnumerableStorage": [
        42136
      ],
      "PermissionsStorage": [
        41652
      ],
      "TWStrings": [
        65550
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:884:191",
    "nodes": [
      {
        "id": 43954,
        "nodeType": "PragmaDirective",
        "src": "39:23:191",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 43955,
        "nodeType": "ImportDirective",
        "src": "86:45:191",
        "nodes": [],
        "absolutePath": "contracts/extension/interface/IERC2771Context.sol",
        "file": "../../interface/IERC2771Context.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44016,
        "sourceUnit": 33569,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 43956,
        "nodeType": "ImportDirective",
        "src": "132:38:191",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/PermissionsEnumerable.sol",
        "file": "../PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44016,
        "sourceUnit": 42466,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44015,
        "nodeType": "ContractDefinition",
        "src": "172:750:191",
        "nodes": [
          {
            "id": 43982,
            "nodeType": "FunctionDefinition",
            "src": "238:416:191",
            "nodes": [],
            "body": {
              "id": 43981,
              "nodeType": "Block",
              "src": "308:346:191",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 43971,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "372:3:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 43972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "372:10:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 43967,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "346:4:191",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PermissionsEnumerableImpl_$44015",
                                  "typeString": "contract PermissionsEnumerableImpl"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PermissionsEnumerableImpl_$44015",
                                  "typeString": "contract PermissionsEnumerableImpl"
                                }
                              ],
                              "id": 43966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "338:7:191",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 43965,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "338:7:191",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 43968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "338:13:191",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 43964,
                          "name": "IERC2771Context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33568,
                          "src": "322:15:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC2771Context_$33568_$",
                            "typeString": "type(contract IERC2771Context)"
                          }
                        },
                        "id": 43969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "322:30:191",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC2771Context_$33568",
                          "typeString": "contract IERC2771Context"
                        }
                      },
                      "id": 43970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isTrustedForwarder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33567,
                      "src": "322:49:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 43973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "322:61:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 43979,
                    "nodeType": "Block",
                    "src": "606:42:191",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 43976,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "627:3:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 43977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "627:10:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 43963,
                        "id": 43978,
                        "nodeType": "Return",
                        "src": "620:17:191"
                      }
                    ]
                  },
                  "id": 43980,
                  "nodeType": "IfStatement",
                  "src": "318:330:191",
                  "trueBody": {
                    "id": 43975,
                    "nodeType": "Block",
                    "src": "385:215:191",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "502:88:191",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "520:56:191",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "534:2:191",
                                    "type": "",
                                    "value": "96"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "calldatasize",
                                              "nodeType": "YulIdentifier",
                                              "src": "555:12:191"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "555:14:191"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "571:2:191",
                                            "type": "",
                                            "value": "20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "551:3:191"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "551:23:191"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "538:12:191"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "538:37:191"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "530:3:191"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "530:46:191"
                              },
                              "variableNames": [
                                {
                                  "name": "sender",
                                  "nodeType": "YulIdentifier",
                                  "src": "520:6:191"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 43962,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "520:6:191",
                            "valueSize": 1
                          }
                        ],
                        "id": 43974,
                        "nodeType": "InlineAssembly",
                        "src": "493:97:191"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              42085
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "247:10:191",
            "overrides": {
              "id": 43960,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "274:8:191"
            },
            "parameters": {
              "id": 43959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "257:2:191"
            },
            "returnParameters": {
              "id": 43963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43962,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "300:6:191",
                  "nodeType": "VariableDeclaration",
                  "scope": 43982,
                  "src": "292:14:191",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43961,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "292:7:191",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "291:16:191"
            },
            "scope": 44015,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 44014,
            "nodeType": "FunctionDefinition",
            "src": "660:260:191",
            "nodes": [],
            "body": {
              "id": 44013,
              "nodeType": "Block",
              "src": "728:192:191",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 43995,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "792:3:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 43996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "792:10:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 43991,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "766:4:191",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PermissionsEnumerableImpl_$44015",
                                  "typeString": "contract PermissionsEnumerableImpl"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PermissionsEnumerableImpl_$44015",
                                  "typeString": "contract PermissionsEnumerableImpl"
                                }
                              ],
                              "id": 43990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "758:7:191",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 43989,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "758:7:191",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 43992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "758:13:191",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 43988,
                          "name": "IERC2771Context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33568,
                          "src": "742:15:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC2771Context_$33568_$",
                            "typeString": "type(contract IERC2771Context)"
                          }
                        },
                        "id": 43993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "742:30:191",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC2771Context_$33568",
                          "typeString": "contract IERC2771Context"
                        }
                      },
                      "id": 43994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isTrustedForwarder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33567,
                      "src": "742:49:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 43997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "742:61:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 44011,
                    "nodeType": "Block",
                    "src": "874:40:191",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 44008,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "895:3:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 44009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "895:8:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 43987,
                        "id": 44010,
                        "nodeType": "Return",
                        "src": "888:15:191"
                      }
                    ]
                  },
                  "id": 44012,
                  "nodeType": "IfStatement",
                  "src": "738:176:191",
                  "trueBody": {
                    "id": 44007,
                    "nodeType": "Block",
                    "src": "805:63:191",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "id": 43998,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "826:3:191",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 43999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "data",
                            "nodeType": "MemberAccess",
                            "src": "826:8:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "endExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 44004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "id": 44000,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "836:3:191",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 44001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "data",
                                "nodeType": "MemberAccess",
                                "src": "836:8:191",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              },
                              "id": 44002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "836:15:191",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "3230",
                              "id": 44003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "854:2:191",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_20_by_1",
                                "typeString": "int_const 20"
                              },
                              "value": "20"
                            },
                            "src": "836:20:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 44005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexRangeAccess",
                          "src": "826:31:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          }
                        },
                        "functionReturnParameters": 43987,
                        "id": 44006,
                        "nodeType": "Return",
                        "src": "819:38:191"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              42094
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "669:8:191",
            "overrides": {
              "id": 43984,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "694:8:191"
            },
            "parameters": {
              "id": 43983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "677:2:191"
            },
            "returnParameters": {
              "id": 43987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43986,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44014,
                  "src": "712:14:191",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 43985,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "712:5:191",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "711:16:191"
            },
            "scope": 44015,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 43957,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42465,
              "src": "210:21:191"
            },
            "id": 43958,
            "nodeType": "InheritanceSpecifier",
            "src": "210:21:191"
          }
        ],
        "canonicalName": "PermissionsEnumerableImpl",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          44015,
          42465,
          42095,
          34057,
          34032
        ],
        "name": "PermissionsEnumerableImpl",
        "nameLocation": "181:25:191",
        "scope": 44016,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 191
}